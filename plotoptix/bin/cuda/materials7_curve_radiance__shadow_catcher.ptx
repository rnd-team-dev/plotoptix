//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__curve_radiance__shadow_catcher
.const .align 8 .b8 params[288];

.visible .entry __closesthit__curve_radiance__shadow_catcher()
{
	.reg .pred 	%p<106>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<3595>;
	.reg .b32 	%r<1173>;
	.reg .b64 	%rd<796>;


	// begin inline asm
	call (%rd50), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r74), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r75, 3;
	// begin inline asm
	call _optix_set_payload, (%r75, %r74);
	// end inline asm
	// begin inline asm
	call (%f1228), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f1229), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f1230), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f1231), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f1232), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1233), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f1234), _optix_get_world_ray_direction_z, ();
	// end inline asm
	fma.rn.ftz.f32 	%f1, %f1231, %f1232, %f1228;
	fma.rn.ftz.f32 	%f2, %f1231, %f1233, %f1229;
	fma.rn.ftz.f32 	%f3, %f1231, %f1234, %f1230;
	// begin inline asm
	call (%r77), _optix_get_hit_kind, ();
	// end inline asm
	// begin inline asm
	call (%r78), _optix_get_primitive_type_from_hit_kind, (%r77);
	// end inline asm
	setp.eq.s32 	%p1, %r78, 9473;
	@%p1 bra 	$L__BB0_95;

	setp.eq.s32 	%p2, %r78, 9474;
	@%p2 bra 	$L__BB0_49;

	setp.ne.s32 	%p3, %r78, 9475;
	@%p3 bra 	$L__BB0_141;

	// begin inline asm
	call (%rd51), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r81), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f1244, 0f00000000;
	// begin inline asm
	call (%f1236, %f1237, %f1238, %f1239,  %f1240, %f1241, %f1242, %f1243), _optix_get_linear_curve_vertex_data, (%rd51, %r74, %r81, %f1244);
	// end inline asm
	sub.ftz.f32 	%f13, %f1240, %f1236;
	sub.ftz.f32 	%f15, %f1241, %f1237;
	sub.ftz.f32 	%f17, %f1242, %f1238;
	// begin inline asm
	call (%r84), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p4, %r84, 0;
	@%p4 bra 	$L__BB0_23;

	// begin inline asm
	call (%r85), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1245), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p5, %r85, 0;
	@%p5 bra 	$L__BB0_22;

	mov.u32 	%r1161, 0;

$L__BB0_6:
	.pragma "nounroll";
	// begin inline asm
	call (%rd53), _optix_get_transform_list_handle, (%r1161);
	// end inline asm
	// begin inline asm
	call (%r88), _optix_get_transform_type_from_handle, (%rd53);
	// end inline asm
	or.b32  	%r89, %r88, 1;
	setp.eq.s32 	%p6, %r89, 3;
	@%p6 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_7;

$L__BB0_12:
	setp.eq.s32 	%p9, %r88, 2;
	@%p9 bra 	$L__BB0_16;
	bra.uni 	$L__BB0_13;

$L__BB0_16:
	// begin inline asm
	call (%rd125), _optix_get_matrix_motion_transform_from_handle, (%rd53);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd127, %rd125;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r177,%r178,%r179,%r180}, [%rd127];
	// end inline asm
	add.s64 	%rd131, %rd125, 16;
	// begin inline asm
	cvta.to.global.u64 %rd130, %rd131;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r181,%r182,%r183,%r184}, [%rd130];
	// end inline asm
	add.s64 	%rd134, %rd125, 32;
	// begin inline asm
	cvta.to.global.u64 %rd133, %rd134;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r185,%r186,%r187,%r188}, [%rd133];
	// end inline asm
	add.s64 	%rd137, %rd125, 48;
	// begin inline asm
	cvta.to.global.u64 %rd136, %rd137;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r189,%r190,%r191,%r192}, [%rd136];
	// end inline asm
	add.s64 	%rd140, %rd125, 64;
	// begin inline asm
	cvta.to.global.u64 %rd139, %rd140;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r193,%r194,%r195,%r196}, [%rd139];
	// end inline asm
	add.s64 	%rd143, %rd125, 80;
	// begin inline asm
	cvta.to.global.u64 %rd142, %rd143;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r197,%r198,%r199,%r200}, [%rd142];
	// end inline asm
	add.s64 	%rd146, %rd125, 96;
	// begin inline asm
	cvta.to.global.u64 %rd145, %rd146;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r201,%r202,%r203,%r204}, [%rd145];
	// end inline asm
	add.s64 	%rd149, %rd125, 112;
	// begin inline asm
	cvta.to.global.u64 %rd148, %rd149;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r205,%r206,%r207,%r208}, [%rd148];
	// end inline asm
	mov.b32 	%f1372, %r180;
	mov.b32 	%f1373, %r181;
	and.b32  	%r221, %r179, 65535;
	add.s32 	%r222, %r221, -1;
	cvt.rn.f32.s32 	%f1374, %r222;
	sub.ftz.f32 	%f1375, %f1245, %f1372;
	mul.ftz.f32 	%f1376, %f1375, %f1374;
	sub.ftz.f32 	%f1377, %f1373, %f1372;
	div.approx.ftz.f32 	%f1378, %f1376, %f1377;
	min.ftz.f32 	%f1379, %f1374, %f1378;
	mov.f32 	%f1380, 0f00000000;
	max.ftz.f32 	%f1381, %f1380, %f1379;
	cvt.rmi.ftz.f32.f32 	%f1382, %f1381;
	sub.ftz.f32 	%f104, %f1381, %f1382;
	cvt.rzi.ftz.s32.f32 	%r223, %f1382;
	cvt.s64.s32 	%rd8, %r223;
	mul.wide.s32 	%rd160, %r223, 48;
	add.s64 	%rd152, %rd134, %rd160;
	// begin inline asm
	cvta.to.global.u64 %rd151, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r209,%r210,%r211,%r212}, [%rd151];
	// end inline asm
	mov.b32 	%f3187, %r209;
	mov.b32 	%f3186, %r210;
	mov.b32 	%f3185, %r211;
	mov.b32 	%f3184, %r212;
	add.s64 	%rd155, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd155;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r213,%r214,%r215,%r216}, [%rd154];
	// end inline asm
	mov.b32 	%f3191, %r213;
	mov.b32 	%f3190, %r214;
	mov.b32 	%f3189, %r215;
	mov.b32 	%f3188, %r216;
	add.s64 	%rd158, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r217,%r218,%r219,%r220}, [%rd157];
	// end inline asm
	mov.b32 	%f3195, %r217;
	mov.b32 	%f3194, %r218;
	mov.b32 	%f3193, %r219;
	mov.b32 	%f3192, %r220;
	setp.leu.ftz.f32 	%p11, %f104, 0f00000000;
	@%p11 bra 	$L__BB0_18;

	mov.f32 	%f1383, 0f3F800000;
	sub.ftz.f32 	%f1384, %f1383, %f104;
	mul.lo.s64 	%rd170, %rd8, 48;
	add.s64 	%rd171, %rd125, %rd170;
	add.s64 	%rd162, %rd171, 80;
	// begin inline asm
	cvta.to.global.u64 %rd161, %rd162;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r224,%r225,%r226,%r227}, [%rd161];
	// end inline asm
	mov.b32 	%f1385, %r224;
	mov.b32 	%f1386, %r225;
	mov.b32 	%f1387, %r226;
	mov.b32 	%f1388, %r227;
	mul.ftz.f32 	%f1389, %f104, %f1385;
	mul.ftz.f32 	%f1390, %f104, %f1386;
	mul.ftz.f32 	%f1391, %f104, %f1387;
	mul.ftz.f32 	%f1392, %f104, %f1388;
	fma.rn.ftz.f32 	%f3187, %f1384, %f3187, %f1389;
	fma.rn.ftz.f32 	%f3186, %f1384, %f3186, %f1390;
	fma.rn.ftz.f32 	%f3185, %f1384, %f3185, %f1391;
	fma.rn.ftz.f32 	%f3184, %f1384, %f3184, %f1392;
	add.s64 	%rd165, %rd171, 96;
	// begin inline asm
	cvta.to.global.u64 %rd164, %rd165;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r228,%r229,%r230,%r231}, [%rd164];
	// end inline asm
	mov.b32 	%f1393, %r228;
	mov.b32 	%f1394, %r229;
	mov.b32 	%f1395, %r230;
	mov.b32 	%f1396, %r231;
	mul.ftz.f32 	%f1397, %f104, %f1393;
	mul.ftz.f32 	%f1398, %f104, %f1394;
	mul.ftz.f32 	%f1399, %f104, %f1395;
	mul.ftz.f32 	%f1400, %f104, %f1396;
	fma.rn.ftz.f32 	%f3191, %f1384, %f3191, %f1397;
	fma.rn.ftz.f32 	%f3190, %f1384, %f3190, %f1398;
	fma.rn.ftz.f32 	%f3189, %f1384, %f3189, %f1399;
	fma.rn.ftz.f32 	%f3188, %f1384, %f3188, %f1400;
	add.s64 	%rd168, %rd171, 112;
	// begin inline asm
	cvta.to.global.u64 %rd167, %rd168;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r232,%r233,%r234,%r235}, [%rd167];
	// end inline asm
	mov.b32 	%f1401, %r232;
	mov.b32 	%f1402, %r233;
	mov.b32 	%f1403, %r234;
	mov.b32 	%f1404, %r235;
	mul.ftz.f32 	%f1405, %f104, %f1401;
	mul.ftz.f32 	%f1406, %f104, %f1402;
	mul.ftz.f32 	%f1407, %f104, %f1403;
	mul.ftz.f32 	%f1408, %f104, %f1404;
	fma.rn.ftz.f32 	%f3195, %f1384, %f3195, %f1405;
	fma.rn.ftz.f32 	%f3194, %f1384, %f3194, %f1406;
	fma.rn.ftz.f32 	%f3193, %f1384, %f3193, %f1407;
	fma.rn.ftz.f32 	%f3192, %f1384, %f3192, %f1408;
	bra.uni 	$L__BB0_18;

$L__BB0_7:
	mov.f32 	%f3199, 0f3F800000;
	setp.eq.s32 	%p7, %r88, 4;
	@%p7 bra 	$L__BB0_10;

	setp.ne.s32 	%p8, %r88, 1;
	mov.f32 	%f3196, %f1244;
	mov.f32 	%f3197, %f1244;
	mov.f32 	%f3198, %f1244;
	mov.f32 	%f3200, %f1244;
	mov.f32 	%f3201, %f1244;
	mov.f32 	%f3202, %f3199;
	mov.f32 	%f3203, %f1244;
	mov.f32 	%f3204, %f1244;
	mov.f32 	%f3205, %f3199;
	mov.f32 	%f3206, %f1244;
	mov.f32 	%f3207, %f1244;
	@%p8 bra 	$L__BB0_19;

	// begin inline asm
	call (%rd55), _optix_get_static_transform_from_handle, (%rd53);
	// end inline asm
	add.s64 	%rd789, %rd55, 64;
	bra.uni 	$L__BB0_11;

$L__BB0_13:
	// begin inline asm
	call (%rd68), _optix_get_srt_motion_transform_from_handle, (%rd53);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd70, %rd68;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd70];
	// end inline asm
	add.s64 	%rd74, %rd68, 16;
	// begin inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd73];
	// end inline asm
	add.s64 	%rd77, %rd68, 32;
	// begin inline asm
	cvta.to.global.u64 %rd76, %rd77;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd76];
	// end inline asm
	add.s64 	%rd80, %rd68, 48;
	// begin inline asm
	cvta.to.global.u64 %rd79, %rd80;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd79];
	// end inline asm
	add.s64 	%rd83, %rd68, 64;
	// begin inline asm
	cvta.to.global.u64 %rd82, %rd83;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd82];
	// end inline asm
	add.s64 	%rd86, %rd68, 80;
	// begin inline asm
	cvta.to.global.u64 %rd85, %rd86;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd85];
	// end inline asm
	add.s64 	%rd89, %rd68, 96;
	// begin inline asm
	cvta.to.global.u64 %rd88, %rd89;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd88];
	// end inline asm
	add.s64 	%rd92, %rd68, 112;
	// begin inline asm
	cvta.to.global.u64 %rd91, %rd92;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd91];
	// end inline asm
	add.s64 	%rd95, %rd68, 128;
	// begin inline asm
	cvta.to.global.u64 %rd94, %rd95;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd94];
	// end inline asm
	add.s64 	%rd98, %rd68, 144;
	// begin inline asm
	cvta.to.global.u64 %rd97, %rd98;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd97];
	// end inline asm
	mov.b32 	%f1260, %r105;
	mov.b32 	%f1261, %r106;
	and.b32  	%r158, %r104, 65535;
	add.s32 	%r159, %r158, -1;
	cvt.rn.f32.s32 	%f1262, %r159;
	sub.ftz.f32 	%f1263, %f1245, %f1260;
	mul.ftz.f32 	%f1264, %f1263, %f1262;
	sub.ftz.f32 	%f1265, %f1261, %f1260;
	div.approx.ftz.f32 	%f1266, %f1264, %f1265;
	min.ftz.f32 	%f1267, %f1262, %f1266;
	mov.f32 	%f1268, 0f00000000;
	max.ftz.f32 	%f1269, %f1268, %f1267;
	cvt.rmi.ftz.f32.f32 	%f1270, %f1269;
	sub.ftz.f32 	%f43, %f1269, %f1270;
	cvt.rzi.ftz.s32.f32 	%r160, %f1270;
	mul.wide.s32 	%rd112, %r160, 64;
	add.s64 	%rd101, %rd77, %rd112;
	// begin inline asm
	cvta.to.global.u64 %rd100, %rd101;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd100];
	// end inline asm
	mov.b32 	%f3168, %r142;
	mov.b32 	%f3169, %r143;
	mov.b32 	%f3170, %r144;
	mov.b32 	%f3171, %r145;
	add.s64 	%rd104, %rd101, 16;
	// begin inline asm
	cvta.to.global.u64 %rd103, %rd104;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r146,%r147,%r148,%r149}, [%rd103];
	// end inline asm
	mov.b32 	%f3172, %r146;
	mov.b32 	%f3173, %r147;
	mov.b32 	%f3174, %r148;
	mov.b32 	%f3175, %r149;
	add.s64 	%rd107, %rd101, 32;
	// begin inline asm
	cvta.to.global.u64 %rd106, %rd107;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r150,%r151,%r152,%r153}, [%rd106];
	// end inline asm
	mov.b32 	%f3176, %r150;
	mov.b32 	%f3177, %r151;
	mov.b32 	%f3178, %r152;
	mov.b32 	%f3179, %r153;
	add.s64 	%rd110, %rd101, 48;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r154,%r155,%r156,%r157}, [%rd109];
	// end inline asm
	mov.b32 	%f3180, %r154;
	mov.b32 	%f3181, %r155;
	mov.b32 	%f3182, %r156;
	mov.b32 	%f3183, %r157;
	setp.leu.ftz.f32 	%p10, %f43, 0f00000000;
	@%p10 bra 	$L__BB0_15;

	mov.f32 	%f1271, 0f3F800000;
	sub.ftz.f32 	%f1272, %f1271, %f43;
	add.s64 	%rd114, %rd101, 64;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r161,%r162,%r163,%r164}, [%rd113];
	// end inline asm
	mov.b32 	%f1273, %r161;
	mov.b32 	%f1274, %r162;
	mov.b32 	%f1275, %r163;
	mov.b32 	%f1276, %r164;
	mul.ftz.f32 	%f1277, %f43, %f1273;
	mul.ftz.f32 	%f1278, %f43, %f1274;
	mul.ftz.f32 	%f1279, %f43, %f1275;
	mul.ftz.f32 	%f1280, %f43, %f1276;
	fma.rn.ftz.f32 	%f3168, %f1272, %f3168, %f1277;
	fma.rn.ftz.f32 	%f3169, %f1272, %f3169, %f1278;
	fma.rn.ftz.f32 	%f3170, %f1272, %f3170, %f1279;
	fma.rn.ftz.f32 	%f3171, %f1272, %f3171, %f1280;
	add.s64 	%rd117, %rd101, 80;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r165,%r166,%r167,%r168}, [%rd116];
	// end inline asm
	mov.b32 	%f1281, %r165;
	mov.b32 	%f1282, %r166;
	mov.b32 	%f1283, %r167;
	mov.b32 	%f1284, %r168;
	mul.ftz.f32 	%f1285, %f43, %f1281;
	mul.ftz.f32 	%f1286, %f43, %f1282;
	mul.ftz.f32 	%f1287, %f43, %f1283;
	mul.ftz.f32 	%f1288, %f43, %f1284;
	fma.rn.ftz.f32 	%f3172, %f1272, %f3172, %f1285;
	fma.rn.ftz.f32 	%f3173, %f1272, %f3173, %f1286;
	fma.rn.ftz.f32 	%f3174, %f1272, %f3174, %f1287;
	fma.rn.ftz.f32 	%f3175, %f1272, %f3175, %f1288;
	add.s64 	%rd120, %rd101, 96;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r169,%r170,%r171,%r172}, [%rd119];
	// end inline asm
	mov.b32 	%f1289, %r169;
	mov.b32 	%f1290, %r170;
	mov.b32 	%f1291, %r171;
	mov.b32 	%f1292, %r172;
	mul.ftz.f32 	%f1293, %f43, %f1289;
	mul.ftz.f32 	%f1294, %f43, %f1290;
	mul.ftz.f32 	%f1295, %f43, %f1291;
	mul.ftz.f32 	%f1296, %f43, %f1292;
	fma.rn.ftz.f32 	%f3176, %f1272, %f3176, %f1293;
	fma.rn.ftz.f32 	%f1297, %f1272, %f3177, %f1294;
	fma.rn.ftz.f32 	%f1298, %f1272, %f3178, %f1295;
	fma.rn.ftz.f32 	%f1299, %f1272, %f3179, %f1296;
	add.s64 	%rd123, %rd101, 112;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r173,%r174,%r175,%r176}, [%rd122];
	// end inline asm
	mov.b32 	%f1300, %r173;
	mov.b32 	%f1301, %r174;
	mov.b32 	%f1302, %r175;
	mov.b32 	%f1303, %r176;
	mul.ftz.f32 	%f1304, %f43, %f1300;
	mul.ftz.f32 	%f1305, %f43, %f1301;
	mul.ftz.f32 	%f1306, %f43, %f1302;
	mul.ftz.f32 	%f1307, %f43, %f1303;
	fma.rn.ftz.f32 	%f1308, %f1272, %f3180, %f1304;
	fma.rn.ftz.f32 	%f3181, %f1272, %f3181, %f1305;
	fma.rn.ftz.f32 	%f3182, %f1272, %f3182, %f1306;
	fma.rn.ftz.f32 	%f3183, %f1272, %f3183, %f1307;
	mul.ftz.f32 	%f1309, %f1298, %f1298;
	fma.rn.ftz.f32 	%f1310, %f1297, %f1297, %f1309;
	fma.rn.ftz.f32 	%f1311, %f1299, %f1299, %f1310;
	fma.rn.ftz.f32 	%f1312, %f1308, %f1308, %f1311;
	rsqrt.approx.ftz.f32 	%f1313, %f1312;
	mul.ftz.f32 	%f3177, %f1297, %f1313;
	mul.ftz.f32 	%f3178, %f1298, %f1313;
	mul.ftz.f32 	%f3179, %f1299, %f1313;
	mul.ftz.f32 	%f3180, %f1313, %f1308;

$L__BB0_15:
	mul.ftz.f32 	%f1314, %f3178, %f3178;
	fma.rn.ftz.f32 	%f1315, %f3177, %f3177, %f1314;
	fma.rn.ftz.f32 	%f1316, %f3179, %f3179, %f1315;
	fma.rn.ftz.f32 	%f1317, %f3180, %f3180, %f1316;
	rcp.approx.ftz.f32 	%f1318, %f1317;
	mul.ftz.f32 	%f1319, %f3177, %f1318;
	mul.ftz.f32 	%f1320, %f3178, %f1318;
	mul.ftz.f32 	%f1321, %f3179, %f1318;
	mul.ftz.f32 	%f1322, %f3180, %f1318;
	mul.ftz.f32 	%f1323, %f3177, %f1319;
	mul.ftz.f32 	%f1324, %f3178, %f1320;
	mul.ftz.f32 	%f1325, %f3179, %f1321;
	mul.ftz.f32 	%f1326, %f3177, %f1320;
	mul.ftz.f32 	%f1327, %f3179, %f1322;
	mul.ftz.f32 	%f1328, %f3177, %f1321;
	mul.ftz.f32 	%f1329, %f3178, %f1322;
	mul.ftz.f32 	%f1330, %f3178, %f1321;
	mul.ftz.f32 	%f1331, %f3177, %f1322;
	sub.ftz.f32 	%f1332, %f1323, %f1324;
	sub.ftz.f32 	%f1333, %f1332, %f1325;
	fma.rn.ftz.f32 	%f1334, %f3180, %f1322, %f1333;
	sub.ftz.f32 	%f1335, %f1326, %f1327;
	add.ftz.f32 	%f1336, %f1335, %f1335;
	add.ftz.f32 	%f1337, %f1328, %f1329;
	add.ftz.f32 	%f1338, %f1337, %f1337;
	add.ftz.f32 	%f1339, %f1326, %f1327;
	add.ftz.f32 	%f1340, %f1339, %f1339;
	sub.ftz.f32 	%f1341, %f1324, %f1323;
	sub.ftz.f32 	%f1342, %f1341, %f1325;
	fma.rn.ftz.f32 	%f1343, %f3180, %f1322, %f1342;
	sub.ftz.f32 	%f1344, %f1330, %f1331;
	add.ftz.f32 	%f1345, %f1344, %f1344;
	sub.ftz.f32 	%f1346, %f1328, %f1329;
	add.ftz.f32 	%f1347, %f1346, %f1346;
	add.ftz.f32 	%f1348, %f1330, %f1331;
	add.ftz.f32 	%f1349, %f1348, %f1348;
	neg.ftz.f32 	%f1350, %f1323;
	sub.ftz.f32 	%f1351, %f1350, %f1324;
	add.ftz.f32 	%f1352, %f1325, %f1351;
	fma.rn.ftz.f32 	%f1353, %f3180, %f1322, %f1352;
	mul.ftz.f32 	%f1354, %f3171, %f1334;
	fma.rn.ftz.f32 	%f1355, %f3174, %f1336, %f1354;
	fma.rn.ftz.f32 	%f1356, %f3176, %f1338, %f1355;
	add.ftz.f32 	%f3184, %f3181, %f1356;
	mul.ftz.f32 	%f1357, %f3174, %f1343;
	fma.rn.ftz.f32 	%f1358, %f3171, %f1340, %f1357;
	fma.rn.ftz.f32 	%f1359, %f3176, %f1345, %f1358;
	add.ftz.f32 	%f3188, %f3182, %f1359;
	mul.ftz.f32 	%f1360, %f3174, %f1349;
	fma.rn.ftz.f32 	%f1361, %f3171, %f1347, %f1360;
	fma.rn.ftz.f32 	%f1362, %f3176, %f1353, %f1361;
	add.ftz.f32 	%f3192, %f3183, %f1362;
	mul.ftz.f32 	%f1363, %f3170, %f1334;
	fma.rn.ftz.f32 	%f1364, %f3173, %f1336, %f1363;
	fma.rn.ftz.f32 	%f3185, %f3175, %f1338, %f1364;
	mul.ftz.f32 	%f1365, %f3173, %f1343;
	fma.rn.ftz.f32 	%f1366, %f3170, %f1340, %f1365;
	fma.rn.ftz.f32 	%f3189, %f3175, %f1345, %f1366;
	mul.ftz.f32 	%f1367, %f3173, %f1349;
	fma.rn.ftz.f32 	%f1368, %f3170, %f1347, %f1367;
	fma.rn.ftz.f32 	%f3193, %f3175, %f1353, %f1368;
	mul.ftz.f32 	%f1369, %f3169, %f1334;
	fma.rn.ftz.f32 	%f3186, %f3172, %f1336, %f1369;
	mul.ftz.f32 	%f1370, %f3172, %f1343;
	fma.rn.ftz.f32 	%f3190, %f3169, %f1340, %f1370;
	mul.ftz.f32 	%f1371, %f3172, %f1349;
	fma.rn.ftz.f32 	%f3194, %f3169, %f1347, %f1371;
	mul.ftz.f32 	%f3187, %f3168, %f1334;
	mul.ftz.f32 	%f3191, %f3168, %f1340;
	mul.ftz.f32 	%f3195, %f3168, %f1347;

$L__BB0_18:
	mul.ftz.f32 	%f1409, %f3189, %f3194;
	mul.ftz.f32 	%f1410, %f3190, %f3193;
	sub.ftz.f32 	%f1411, %f1410, %f1409;
	mul.ftz.f32 	%f1412, %f3187, %f1411;
	mul.ftz.f32 	%f1413, %f3189, %f3195;
	mul.ftz.f32 	%f1414, %f3191, %f3193;
	sub.ftz.f32 	%f1415, %f1414, %f1413;
	mul.ftz.f32 	%f1416, %f3186, %f1415;
	sub.ftz.f32 	%f1417, %f1412, %f1416;
	mul.ftz.f32 	%f1418, %f3190, %f3195;
	mul.ftz.f32 	%f1419, %f3191, %f3194;
	sub.ftz.f32 	%f1420, %f1419, %f1418;
	fma.rn.ftz.f32 	%f1421, %f3185, %f1420, %f1417;
	rcp.approx.ftz.f32 	%f1422, %f1421;
	mul.ftz.f32 	%f3199, %f1411, %f1422;
	mul.ftz.f32 	%f1423, %f3186, %f3193;
	mul.ftz.f32 	%f1424, %f3185, %f3194;
	sub.ftz.f32 	%f1425, %f1424, %f1423;
	mul.ftz.f32 	%f3198, %f1425, %f1422;
	mul.ftz.f32 	%f1426, %f3185, %f3190;
	mul.ftz.f32 	%f1427, %f3186, %f3189;
	sub.ftz.f32 	%f1428, %f1427, %f1426;
	mul.ftz.f32 	%f3197, %f1428, %f1422;
	sub.ftz.f32 	%f1429, %f1413, %f1414;
	mul.ftz.f32 	%f3203, %f1429, %f1422;
	mul.ftz.f32 	%f1430, %f3185, %f3195;
	mul.ftz.f32 	%f1431, %f3187, %f3193;
	sub.ftz.f32 	%f1432, %f1431, %f1430;
	mul.ftz.f32 	%f3202, %f1432, %f1422;
	mul.ftz.f32 	%f1433, %f3187, %f3189;
	mul.ftz.f32 	%f1434, %f3185, %f3191;
	sub.ftz.f32 	%f1435, %f1434, %f1433;
	mul.ftz.f32 	%f3201, %f1435, %f1422;
	mul.ftz.f32 	%f3207, %f1420, %f1422;
	mul.ftz.f32 	%f1436, %f3187, %f3194;
	mul.ftz.f32 	%f1437, %f3186, %f3195;
	sub.ftz.f32 	%f1438, %f1437, %f1436;
	mul.ftz.f32 	%f3206, %f1438, %f1422;
	mul.ftz.f32 	%f1439, %f3186, %f3191;
	mul.ftz.f32 	%f1440, %f3187, %f3190;
	sub.ftz.f32 	%f1441, %f1440, %f1439;
	mul.ftz.f32 	%f3205, %f1441, %f1422;
	mul.ftz.f32 	%f1442, %f3184, %f3199;
	neg.ftz.f32 	%f1443, %f1442;
	mul.ftz.f32 	%f1444, %f3188, %f3198;
	sub.ftz.f32 	%f1445, %f1443, %f1444;
	mul.ftz.f32 	%f1446, %f3192, %f3197;
	sub.ftz.f32 	%f3196, %f1445, %f1446;
	mul.ftz.f32 	%f1447, %f3184, %f3203;
	neg.ftz.f32 	%f1448, %f1447;
	mul.ftz.f32 	%f1449, %f3188, %f3202;
	sub.ftz.f32 	%f1450, %f1448, %f1449;
	mul.ftz.f32 	%f1451, %f3192, %f3201;
	sub.ftz.f32 	%f3200, %f1450, %f1451;
	mul.ftz.f32 	%f1452, %f3184, %f3207;
	neg.ftz.f32 	%f1453, %f1452;
	mul.ftz.f32 	%f1454, %f3188, %f3206;
	sub.ftz.f32 	%f1455, %f1453, %f1454;
	mul.ftz.f32 	%f1456, %f3192, %f3205;
	sub.ftz.f32 	%f3204, %f1455, %f1456;
	bra.uni 	$L__BB0_19;

$L__BB0_10:
	// begin inline asm
	call (%rd789), _optix_get_instance_inverse_transform_from_handle, (%rd53);
	// end inline asm

$L__BB0_11:
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd789;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd59];
	// end inline asm
	mov.b32 	%f3199, %r90;
	mov.b32 	%f3198, %r91;
	mov.b32 	%f3197, %r92;
	mov.b32 	%f3196, %r93;
	add.s64 	%rd63, %rd789, 16;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd62];
	// end inline asm
	mov.b32 	%f3203, %r94;
	mov.b32 	%f3202, %r95;
	mov.b32 	%f3201, %r96;
	mov.b32 	%f3200, %r97;
	add.s64 	%rd66, %rd789, 32;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd65];
	// end inline asm
	mov.b32 	%f3207, %r98;
	mov.b32 	%f3206, %r99;
	mov.b32 	%f3205, %r100;
	mov.b32 	%f3204, %r101;

$L__BB0_19:
	setp.eq.s32 	%p12, %r1161, 0;
	@%p12 bra 	$L__BB0_21;

	mul.ftz.f32 	%f1457, %f3164, %f3199;
	fma.rn.ftz.f32 	%f1458, %f3160, %f3198, %f1457;
	fma.rn.ftz.f32 	%f165, %f3156, %f3197, %f1458;
	mul.ftz.f32 	%f1459, %f3165, %f3199;
	fma.rn.ftz.f32 	%f1460, %f3161, %f3198, %f1459;
	fma.rn.ftz.f32 	%f166, %f3157, %f3197, %f1460;
	mul.ftz.f32 	%f1461, %f3166, %f3199;
	fma.rn.ftz.f32 	%f1462, %f3162, %f3198, %f1461;
	fma.rn.ftz.f32 	%f167, %f3158, %f3197, %f1462;
	mul.ftz.f32 	%f1463, %f3167, %f3199;
	fma.rn.ftz.f32 	%f1464, %f3163, %f3198, %f1463;
	fma.rn.ftz.f32 	%f1465, %f3159, %f3197, %f1464;
	add.ftz.f32 	%f3196, %f3196, %f1465;
	mul.ftz.f32 	%f1466, %f3164, %f3203;
	fma.rn.ftz.f32 	%f1467, %f3160, %f3202, %f1466;
	fma.rn.ftz.f32 	%f169, %f3156, %f3201, %f1467;
	mul.ftz.f32 	%f1468, %f3165, %f3203;
	fma.rn.ftz.f32 	%f1469, %f3161, %f3202, %f1468;
	fma.rn.ftz.f32 	%f170, %f3157, %f3201, %f1469;
	mul.ftz.f32 	%f1470, %f3166, %f3203;
	fma.rn.ftz.f32 	%f1471, %f3162, %f3202, %f1470;
	fma.rn.ftz.f32 	%f171, %f3158, %f3201, %f1471;
	mul.ftz.f32 	%f1472, %f3167, %f3203;
	fma.rn.ftz.f32 	%f1473, %f3163, %f3202, %f1472;
	fma.rn.ftz.f32 	%f1474, %f3159, %f3201, %f1473;
	add.ftz.f32 	%f3200, %f3200, %f1474;
	mul.ftz.f32 	%f1475, %f3164, %f3207;
	fma.rn.ftz.f32 	%f1476, %f3160, %f3206, %f1475;
	fma.rn.ftz.f32 	%f173, %f3156, %f3205, %f1476;
	mul.ftz.f32 	%f1477, %f3165, %f3207;
	fma.rn.ftz.f32 	%f1478, %f3161, %f3206, %f1477;
	fma.rn.ftz.f32 	%f174, %f3157, %f3205, %f1478;
	mul.ftz.f32 	%f1479, %f3166, %f3207;
	fma.rn.ftz.f32 	%f1480, %f3162, %f3206, %f1479;
	fma.rn.ftz.f32 	%f175, %f3158, %f3205, %f1480;
	mul.ftz.f32 	%f1481, %f3167, %f3207;
	fma.rn.ftz.f32 	%f1482, %f3163, %f3206, %f1481;
	fma.rn.ftz.f32 	%f1483, %f3159, %f3205, %f1482;
	add.ftz.f32 	%f3204, %f3204, %f1483;
	mov.f32 	%f3197, %f167;
	mov.f32 	%f3198, %f166;
	mov.f32 	%f3199, %f165;
	mov.f32 	%f3201, %f171;
	mov.f32 	%f3202, %f170;
	mov.f32 	%f3203, %f169;
	mov.f32 	%f3205, %f175;
	mov.f32 	%f3206, %f174;
	mov.f32 	%f3207, %f173;

$L__BB0_21:
	add.s32 	%r1161, %r1161, 1;
	setp.lt.u32 	%p13, %r1161, %r85;
	mov.f32 	%f3156, %f3207;
	mov.f32 	%f3157, %f3206;
	mov.f32 	%f3158, %f3205;
	mov.f32 	%f3159, %f3204;
	mov.f32 	%f3160, %f3203;
	mov.f32 	%f3161, %f3202;
	mov.f32 	%f3162, %f3201;
	mov.f32 	%f3163, %f3200;
	mov.f32 	%f3164, %f3199;
	mov.f32 	%f3165, %f3198;
	mov.f32 	%f3166, %f3197;
	mov.f32 	%f3167, %f3196;
	@%p13 bra 	$L__BB0_6;

$L__BB0_22:
	mul.ftz.f32 	%f1484, %f1, %f3199;
	fma.rn.ftz.f32 	%f1485, %f2, %f3198, %f1484;
	fma.rn.ftz.f32 	%f1486, %f3, %f3197, %f1485;
	mul.ftz.f32 	%f1487, %f1, %f3203;
	fma.rn.ftz.f32 	%f1488, %f2, %f3202, %f1487;
	fma.rn.ftz.f32 	%f1489, %f3, %f3201, %f1488;
	mul.ftz.f32 	%f1490, %f1, %f3207;
	fma.rn.ftz.f32 	%f1491, %f2, %f3206, %f1490;
	fma.rn.ftz.f32 	%f1492, %f3, %f3205, %f1491;
	add.ftz.f32 	%f3, %f3204, %f1492;
	add.ftz.f32 	%f2, %f3200, %f1489;
	add.ftz.f32 	%f1, %f3196, %f1486;

$L__BB0_23:
	// begin inline asm
	call (%r236), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f213, %r236;
	setp.eq.ftz.f32 	%p14, %f213, 0f00000000;
	@%p14 bra 	$L__BB0_27;
	bra.uni 	$L__BB0_24;

$L__BB0_27:
	sub.ftz.f32 	%f3235, %f1, %f1236;
	sub.ftz.f32 	%f3236, %f2, %f1237;
	sub.ftz.f32 	%f3237, %f3, %f1238;
	bra.uni 	$L__BB0_28;

$L__BB0_95:
	// begin inline asm
	call (%rd531), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r697), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f2326, 0f00000000;
	// begin inline asm
	call (%f2314, %f2315, %f2316, %f2317,  %f2318, %f2319, %f2320, %f2321,  %f2322, %f2323, %f2324, %f2325), _optix_get_quadratic_bspline_vertex_data, (%rd531, %r74, %r697, %f2326);
	// end inline asm
	mul.ftz.f32 	%f2327, %f2314, 0f3F000000;
	mul.ftz.f32 	%f2328, %f2315, 0f3F000000;
	mul.ftz.f32 	%f2329, %f2316, 0f3F000000;
	mul.ftz.f32 	%f2330, %f2317, 0f3F000000;
	fma.rn.ftz.f32 	%f744, %f2318, 0f3F000000, %f2327;
	fma.rn.ftz.f32 	%f745, %f2319, 0f3F000000, %f2328;
	fma.rn.ftz.f32 	%f746, %f2320, 0f3F000000, %f2329;
	fma.rn.ftz.f32 	%f747, %f2321, 0f3F000000, %f2330;
	sub.ftz.f32 	%f748, %f2318, %f2314;
	sub.ftz.f32 	%f749, %f2319, %f2315;
	sub.ftz.f32 	%f750, %f2320, %f2316;
	sub.ftz.f32 	%f751, %f2321, %f2317;
	sub.ftz.f32 	%f2331, %f2327, %f2318;
	sub.ftz.f32 	%f2332, %f2328, %f2319;
	sub.ftz.f32 	%f2333, %f2329, %f2320;
	sub.ftz.f32 	%f2334, %f2330, %f2321;
	fma.rn.ftz.f32 	%f752, %f2322, 0f3F000000, %f2331;
	fma.rn.ftz.f32 	%f753, %f2323, 0f3F000000, %f2332;
	fma.rn.ftz.f32 	%f754, %f2324, 0f3F000000, %f2333;
	fma.rn.ftz.f32 	%f755, %f2325, 0f3F000000, %f2334;
	// begin inline asm
	call (%r700), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p48, %r700, 0;
	@%p48 bra 	$L__BB0_115;

	// begin inline asm
	call (%r701), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2335), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p49, %r701, 0;
	@%p49 bra 	$L__BB0_114;

	mov.u32 	%r1165, 0;

$L__BB0_98:
	.pragma "nounroll";
	// begin inline asm
	call (%rd533), _optix_get_transform_list_handle, (%r1165);
	// end inline asm
	// begin inline asm
	call (%r704), _optix_get_transform_type_from_handle, (%rd533);
	// end inline asm
	or.b32  	%r705, %r704, 1;
	setp.eq.s32 	%p50, %r705, 3;
	@%p50 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_99;

$L__BB0_104:
	setp.eq.s32 	%p53, %r704, 2;
	@%p53 bra 	$L__BB0_108;
	bra.uni 	$L__BB0_105;

$L__BB0_108:
	// begin inline asm
	call (%rd605), _optix_get_matrix_motion_transform_from_handle, (%rd533);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd607, %rd605;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r793,%r794,%r795,%r796}, [%rd607];
	// end inline asm
	add.s64 	%rd611, %rd605, 16;
	// begin inline asm
	cvta.to.global.u64 %rd610, %rd611;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r797,%r798,%r799,%r800}, [%rd610];
	// end inline asm
	add.s64 	%rd614, %rd605, 32;
	// begin inline asm
	cvta.to.global.u64 %rd613, %rd614;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r801,%r802,%r803,%r804}, [%rd613];
	// end inline asm
	add.s64 	%rd617, %rd605, 48;
	// begin inline asm
	cvta.to.global.u64 %rd616, %rd617;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r805,%r806,%r807,%r808}, [%rd616];
	// end inline asm
	add.s64 	%rd620, %rd605, 64;
	// begin inline asm
	cvta.to.global.u64 %rd619, %rd620;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r809,%r810,%r811,%r812}, [%rd619];
	// end inline asm
	add.s64 	%rd623, %rd605, 80;
	// begin inline asm
	cvta.to.global.u64 %rd622, %rd623;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r813,%r814,%r815,%r816}, [%rd622];
	// end inline asm
	add.s64 	%rd626, %rd605, 96;
	// begin inline asm
	cvta.to.global.u64 %rd625, %rd626;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r817,%r818,%r819,%r820}, [%rd625];
	// end inline asm
	add.s64 	%rd629, %rd605, 112;
	// begin inline asm
	cvta.to.global.u64 %rd628, %rd629;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r821,%r822,%r823,%r824}, [%rd628];
	// end inline asm
	mov.b32 	%f2462, %r796;
	mov.b32 	%f2463, %r797;
	and.b32  	%r837, %r795, 65535;
	add.s32 	%r838, %r837, -1;
	cvt.rn.f32.s32 	%f2464, %r838;
	sub.ftz.f32 	%f2465, %f2335, %f2462;
	mul.ftz.f32 	%f2466, %f2465, %f2464;
	sub.ftz.f32 	%f2467, %f2463, %f2462;
	div.approx.ftz.f32 	%f2468, %f2466, %f2467;
	min.ftz.f32 	%f2469, %f2464, %f2468;
	mov.f32 	%f2470, 0f00000000;
	max.ftz.f32 	%f2471, %f2470, %f2469;
	cvt.rmi.ftz.f32.f32 	%f2472, %f2471;
	sub.ftz.f32 	%f842, %f2471, %f2472;
	cvt.rzi.ftz.s32.f32 	%r839, %f2472;
	cvt.s64.s32 	%rd36, %r839;
	mul.wide.s32 	%rd640, %r839, 48;
	add.s64 	%rd632, %rd614, %rd640;
	// begin inline asm
	cvta.to.global.u64 %rd631, %rd632;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r825,%r826,%r827,%r828}, [%rd631];
	// end inline asm
	mov.b32 	%f3466, %r825;
	mov.b32 	%f3467, %r826;
	mov.b32 	%f3468, %r827;
	mov.b32 	%f3469, %r828;
	add.s64 	%rd635, %rd632, 16;
	// begin inline asm
	cvta.to.global.u64 %rd634, %rd635;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r829,%r830,%r831,%r832}, [%rd634];
	// end inline asm
	mov.b32 	%f3462, %r829;
	mov.b32 	%f3463, %r830;
	mov.b32 	%f3464, %r831;
	mov.b32 	%f3465, %r832;
	add.s64 	%rd638, %rd632, 32;
	// begin inline asm
	cvta.to.global.u64 %rd637, %rd638;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r833,%r834,%r835,%r836}, [%rd637];
	// end inline asm
	mov.b32 	%f3458, %r833;
	mov.b32 	%f3459, %r834;
	mov.b32 	%f3460, %r835;
	mov.b32 	%f3461, %r836;
	setp.leu.ftz.f32 	%p55, %f842, 0f00000000;
	@%p55 bra 	$L__BB0_110;

	mov.f32 	%f2473, 0f3F800000;
	sub.ftz.f32 	%f2474, %f2473, %f842;
	mul.lo.s64 	%rd650, %rd36, 48;
	add.s64 	%rd651, %rd605, %rd650;
	add.s64 	%rd642, %rd651, 80;
	// begin inline asm
	cvta.to.global.u64 %rd641, %rd642;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r840,%r841,%r842,%r843}, [%rd641];
	// end inline asm
	mov.b32 	%f2475, %r840;
	mov.b32 	%f2476, %r841;
	mov.b32 	%f2477, %r842;
	mov.b32 	%f2478, %r843;
	mul.ftz.f32 	%f2479, %f842, %f2475;
	mul.ftz.f32 	%f2480, %f842, %f2476;
	mul.ftz.f32 	%f2481, %f842, %f2477;
	mul.ftz.f32 	%f2482, %f842, %f2478;
	fma.rn.ftz.f32 	%f3466, %f2474, %f3466, %f2479;
	fma.rn.ftz.f32 	%f3467, %f2474, %f3467, %f2480;
	fma.rn.ftz.f32 	%f3468, %f2474, %f3468, %f2481;
	fma.rn.ftz.f32 	%f3469, %f2474, %f3469, %f2482;
	add.s64 	%rd645, %rd651, 96;
	// begin inline asm
	cvta.to.global.u64 %rd644, %rd645;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r844,%r845,%r846,%r847}, [%rd644];
	// end inline asm
	mov.b32 	%f2483, %r844;
	mov.b32 	%f2484, %r845;
	mov.b32 	%f2485, %r846;
	mov.b32 	%f2486, %r847;
	mul.ftz.f32 	%f2487, %f842, %f2483;
	mul.ftz.f32 	%f2488, %f842, %f2484;
	mul.ftz.f32 	%f2489, %f842, %f2485;
	mul.ftz.f32 	%f2490, %f842, %f2486;
	fma.rn.ftz.f32 	%f3462, %f2474, %f3462, %f2487;
	fma.rn.ftz.f32 	%f3463, %f2474, %f3463, %f2488;
	fma.rn.ftz.f32 	%f3464, %f2474, %f3464, %f2489;
	fma.rn.ftz.f32 	%f3465, %f2474, %f3465, %f2490;
	add.s64 	%rd648, %rd651, 112;
	// begin inline asm
	cvta.to.global.u64 %rd647, %rd648;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r848,%r849,%r850,%r851}, [%rd647];
	// end inline asm
	mov.b32 	%f2491, %r848;
	mov.b32 	%f2492, %r849;
	mov.b32 	%f2493, %r850;
	mov.b32 	%f2494, %r851;
	mul.ftz.f32 	%f2495, %f842, %f2491;
	mul.ftz.f32 	%f2496, %f842, %f2492;
	mul.ftz.f32 	%f2497, %f842, %f2493;
	mul.ftz.f32 	%f2498, %f842, %f2494;
	fma.rn.ftz.f32 	%f3458, %f2474, %f3458, %f2495;
	fma.rn.ftz.f32 	%f3459, %f2474, %f3459, %f2496;
	fma.rn.ftz.f32 	%f3460, %f2474, %f3460, %f2497;
	fma.rn.ftz.f32 	%f3461, %f2474, %f3461, %f2498;
	bra.uni 	$L__BB0_110;

$L__BB0_99:
	mov.f32 	%f3472, 0f3F800000;
	setp.eq.s32 	%p51, %r704, 4;
	@%p51 bra 	$L__BB0_102;

	setp.ne.s32 	%p52, %r704, 1;
	mov.f32 	%f3470, %f2326;
	mov.f32 	%f3471, %f2326;
	mov.f32 	%f3473, %f2326;
	mov.f32 	%f3474, %f2326;
	mov.f32 	%f3475, %f3472;
	mov.f32 	%f3476, %f2326;
	mov.f32 	%f3477, %f2326;
	mov.f32 	%f3478, %f3472;
	mov.f32 	%f3479, %f2326;
	mov.f32 	%f3480, %f2326;
	mov.f32 	%f3481, %f2326;
	@%p52 bra 	$L__BB0_111;

	// begin inline asm
	call (%rd535), _optix_get_static_transform_from_handle, (%rd533);
	// end inline asm
	add.s64 	%rd793, %rd535, 64;
	bra.uni 	$L__BB0_103;

$L__BB0_105:
	// begin inline asm
	call (%rd548), _optix_get_srt_motion_transform_from_handle, (%rd533);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd550, %rd548;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r718,%r719,%r720,%r721}, [%rd550];
	// end inline asm
	add.s64 	%rd554, %rd548, 16;
	// begin inline asm
	cvta.to.global.u64 %rd553, %rd554;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r722,%r723,%r724,%r725}, [%rd553];
	// end inline asm
	add.s64 	%rd557, %rd548, 32;
	// begin inline asm
	cvta.to.global.u64 %rd556, %rd557;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r726,%r727,%r728,%r729}, [%rd556];
	// end inline asm
	add.s64 	%rd560, %rd548, 48;
	// begin inline asm
	cvta.to.global.u64 %rd559, %rd560;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r730,%r731,%r732,%r733}, [%rd559];
	// end inline asm
	add.s64 	%rd563, %rd548, 64;
	// begin inline asm
	cvta.to.global.u64 %rd562, %rd563;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r734,%r735,%r736,%r737}, [%rd562];
	// end inline asm
	add.s64 	%rd566, %rd548, 80;
	// begin inline asm
	cvta.to.global.u64 %rd565, %rd566;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r738,%r739,%r740,%r741}, [%rd565];
	// end inline asm
	add.s64 	%rd569, %rd548, 96;
	// begin inline asm
	cvta.to.global.u64 %rd568, %rd569;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r742,%r743,%r744,%r745}, [%rd568];
	// end inline asm
	add.s64 	%rd572, %rd548, 112;
	// begin inline asm
	cvta.to.global.u64 %rd571, %rd572;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r746,%r747,%r748,%r749}, [%rd571];
	// end inline asm
	add.s64 	%rd575, %rd548, 128;
	// begin inline asm
	cvta.to.global.u64 %rd574, %rd575;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r750,%r751,%r752,%r753}, [%rd574];
	// end inline asm
	add.s64 	%rd578, %rd548, 144;
	// begin inline asm
	cvta.to.global.u64 %rd577, %rd578;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r754,%r755,%r756,%r757}, [%rd577];
	// end inline asm
	mov.b32 	%f2350, %r721;
	mov.b32 	%f2351, %r722;
	and.b32  	%r774, %r720, 65535;
	add.s32 	%r775, %r774, -1;
	cvt.rn.f32.s32 	%f2352, %r775;
	sub.ftz.f32 	%f2353, %f2335, %f2350;
	mul.ftz.f32 	%f2354, %f2353, %f2352;
	sub.ftz.f32 	%f2355, %f2351, %f2350;
	div.approx.ftz.f32 	%f2356, %f2354, %f2355;
	min.ftz.f32 	%f2357, %f2352, %f2356;
	mov.f32 	%f2358, 0f00000000;
	max.ftz.f32 	%f2359, %f2358, %f2357;
	cvt.rmi.ftz.f32.f32 	%f2360, %f2359;
	sub.ftz.f32 	%f781, %f2359, %f2360;
	cvt.rzi.ftz.s32.f32 	%r776, %f2360;
	mul.wide.s32 	%rd592, %r776, 64;
	add.s64 	%rd581, %rd557, %rd592;
	// begin inline asm
	cvta.to.global.u64 %rd580, %rd581;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r758,%r759,%r760,%r761}, [%rd580];
	// end inline asm
	mov.b32 	%f3442, %r758;
	mov.b32 	%f3443, %r759;
	mov.b32 	%f3444, %r760;
	mov.b32 	%f3445, %r761;
	add.s64 	%rd584, %rd581, 16;
	// begin inline asm
	cvta.to.global.u64 %rd583, %rd584;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r762,%r763,%r764,%r765}, [%rd583];
	// end inline asm
	mov.b32 	%f3446, %r762;
	mov.b32 	%f3447, %r763;
	mov.b32 	%f3448, %r764;
	mov.b32 	%f3449, %r765;
	add.s64 	%rd587, %rd581, 32;
	// begin inline asm
	cvta.to.global.u64 %rd586, %rd587;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r766,%r767,%r768,%r769}, [%rd586];
	// end inline asm
	mov.b32 	%f3450, %r766;
	mov.b32 	%f3451, %r767;
	mov.b32 	%f3452, %r768;
	mov.b32 	%f3453, %r769;
	add.s64 	%rd590, %rd581, 48;
	// begin inline asm
	cvta.to.global.u64 %rd589, %rd590;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r770,%r771,%r772,%r773}, [%rd589];
	// end inline asm
	mov.b32 	%f3454, %r770;
	mov.b32 	%f3455, %r771;
	mov.b32 	%f3456, %r772;
	mov.b32 	%f3457, %r773;
	setp.leu.ftz.f32 	%p54, %f781, 0f00000000;
	@%p54 bra 	$L__BB0_107;

	mov.f32 	%f2361, 0f3F800000;
	sub.ftz.f32 	%f2362, %f2361, %f781;
	add.s64 	%rd594, %rd581, 64;
	// begin inline asm
	cvta.to.global.u64 %rd593, %rd594;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r777,%r778,%r779,%r780}, [%rd593];
	// end inline asm
	mov.b32 	%f2363, %r777;
	mov.b32 	%f2364, %r778;
	mov.b32 	%f2365, %r779;
	mov.b32 	%f2366, %r780;
	mul.ftz.f32 	%f2367, %f781, %f2363;
	mul.ftz.f32 	%f2368, %f781, %f2364;
	mul.ftz.f32 	%f2369, %f781, %f2365;
	mul.ftz.f32 	%f2370, %f781, %f2366;
	fma.rn.ftz.f32 	%f3442, %f2362, %f3442, %f2367;
	fma.rn.ftz.f32 	%f3443, %f2362, %f3443, %f2368;
	fma.rn.ftz.f32 	%f3444, %f2362, %f3444, %f2369;
	fma.rn.ftz.f32 	%f3445, %f2362, %f3445, %f2370;
	add.s64 	%rd597, %rd581, 80;
	// begin inline asm
	cvta.to.global.u64 %rd596, %rd597;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r781,%r782,%r783,%r784}, [%rd596];
	// end inline asm
	mov.b32 	%f2371, %r781;
	mov.b32 	%f2372, %r782;
	mov.b32 	%f2373, %r783;
	mov.b32 	%f2374, %r784;
	mul.ftz.f32 	%f2375, %f781, %f2371;
	mul.ftz.f32 	%f2376, %f781, %f2372;
	mul.ftz.f32 	%f2377, %f781, %f2373;
	mul.ftz.f32 	%f2378, %f781, %f2374;
	fma.rn.ftz.f32 	%f3446, %f2362, %f3446, %f2375;
	fma.rn.ftz.f32 	%f3447, %f2362, %f3447, %f2376;
	fma.rn.ftz.f32 	%f3448, %f2362, %f3448, %f2377;
	fma.rn.ftz.f32 	%f3449, %f2362, %f3449, %f2378;
	add.s64 	%rd600, %rd581, 96;
	// begin inline asm
	cvta.to.global.u64 %rd599, %rd600;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r785,%r786,%r787,%r788}, [%rd599];
	// end inline asm
	mov.b32 	%f2379, %r785;
	mov.b32 	%f2380, %r786;
	mov.b32 	%f2381, %r787;
	mov.b32 	%f2382, %r788;
	mul.ftz.f32 	%f2383, %f781, %f2379;
	mul.ftz.f32 	%f2384, %f781, %f2380;
	mul.ftz.f32 	%f2385, %f781, %f2381;
	mul.ftz.f32 	%f2386, %f781, %f2382;
	fma.rn.ftz.f32 	%f3450, %f2362, %f3450, %f2383;
	fma.rn.ftz.f32 	%f2387, %f2362, %f3451, %f2384;
	fma.rn.ftz.f32 	%f2388, %f2362, %f3452, %f2385;
	fma.rn.ftz.f32 	%f2389, %f2362, %f3453, %f2386;
	add.s64 	%rd603, %rd581, 112;
	// begin inline asm
	cvta.to.global.u64 %rd602, %rd603;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r789,%r790,%r791,%r792}, [%rd602];
	// end inline asm
	mov.b32 	%f2390, %r789;
	mov.b32 	%f2391, %r790;
	mov.b32 	%f2392, %r791;
	mov.b32 	%f2393, %r792;
	mul.ftz.f32 	%f2394, %f781, %f2390;
	mul.ftz.f32 	%f2395, %f781, %f2391;
	mul.ftz.f32 	%f2396, %f781, %f2392;
	mul.ftz.f32 	%f2397, %f781, %f2393;
	fma.rn.ftz.f32 	%f2398, %f2362, %f3454, %f2394;
	fma.rn.ftz.f32 	%f3455, %f2362, %f3455, %f2395;
	fma.rn.ftz.f32 	%f3456, %f2362, %f3456, %f2396;
	fma.rn.ftz.f32 	%f3457, %f2362, %f3457, %f2397;
	mul.ftz.f32 	%f2399, %f2388, %f2388;
	fma.rn.ftz.f32 	%f2400, %f2387, %f2387, %f2399;
	fma.rn.ftz.f32 	%f2401, %f2389, %f2389, %f2400;
	fma.rn.ftz.f32 	%f2402, %f2398, %f2398, %f2401;
	rsqrt.approx.ftz.f32 	%f2403, %f2402;
	mul.ftz.f32 	%f3451, %f2387, %f2403;
	mul.ftz.f32 	%f3452, %f2388, %f2403;
	mul.ftz.f32 	%f3453, %f2389, %f2403;
	mul.ftz.f32 	%f3454, %f2403, %f2398;

$L__BB0_107:
	mul.ftz.f32 	%f2404, %f3452, %f3452;
	fma.rn.ftz.f32 	%f2405, %f3451, %f3451, %f2404;
	fma.rn.ftz.f32 	%f2406, %f3453, %f3453, %f2405;
	fma.rn.ftz.f32 	%f2407, %f3454, %f3454, %f2406;
	rcp.approx.ftz.f32 	%f2408, %f2407;
	mul.ftz.f32 	%f2409, %f3451, %f2408;
	mul.ftz.f32 	%f2410, %f3452, %f2408;
	mul.ftz.f32 	%f2411, %f3453, %f2408;
	mul.ftz.f32 	%f2412, %f3454, %f2408;
	mul.ftz.f32 	%f2413, %f3451, %f2409;
	mul.ftz.f32 	%f2414, %f3452, %f2410;
	mul.ftz.f32 	%f2415, %f3453, %f2411;
	mul.ftz.f32 	%f2416, %f3451, %f2410;
	mul.ftz.f32 	%f2417, %f3453, %f2412;
	mul.ftz.f32 	%f2418, %f3451, %f2411;
	mul.ftz.f32 	%f2419, %f3452, %f2412;
	mul.ftz.f32 	%f2420, %f3452, %f2411;
	mul.ftz.f32 	%f2421, %f3451, %f2412;
	sub.ftz.f32 	%f2422, %f2413, %f2414;
	sub.ftz.f32 	%f2423, %f2422, %f2415;
	fma.rn.ftz.f32 	%f2424, %f3454, %f2412, %f2423;
	sub.ftz.f32 	%f2425, %f2416, %f2417;
	add.ftz.f32 	%f2426, %f2425, %f2425;
	add.ftz.f32 	%f2427, %f2418, %f2419;
	add.ftz.f32 	%f2428, %f2427, %f2427;
	add.ftz.f32 	%f2429, %f2416, %f2417;
	add.ftz.f32 	%f2430, %f2429, %f2429;
	sub.ftz.f32 	%f2431, %f2414, %f2413;
	sub.ftz.f32 	%f2432, %f2431, %f2415;
	fma.rn.ftz.f32 	%f2433, %f3454, %f2412, %f2432;
	sub.ftz.f32 	%f2434, %f2420, %f2421;
	add.ftz.f32 	%f2435, %f2434, %f2434;
	sub.ftz.f32 	%f2436, %f2418, %f2419;
	add.ftz.f32 	%f2437, %f2436, %f2436;
	add.ftz.f32 	%f2438, %f2420, %f2421;
	add.ftz.f32 	%f2439, %f2438, %f2438;
	neg.ftz.f32 	%f2440, %f2413;
	sub.ftz.f32 	%f2441, %f2440, %f2414;
	add.ftz.f32 	%f2442, %f2415, %f2441;
	fma.rn.ftz.f32 	%f2443, %f3454, %f2412, %f2442;
	mul.ftz.f32 	%f2444, %f3445, %f2424;
	fma.rn.ftz.f32 	%f2445, %f3448, %f2426, %f2444;
	fma.rn.ftz.f32 	%f2446, %f3450, %f2428, %f2445;
	add.ftz.f32 	%f3469, %f3455, %f2446;
	mul.ftz.f32 	%f2447, %f3448, %f2433;
	fma.rn.ftz.f32 	%f2448, %f3445, %f2430, %f2447;
	fma.rn.ftz.f32 	%f2449, %f3450, %f2435, %f2448;
	add.ftz.f32 	%f3465, %f3456, %f2449;
	mul.ftz.f32 	%f2450, %f3448, %f2439;
	fma.rn.ftz.f32 	%f2451, %f3445, %f2437, %f2450;
	fma.rn.ftz.f32 	%f2452, %f3450, %f2443, %f2451;
	add.ftz.f32 	%f3461, %f3457, %f2452;
	mul.ftz.f32 	%f2453, %f3444, %f2424;
	fma.rn.ftz.f32 	%f2454, %f3447, %f2426, %f2453;
	fma.rn.ftz.f32 	%f3468, %f3449, %f2428, %f2454;
	mul.ftz.f32 	%f2455, %f3447, %f2433;
	fma.rn.ftz.f32 	%f2456, %f3444, %f2430, %f2455;
	fma.rn.ftz.f32 	%f3464, %f3449, %f2435, %f2456;
	mul.ftz.f32 	%f2457, %f3447, %f2439;
	fma.rn.ftz.f32 	%f2458, %f3444, %f2437, %f2457;
	fma.rn.ftz.f32 	%f3460, %f3449, %f2443, %f2458;
	mul.ftz.f32 	%f2459, %f3443, %f2424;
	fma.rn.ftz.f32 	%f3467, %f3446, %f2426, %f2459;
	mul.ftz.f32 	%f2460, %f3446, %f2433;
	fma.rn.ftz.f32 	%f3463, %f3443, %f2430, %f2460;
	mul.ftz.f32 	%f2461, %f3446, %f2439;
	fma.rn.ftz.f32 	%f3459, %f3443, %f2437, %f2461;
	mul.ftz.f32 	%f3466, %f3442, %f2424;
	mul.ftz.f32 	%f3462, %f3442, %f2430;
	mul.ftz.f32 	%f3458, %f3442, %f2437;

$L__BB0_110:
	mul.ftz.f32 	%f2499, %f3459, %f3464;
	mul.ftz.f32 	%f2500, %f3460, %f3463;
	sub.ftz.f32 	%f2501, %f2500, %f2499;
	mul.ftz.f32 	%f2502, %f3466, %f2501;
	mul.ftz.f32 	%f2503, %f3458, %f3464;
	mul.ftz.f32 	%f2504, %f3460, %f3462;
	sub.ftz.f32 	%f2505, %f2504, %f2503;
	mul.ftz.f32 	%f2506, %f2505, %f3467;
	sub.ftz.f32 	%f2507, %f2502, %f2506;
	mul.ftz.f32 	%f2508, %f3458, %f3463;
	mul.ftz.f32 	%f2509, %f3459, %f3462;
	sub.ftz.f32 	%f2510, %f2509, %f2508;
	fma.rn.ftz.f32 	%f2511, %f2510, %f3468, %f2507;
	rcp.approx.ftz.f32 	%f2512, %f2511;
	mul.ftz.f32 	%f3478, %f2501, %f2512;
	mul.ftz.f32 	%f2513, %f3460, %f3467;
	mul.ftz.f32 	%f2514, %f3459, %f3468;
	sub.ftz.f32 	%f2515, %f2514, %f2513;
	mul.ftz.f32 	%f3479, %f2515, %f2512;
	mul.ftz.f32 	%f2516, %f3463, %f3468;
	mul.ftz.f32 	%f2517, %f3464, %f3467;
	sub.ftz.f32 	%f2518, %f2517, %f2516;
	mul.ftz.f32 	%f3480, %f2518, %f2512;
	sub.ftz.f32 	%f2519, %f2503, %f2504;
	mul.ftz.f32 	%f3474, %f2519, %f2512;
	mul.ftz.f32 	%f2520, %f3458, %f3468;
	mul.ftz.f32 	%f2521, %f3460, %f3466;
	sub.ftz.f32 	%f2522, %f2521, %f2520;
	mul.ftz.f32 	%f3475, %f2522, %f2512;
	mul.ftz.f32 	%f2523, %f3464, %f3466;
	mul.ftz.f32 	%f2524, %f3462, %f3468;
	sub.ftz.f32 	%f2525, %f2524, %f2523;
	mul.ftz.f32 	%f3476, %f2525, %f2512;
	mul.ftz.f32 	%f3470, %f2510, %f2512;
	mul.ftz.f32 	%f2526, %f3459, %f3466;
	mul.ftz.f32 	%f2527, %f3458, %f3467;
	sub.ftz.f32 	%f2528, %f2527, %f2526;
	mul.ftz.f32 	%f3471, %f2528, %f2512;
	mul.ftz.f32 	%f2529, %f3462, %f3467;
	mul.ftz.f32 	%f2530, %f3463, %f3466;
	sub.ftz.f32 	%f2531, %f2530, %f2529;
	mul.ftz.f32 	%f3472, %f2531, %f2512;
	mul.ftz.f32 	%f2532, %f3469, %f3478;
	neg.ftz.f32 	%f2533, %f2532;
	mul.ftz.f32 	%f2534, %f3465, %f3479;
	sub.ftz.f32 	%f2535, %f2533, %f2534;
	mul.ftz.f32 	%f2536, %f3461, %f3480;
	sub.ftz.f32 	%f3481, %f2535, %f2536;
	mul.ftz.f32 	%f2537, %f3469, %f3474;
	neg.ftz.f32 	%f2538, %f2537;
	mul.ftz.f32 	%f2539, %f3465, %f3475;
	sub.ftz.f32 	%f2540, %f2538, %f2539;
	mul.ftz.f32 	%f2541, %f3461, %f3476;
	sub.ftz.f32 	%f3477, %f2540, %f2541;
	mul.ftz.f32 	%f2542, %f3469, %f3470;
	neg.ftz.f32 	%f2543, %f2542;
	mul.ftz.f32 	%f2544, %f3465, %f3471;
	sub.ftz.f32 	%f2545, %f2543, %f2544;
	mul.ftz.f32 	%f2546, %f3461, %f3472;
	sub.ftz.f32 	%f3473, %f2545, %f2546;
	bra.uni 	$L__BB0_111;

$L__BB0_102:
	// begin inline asm
	call (%rd793), _optix_get_instance_inverse_transform_from_handle, (%rd533);
	// end inline asm

$L__BB0_103:
	// begin inline asm
	cvta.to.global.u64 %rd539, %rd793;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r706,%r707,%r708,%r709}, [%rd539];
	// end inline asm
	mov.b32 	%f3478, %r706;
	mov.b32 	%f3479, %r707;
	mov.b32 	%f3480, %r708;
	mov.b32 	%f3481, %r709;
	add.s64 	%rd543, %rd793, 16;
	// begin inline asm
	cvta.to.global.u64 %rd542, %rd543;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r710,%r711,%r712,%r713}, [%rd542];
	// end inline asm
	mov.b32 	%f3474, %r710;
	mov.b32 	%f3475, %r711;
	mov.b32 	%f3476, %r712;
	mov.b32 	%f3477, %r713;
	add.s64 	%rd546, %rd793, 32;
	// begin inline asm
	cvta.to.global.u64 %rd545, %rd546;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r714,%r715,%r716,%r717}, [%rd545];
	// end inline asm
	mov.b32 	%f3470, %r714;
	mov.b32 	%f3471, %r715;
	mov.b32 	%f3472, %r716;
	mov.b32 	%f3473, %r717;

$L__BB0_111:
	setp.eq.s32 	%p56, %r1165, 0;
	@%p56 bra 	$L__BB0_113;

	mul.ftz.f32 	%f2547, %f3437, %f3479;
	fma.rn.ftz.f32 	%f2548, %f3433, %f3478, %f2547;
	fma.rn.ftz.f32 	%f903, %f3441, %f3480, %f2548;
	mul.ftz.f32 	%f2549, %f3436, %f3479;
	fma.rn.ftz.f32 	%f2550, %f3432, %f3478, %f2549;
	fma.rn.ftz.f32 	%f904, %f3440, %f3480, %f2550;
	mul.ftz.f32 	%f2551, %f3435, %f3479;
	fma.rn.ftz.f32 	%f2552, %f3431, %f3478, %f2551;
	fma.rn.ftz.f32 	%f905, %f3439, %f3480, %f2552;
	mul.ftz.f32 	%f2553, %f3434, %f3479;
	fma.rn.ftz.f32 	%f2554, %f3430, %f3478, %f2553;
	fma.rn.ftz.f32 	%f2555, %f3438, %f3480, %f2554;
	add.ftz.f32 	%f3481, %f3481, %f2555;
	mul.ftz.f32 	%f2556, %f3437, %f3475;
	fma.rn.ftz.f32 	%f2557, %f3433, %f3474, %f2556;
	fma.rn.ftz.f32 	%f907, %f3441, %f3476, %f2557;
	mul.ftz.f32 	%f2558, %f3436, %f3475;
	fma.rn.ftz.f32 	%f2559, %f3432, %f3474, %f2558;
	fma.rn.ftz.f32 	%f908, %f3440, %f3476, %f2559;
	mul.ftz.f32 	%f2560, %f3435, %f3475;
	fma.rn.ftz.f32 	%f2561, %f3431, %f3474, %f2560;
	fma.rn.ftz.f32 	%f909, %f3439, %f3476, %f2561;
	mul.ftz.f32 	%f2562, %f3434, %f3475;
	fma.rn.ftz.f32 	%f2563, %f3430, %f3474, %f2562;
	fma.rn.ftz.f32 	%f2564, %f3438, %f3476, %f2563;
	add.ftz.f32 	%f3477, %f3477, %f2564;
	mul.ftz.f32 	%f2565, %f3437, %f3471;
	fma.rn.ftz.f32 	%f2566, %f3433, %f3470, %f2565;
	fma.rn.ftz.f32 	%f911, %f3441, %f3472, %f2566;
	mul.ftz.f32 	%f2567, %f3436, %f3471;
	fma.rn.ftz.f32 	%f2568, %f3432, %f3470, %f2567;
	fma.rn.ftz.f32 	%f912, %f3440, %f3472, %f2568;
	mul.ftz.f32 	%f2569, %f3435, %f3471;
	fma.rn.ftz.f32 	%f2570, %f3431, %f3470, %f2569;
	fma.rn.ftz.f32 	%f913, %f3439, %f3472, %f2570;
	mul.ftz.f32 	%f2571, %f3434, %f3471;
	fma.rn.ftz.f32 	%f2572, %f3430, %f3470, %f2571;
	fma.rn.ftz.f32 	%f2573, %f3438, %f3472, %f2572;
	add.ftz.f32 	%f3473, %f3473, %f2573;
	mov.f32 	%f3470, %f911;
	mov.f32 	%f3471, %f912;
	mov.f32 	%f3472, %f913;
	mov.f32 	%f3474, %f907;
	mov.f32 	%f3475, %f908;
	mov.f32 	%f3476, %f909;
	mov.f32 	%f3478, %f903;
	mov.f32 	%f3479, %f904;
	mov.f32 	%f3480, %f905;

$L__BB0_113:
	add.s32 	%r1165, %r1165, 1;
	setp.lt.u32 	%p57, %r1165, %r701;
	mov.f32 	%f3430, %f3481;
	mov.f32 	%f3431, %f3480;
	mov.f32 	%f3432, %f3479;
	mov.f32 	%f3433, %f3478;
	mov.f32 	%f3434, %f3477;
	mov.f32 	%f3435, %f3476;
	mov.f32 	%f3436, %f3475;
	mov.f32 	%f3437, %f3474;
	mov.f32 	%f3438, %f3473;
	mov.f32 	%f3439, %f3472;
	mov.f32 	%f3440, %f3471;
	mov.f32 	%f3441, %f3470;
	@%p57 bra 	$L__BB0_98;

$L__BB0_114:
	mul.ftz.f32 	%f2574, %f2, %f3479;
	fma.rn.ftz.f32 	%f2575, %f1, %f3478, %f2574;
	fma.rn.ftz.f32 	%f2576, %f3, %f3480, %f2575;
	mul.ftz.f32 	%f2577, %f2, %f3475;
	fma.rn.ftz.f32 	%f2578, %f1, %f3474, %f2577;
	fma.rn.ftz.f32 	%f2579, %f3, %f3476, %f2578;
	mul.ftz.f32 	%f2580, %f2, %f3471;
	fma.rn.ftz.f32 	%f2581, %f1, %f3470, %f2580;
	fma.rn.ftz.f32 	%f2582, %f3, %f3472, %f2581;
	add.ftz.f32 	%f3, %f3473, %f2582;
	add.ftz.f32 	%f2, %f3477, %f2579;
	add.ftz.f32 	%f1, %f3481, %f2576;

$L__BB0_115:
	// begin inline asm
	call (%r852), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f951, %r852;
	setp.eq.ftz.f32 	%p58, %f951, 0f00000000;
	@%p58 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_116;

$L__BB0_119:
	fma.rn.ftz.f32 	%f2632, %f752, 0f00000000, %f748;
	fma.rn.ftz.f32 	%f2633, %f753, 0f00000000, %f749;
	fma.rn.ftz.f32 	%f2634, %f754, 0f00000000, %f750;
	neg.ftz.f32 	%f3509, %f2632;
	neg.ftz.f32 	%f3510, %f2633;
	neg.ftz.f32 	%f3511, %f2634;
	bra.uni 	$L__BB0_120;

$L__BB0_49:
	// begin inline asm
	call (%rd291), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r389), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f1743, 0f00000000;
	// begin inline asm
	call (%f1727, %f1728, %f1729, %f1730,  %f1731, %f1732, %f1733, %f1734,  %f1735, %f1736, %f1737, %f1738,  %f1739, %f1740, %f1741, %f1742), _optix_get_cubic_bspline_vertex_data, (%rd291, %r74, %r389, %f1743);
	// end inline asm
	add.ftz.f32 	%f1744, %f1735, %f1727;
	add.ftz.f32 	%f1745, %f1736, %f1728;
	add.ftz.f32 	%f1746, %f1737, %f1729;
	add.ftz.f32 	%f1747, %f1738, %f1730;
	mul.ftz.f32 	%f1748, %f1744, 0f3E2AAAAB;
	mul.ftz.f32 	%f1749, %f1745, 0f3E2AAAAB;
	mul.ftz.f32 	%f1750, %f1746, 0f3E2AAAAB;
	mul.ftz.f32 	%f1751, %f1747, 0f3E2AAAAB;
	fma.rn.ftz.f32 	%f373, %f1731, 0f3F2AAAAB, %f1748;
	fma.rn.ftz.f32 	%f374, %f1732, 0f3F2AAAAB, %f1749;
	fma.rn.ftz.f32 	%f375, %f1733, 0f3F2AAAAB, %f1750;
	fma.rn.ftz.f32 	%f376, %f1734, 0f3F2AAAAB, %f1751;
	sub.ftz.f32 	%f377, %f1735, %f1727;
	sub.ftz.f32 	%f378, %f1736, %f1728;
	sub.ftz.f32 	%f379, %f1737, %f1729;
	sub.ftz.f32 	%f380, %f1738, %f1730;
	sub.ftz.f32 	%f381, %f1735, %f1731;
	sub.ftz.f32 	%f382, %f1736, %f1732;
	sub.ftz.f32 	%f383, %f1737, %f1733;
	sub.ftz.f32 	%f384, %f1738, %f1734;
	sub.ftz.f32 	%f385, %f1739, %f1731;
	sub.ftz.f32 	%f386, %f1740, %f1732;
	sub.ftz.f32 	%f387, %f1741, %f1733;
	sub.ftz.f32 	%f388, %f1742, %f1734;
	// begin inline asm
	call (%r392), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p26, %r392, 0;
	@%p26 bra 	$L__BB0_69;

	// begin inline asm
	call (%r393), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1752), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p27, %r393, 0;
	@%p27 bra 	$L__BB0_68;

	mov.u32 	%r1163, 0;

$L__BB0_52:
	.pragma "nounroll";
	// begin inline asm
	call (%rd293), _optix_get_transform_list_handle, (%r1163);
	// end inline asm
	// begin inline asm
	call (%r396), _optix_get_transform_type_from_handle, (%rd293);
	// end inline asm
	or.b32  	%r397, %r396, 1;
	setp.eq.s32 	%p28, %r397, 3;
	@%p28 bra 	$L__BB0_58;
	bra.uni 	$L__BB0_53;

$L__BB0_58:
	setp.eq.s32 	%p31, %r396, 2;
	@%p31 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_59;

$L__BB0_62:
	// begin inline asm
	call (%rd365), _optix_get_matrix_motion_transform_from_handle, (%rd293);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd367, %rd365;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r485,%r486,%r487,%r488}, [%rd367];
	// end inline asm
	add.s64 	%rd371, %rd365, 16;
	// begin inline asm
	cvta.to.global.u64 %rd370, %rd371;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r489,%r490,%r491,%r492}, [%rd370];
	// end inline asm
	add.s64 	%rd374, %rd365, 32;
	// begin inline asm
	cvta.to.global.u64 %rd373, %rd374;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r493,%r494,%r495,%r496}, [%rd373];
	// end inline asm
	add.s64 	%rd377, %rd365, 48;
	// begin inline asm
	cvta.to.global.u64 %rd376, %rd377;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r497,%r498,%r499,%r500}, [%rd376];
	// end inline asm
	add.s64 	%rd380, %rd365, 64;
	// begin inline asm
	cvta.to.global.u64 %rd379, %rd380;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r501,%r502,%r503,%r504}, [%rd379];
	// end inline asm
	add.s64 	%rd383, %rd365, 80;
	// begin inline asm
	cvta.to.global.u64 %rd382, %rd383;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r505,%r506,%r507,%r508}, [%rd382];
	// end inline asm
	add.s64 	%rd386, %rd365, 96;
	// begin inline asm
	cvta.to.global.u64 %rd385, %rd386;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r509,%r510,%r511,%r512}, [%rd385];
	// end inline asm
	add.s64 	%rd389, %rd365, 112;
	// begin inline asm
	cvta.to.global.u64 %rd388, %rd389;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r513,%r514,%r515,%r516}, [%rd388];
	// end inline asm
	mov.b32 	%f1879, %r488;
	mov.b32 	%f1880, %r489;
	and.b32  	%r529, %r487, 65535;
	add.s32 	%r530, %r529, -1;
	cvt.rn.f32.s32 	%f1881, %r530;
	sub.ftz.f32 	%f1882, %f1752, %f1879;
	mul.ftz.f32 	%f1883, %f1882, %f1881;
	sub.ftz.f32 	%f1884, %f1880, %f1879;
	div.approx.ftz.f32 	%f1885, %f1883, %f1884;
	min.ftz.f32 	%f1886, %f1881, %f1885;
	mov.f32 	%f1887, 0f00000000;
	max.ftz.f32 	%f1888, %f1887, %f1886;
	cvt.rmi.ftz.f32.f32 	%f1889, %f1888;
	sub.ftz.f32 	%f475, %f1888, %f1889;
	cvt.rzi.ftz.s32.f32 	%r531, %f1889;
	cvt.s64.s32 	%rd22, %r531;
	mul.wide.s32 	%rd400, %r531, 48;
	add.s64 	%rd392, %rd374, %rd400;
	// begin inline asm
	cvta.to.global.u64 %rd391, %rd392;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r517,%r518,%r519,%r520}, [%rd391];
	// end inline asm
	mov.b32 	%f3329, %r517;
	mov.b32 	%f3330, %r518;
	mov.b32 	%f3331, %r519;
	mov.b32 	%f3332, %r520;
	add.s64 	%rd395, %rd392, 16;
	// begin inline asm
	cvta.to.global.u64 %rd394, %rd395;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r521,%r522,%r523,%r524}, [%rd394];
	// end inline asm
	mov.b32 	%f3325, %r521;
	mov.b32 	%f3326, %r522;
	mov.b32 	%f3327, %r523;
	mov.b32 	%f3328, %r524;
	add.s64 	%rd398, %rd392, 32;
	// begin inline asm
	cvta.to.global.u64 %rd397, %rd398;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r525,%r526,%r527,%r528}, [%rd397];
	// end inline asm
	mov.b32 	%f3321, %r525;
	mov.b32 	%f3322, %r526;
	mov.b32 	%f3323, %r527;
	mov.b32 	%f3324, %r528;
	setp.leu.ftz.f32 	%p33, %f475, 0f00000000;
	@%p33 bra 	$L__BB0_64;

	mov.f32 	%f1890, 0f3F800000;
	sub.ftz.f32 	%f1891, %f1890, %f475;
	mul.lo.s64 	%rd410, %rd22, 48;
	add.s64 	%rd411, %rd365, %rd410;
	add.s64 	%rd402, %rd411, 80;
	// begin inline asm
	cvta.to.global.u64 %rd401, %rd402;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r532,%r533,%r534,%r535}, [%rd401];
	// end inline asm
	mov.b32 	%f1892, %r532;
	mov.b32 	%f1893, %r533;
	mov.b32 	%f1894, %r534;
	mov.b32 	%f1895, %r535;
	mul.ftz.f32 	%f1896, %f475, %f1892;
	mul.ftz.f32 	%f1897, %f475, %f1893;
	mul.ftz.f32 	%f1898, %f475, %f1894;
	mul.ftz.f32 	%f1899, %f475, %f1895;
	fma.rn.ftz.f32 	%f3329, %f1891, %f3329, %f1896;
	fma.rn.ftz.f32 	%f3330, %f1891, %f3330, %f1897;
	fma.rn.ftz.f32 	%f3331, %f1891, %f3331, %f1898;
	fma.rn.ftz.f32 	%f3332, %f1891, %f3332, %f1899;
	add.s64 	%rd405, %rd411, 96;
	// begin inline asm
	cvta.to.global.u64 %rd404, %rd405;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r536,%r537,%r538,%r539}, [%rd404];
	// end inline asm
	mov.b32 	%f1900, %r536;
	mov.b32 	%f1901, %r537;
	mov.b32 	%f1902, %r538;
	mov.b32 	%f1903, %r539;
	mul.ftz.f32 	%f1904, %f475, %f1900;
	mul.ftz.f32 	%f1905, %f475, %f1901;
	mul.ftz.f32 	%f1906, %f475, %f1902;
	mul.ftz.f32 	%f1907, %f475, %f1903;
	fma.rn.ftz.f32 	%f3325, %f1891, %f3325, %f1904;
	fma.rn.ftz.f32 	%f3326, %f1891, %f3326, %f1905;
	fma.rn.ftz.f32 	%f3327, %f1891, %f3327, %f1906;
	fma.rn.ftz.f32 	%f3328, %f1891, %f3328, %f1907;
	add.s64 	%rd408, %rd411, 112;
	// begin inline asm
	cvta.to.global.u64 %rd407, %rd408;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r540,%r541,%r542,%r543}, [%rd407];
	// end inline asm
	mov.b32 	%f1908, %r540;
	mov.b32 	%f1909, %r541;
	mov.b32 	%f1910, %r542;
	mov.b32 	%f1911, %r543;
	mul.ftz.f32 	%f1912, %f475, %f1908;
	mul.ftz.f32 	%f1913, %f475, %f1909;
	mul.ftz.f32 	%f1914, %f475, %f1910;
	mul.ftz.f32 	%f1915, %f475, %f1911;
	fma.rn.ftz.f32 	%f3321, %f1891, %f3321, %f1912;
	fma.rn.ftz.f32 	%f3322, %f1891, %f3322, %f1913;
	fma.rn.ftz.f32 	%f3323, %f1891, %f3323, %f1914;
	fma.rn.ftz.f32 	%f3324, %f1891, %f3324, %f1915;
	bra.uni 	$L__BB0_64;

$L__BB0_53:
	mov.f32 	%f3335, 0f3F800000;
	setp.eq.s32 	%p29, %r396, 4;
	@%p29 bra 	$L__BB0_56;

	setp.ne.s32 	%p30, %r396, 1;
	mov.f32 	%f3333, %f1743;
	mov.f32 	%f3334, %f1743;
	mov.f32 	%f3336, %f1743;
	mov.f32 	%f3337, %f1743;
	mov.f32 	%f3338, %f3335;
	mov.f32 	%f3339, %f1743;
	mov.f32 	%f3340, %f1743;
	mov.f32 	%f3341, %f3335;
	mov.f32 	%f3342, %f1743;
	mov.f32 	%f3343, %f1743;
	mov.f32 	%f3344, %f1743;
	@%p30 bra 	$L__BB0_65;

	// begin inline asm
	call (%rd295), _optix_get_static_transform_from_handle, (%rd293);
	// end inline asm
	add.s64 	%rd791, %rd295, 64;
	bra.uni 	$L__BB0_57;

$L__BB0_59:
	// begin inline asm
	call (%rd308), _optix_get_srt_motion_transform_from_handle, (%rd293);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd310, %rd308;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r410,%r411,%r412,%r413}, [%rd310];
	// end inline asm
	add.s64 	%rd314, %rd308, 16;
	// begin inline asm
	cvta.to.global.u64 %rd313, %rd314;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r414,%r415,%r416,%r417}, [%rd313];
	// end inline asm
	add.s64 	%rd317, %rd308, 32;
	// begin inline asm
	cvta.to.global.u64 %rd316, %rd317;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r418,%r419,%r420,%r421}, [%rd316];
	// end inline asm
	add.s64 	%rd320, %rd308, 48;
	// begin inline asm
	cvta.to.global.u64 %rd319, %rd320;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r422,%r423,%r424,%r425}, [%rd319];
	// end inline asm
	add.s64 	%rd323, %rd308, 64;
	// begin inline asm
	cvta.to.global.u64 %rd322, %rd323;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r426,%r427,%r428,%r429}, [%rd322];
	// end inline asm
	add.s64 	%rd326, %rd308, 80;
	// begin inline asm
	cvta.to.global.u64 %rd325, %rd326;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r430,%r431,%r432,%r433}, [%rd325];
	// end inline asm
	add.s64 	%rd329, %rd308, 96;
	// begin inline asm
	cvta.to.global.u64 %rd328, %rd329;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r434,%r435,%r436,%r437}, [%rd328];
	// end inline asm
	add.s64 	%rd332, %rd308, 112;
	// begin inline asm
	cvta.to.global.u64 %rd331, %rd332;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r438,%r439,%r440,%r441}, [%rd331];
	// end inline asm
	add.s64 	%rd335, %rd308, 128;
	// begin inline asm
	cvta.to.global.u64 %rd334, %rd335;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r442,%r443,%r444,%r445}, [%rd334];
	// end inline asm
	add.s64 	%rd338, %rd308, 144;
	// begin inline asm
	cvta.to.global.u64 %rd337, %rd338;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r446,%r447,%r448,%r449}, [%rd337];
	// end inline asm
	mov.b32 	%f1767, %r413;
	mov.b32 	%f1768, %r414;
	and.b32  	%r466, %r412, 65535;
	add.s32 	%r467, %r466, -1;
	cvt.rn.f32.s32 	%f1769, %r467;
	sub.ftz.f32 	%f1770, %f1752, %f1767;
	mul.ftz.f32 	%f1771, %f1770, %f1769;
	sub.ftz.f32 	%f1772, %f1768, %f1767;
	div.approx.ftz.f32 	%f1773, %f1771, %f1772;
	min.ftz.f32 	%f1774, %f1769, %f1773;
	mov.f32 	%f1775, 0f00000000;
	max.ftz.f32 	%f1776, %f1775, %f1774;
	cvt.rmi.ftz.f32.f32 	%f1777, %f1776;
	sub.ftz.f32 	%f414, %f1776, %f1777;
	cvt.rzi.ftz.s32.f32 	%r468, %f1777;
	mul.wide.s32 	%rd352, %r468, 64;
	add.s64 	%rd341, %rd317, %rd352;
	// begin inline asm
	cvta.to.global.u64 %rd340, %rd341;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r450,%r451,%r452,%r453}, [%rd340];
	// end inline asm
	mov.b32 	%f3305, %r450;
	mov.b32 	%f3306, %r451;
	mov.b32 	%f3307, %r452;
	mov.b32 	%f3308, %r453;
	add.s64 	%rd344, %rd341, 16;
	// begin inline asm
	cvta.to.global.u64 %rd343, %rd344;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r454,%r455,%r456,%r457}, [%rd343];
	// end inline asm
	mov.b32 	%f3309, %r454;
	mov.b32 	%f3310, %r455;
	mov.b32 	%f3311, %r456;
	mov.b32 	%f3312, %r457;
	add.s64 	%rd347, %rd341, 32;
	// begin inline asm
	cvta.to.global.u64 %rd346, %rd347;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r458,%r459,%r460,%r461}, [%rd346];
	// end inline asm
	mov.b32 	%f3313, %r458;
	mov.b32 	%f3314, %r459;
	mov.b32 	%f3315, %r460;
	mov.b32 	%f3316, %r461;
	add.s64 	%rd350, %rd341, 48;
	// begin inline asm
	cvta.to.global.u64 %rd349, %rd350;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r462,%r463,%r464,%r465}, [%rd349];
	// end inline asm
	mov.b32 	%f3317, %r462;
	mov.b32 	%f3318, %r463;
	mov.b32 	%f3319, %r464;
	mov.b32 	%f3320, %r465;
	setp.leu.ftz.f32 	%p32, %f414, 0f00000000;
	@%p32 bra 	$L__BB0_61;

	mov.f32 	%f1778, 0f3F800000;
	sub.ftz.f32 	%f1779, %f1778, %f414;
	add.s64 	%rd354, %rd341, 64;
	// begin inline asm
	cvta.to.global.u64 %rd353, %rd354;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r469,%r470,%r471,%r472}, [%rd353];
	// end inline asm
	mov.b32 	%f1780, %r469;
	mov.b32 	%f1781, %r470;
	mov.b32 	%f1782, %r471;
	mov.b32 	%f1783, %r472;
	mul.ftz.f32 	%f1784, %f414, %f1780;
	mul.ftz.f32 	%f1785, %f414, %f1781;
	mul.ftz.f32 	%f1786, %f414, %f1782;
	mul.ftz.f32 	%f1787, %f414, %f1783;
	fma.rn.ftz.f32 	%f3305, %f1779, %f3305, %f1784;
	fma.rn.ftz.f32 	%f3306, %f1779, %f3306, %f1785;
	fma.rn.ftz.f32 	%f3307, %f1779, %f3307, %f1786;
	fma.rn.ftz.f32 	%f3308, %f1779, %f3308, %f1787;
	add.s64 	%rd357, %rd341, 80;
	// begin inline asm
	cvta.to.global.u64 %rd356, %rd357;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r473,%r474,%r475,%r476}, [%rd356];
	// end inline asm
	mov.b32 	%f1788, %r473;
	mov.b32 	%f1789, %r474;
	mov.b32 	%f1790, %r475;
	mov.b32 	%f1791, %r476;
	mul.ftz.f32 	%f1792, %f414, %f1788;
	mul.ftz.f32 	%f1793, %f414, %f1789;
	mul.ftz.f32 	%f1794, %f414, %f1790;
	mul.ftz.f32 	%f1795, %f414, %f1791;
	fma.rn.ftz.f32 	%f3309, %f1779, %f3309, %f1792;
	fma.rn.ftz.f32 	%f3310, %f1779, %f3310, %f1793;
	fma.rn.ftz.f32 	%f3311, %f1779, %f3311, %f1794;
	fma.rn.ftz.f32 	%f3312, %f1779, %f3312, %f1795;
	add.s64 	%rd360, %rd341, 96;
	// begin inline asm
	cvta.to.global.u64 %rd359, %rd360;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r477,%r478,%r479,%r480}, [%rd359];
	// end inline asm
	mov.b32 	%f1796, %r477;
	mov.b32 	%f1797, %r478;
	mov.b32 	%f1798, %r479;
	mov.b32 	%f1799, %r480;
	mul.ftz.f32 	%f1800, %f414, %f1796;
	mul.ftz.f32 	%f1801, %f414, %f1797;
	mul.ftz.f32 	%f1802, %f414, %f1798;
	mul.ftz.f32 	%f1803, %f414, %f1799;
	fma.rn.ftz.f32 	%f3313, %f1779, %f3313, %f1800;
	fma.rn.ftz.f32 	%f1804, %f1779, %f3314, %f1801;
	fma.rn.ftz.f32 	%f1805, %f1779, %f3315, %f1802;
	fma.rn.ftz.f32 	%f1806, %f1779, %f3316, %f1803;
	add.s64 	%rd363, %rd341, 112;
	// begin inline asm
	cvta.to.global.u64 %rd362, %rd363;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r481,%r482,%r483,%r484}, [%rd362];
	// end inline asm
	mov.b32 	%f1807, %r481;
	mov.b32 	%f1808, %r482;
	mov.b32 	%f1809, %r483;
	mov.b32 	%f1810, %r484;
	mul.ftz.f32 	%f1811, %f414, %f1807;
	mul.ftz.f32 	%f1812, %f414, %f1808;
	mul.ftz.f32 	%f1813, %f414, %f1809;
	mul.ftz.f32 	%f1814, %f414, %f1810;
	fma.rn.ftz.f32 	%f1815, %f1779, %f3317, %f1811;
	fma.rn.ftz.f32 	%f3318, %f1779, %f3318, %f1812;
	fma.rn.ftz.f32 	%f3319, %f1779, %f3319, %f1813;
	fma.rn.ftz.f32 	%f3320, %f1779, %f3320, %f1814;
	mul.ftz.f32 	%f1816, %f1805, %f1805;
	fma.rn.ftz.f32 	%f1817, %f1804, %f1804, %f1816;
	fma.rn.ftz.f32 	%f1818, %f1806, %f1806, %f1817;
	fma.rn.ftz.f32 	%f1819, %f1815, %f1815, %f1818;
	rsqrt.approx.ftz.f32 	%f1820, %f1819;
	mul.ftz.f32 	%f3314, %f1804, %f1820;
	mul.ftz.f32 	%f3315, %f1805, %f1820;
	mul.ftz.f32 	%f3316, %f1806, %f1820;
	mul.ftz.f32 	%f3317, %f1820, %f1815;

$L__BB0_61:
	mul.ftz.f32 	%f1821, %f3315, %f3315;
	fma.rn.ftz.f32 	%f1822, %f3314, %f3314, %f1821;
	fma.rn.ftz.f32 	%f1823, %f3316, %f3316, %f1822;
	fma.rn.ftz.f32 	%f1824, %f3317, %f3317, %f1823;
	rcp.approx.ftz.f32 	%f1825, %f1824;
	mul.ftz.f32 	%f1826, %f3314, %f1825;
	mul.ftz.f32 	%f1827, %f3315, %f1825;
	mul.ftz.f32 	%f1828, %f3316, %f1825;
	mul.ftz.f32 	%f1829, %f3317, %f1825;
	mul.ftz.f32 	%f1830, %f3314, %f1826;
	mul.ftz.f32 	%f1831, %f3315, %f1827;
	mul.ftz.f32 	%f1832, %f3316, %f1828;
	mul.ftz.f32 	%f1833, %f3314, %f1827;
	mul.ftz.f32 	%f1834, %f3316, %f1829;
	mul.ftz.f32 	%f1835, %f3314, %f1828;
	mul.ftz.f32 	%f1836, %f3315, %f1829;
	mul.ftz.f32 	%f1837, %f3315, %f1828;
	mul.ftz.f32 	%f1838, %f3314, %f1829;
	sub.ftz.f32 	%f1839, %f1830, %f1831;
	sub.ftz.f32 	%f1840, %f1839, %f1832;
	fma.rn.ftz.f32 	%f1841, %f3317, %f1829, %f1840;
	sub.ftz.f32 	%f1842, %f1833, %f1834;
	add.ftz.f32 	%f1843, %f1842, %f1842;
	add.ftz.f32 	%f1844, %f1835, %f1836;
	add.ftz.f32 	%f1845, %f1844, %f1844;
	add.ftz.f32 	%f1846, %f1833, %f1834;
	add.ftz.f32 	%f1847, %f1846, %f1846;
	sub.ftz.f32 	%f1848, %f1831, %f1830;
	sub.ftz.f32 	%f1849, %f1848, %f1832;
	fma.rn.ftz.f32 	%f1850, %f3317, %f1829, %f1849;
	sub.ftz.f32 	%f1851, %f1837, %f1838;
	add.ftz.f32 	%f1852, %f1851, %f1851;
	sub.ftz.f32 	%f1853, %f1835, %f1836;
	add.ftz.f32 	%f1854, %f1853, %f1853;
	add.ftz.f32 	%f1855, %f1837, %f1838;
	add.ftz.f32 	%f1856, %f1855, %f1855;
	neg.ftz.f32 	%f1857, %f1830;
	sub.ftz.f32 	%f1858, %f1857, %f1831;
	add.ftz.f32 	%f1859, %f1832, %f1858;
	fma.rn.ftz.f32 	%f1860, %f3317, %f1829, %f1859;
	mul.ftz.f32 	%f1861, %f3308, %f1841;
	fma.rn.ftz.f32 	%f1862, %f3311, %f1843, %f1861;
	fma.rn.ftz.f32 	%f1863, %f3313, %f1845, %f1862;
	add.ftz.f32 	%f3332, %f3318, %f1863;
	mul.ftz.f32 	%f1864, %f3311, %f1850;
	fma.rn.ftz.f32 	%f1865, %f3308, %f1847, %f1864;
	fma.rn.ftz.f32 	%f1866, %f3313, %f1852, %f1865;
	add.ftz.f32 	%f3328, %f3319, %f1866;
	mul.ftz.f32 	%f1867, %f3311, %f1856;
	fma.rn.ftz.f32 	%f1868, %f3308, %f1854, %f1867;
	fma.rn.ftz.f32 	%f1869, %f3313, %f1860, %f1868;
	add.ftz.f32 	%f3324, %f3320, %f1869;
	mul.ftz.f32 	%f1870, %f3307, %f1841;
	fma.rn.ftz.f32 	%f1871, %f3310, %f1843, %f1870;
	fma.rn.ftz.f32 	%f3331, %f3312, %f1845, %f1871;
	mul.ftz.f32 	%f1872, %f3310, %f1850;
	fma.rn.ftz.f32 	%f1873, %f3307, %f1847, %f1872;
	fma.rn.ftz.f32 	%f3327, %f3312, %f1852, %f1873;
	mul.ftz.f32 	%f1874, %f3310, %f1856;
	fma.rn.ftz.f32 	%f1875, %f3307, %f1854, %f1874;
	fma.rn.ftz.f32 	%f3323, %f3312, %f1860, %f1875;
	mul.ftz.f32 	%f1876, %f3306, %f1841;
	fma.rn.ftz.f32 	%f3330, %f3309, %f1843, %f1876;
	mul.ftz.f32 	%f1877, %f3309, %f1850;
	fma.rn.ftz.f32 	%f3326, %f3306, %f1847, %f1877;
	mul.ftz.f32 	%f1878, %f3309, %f1856;
	fma.rn.ftz.f32 	%f3322, %f3306, %f1854, %f1878;
	mul.ftz.f32 	%f3329, %f3305, %f1841;
	mul.ftz.f32 	%f3325, %f3305, %f1847;
	mul.ftz.f32 	%f3321, %f3305, %f1854;

$L__BB0_64:
	mul.ftz.f32 	%f1916, %f3322, %f3327;
	mul.ftz.f32 	%f1917, %f3323, %f3326;
	sub.ftz.f32 	%f1918, %f1917, %f1916;
	mul.ftz.f32 	%f1919, %f3329, %f1918;
	mul.ftz.f32 	%f1920, %f3321, %f3327;
	mul.ftz.f32 	%f1921, %f3323, %f3325;
	sub.ftz.f32 	%f1922, %f1921, %f1920;
	mul.ftz.f32 	%f1923, %f1922, %f3330;
	sub.ftz.f32 	%f1924, %f1919, %f1923;
	mul.ftz.f32 	%f1925, %f3321, %f3326;
	mul.ftz.f32 	%f1926, %f3322, %f3325;
	sub.ftz.f32 	%f1927, %f1926, %f1925;
	fma.rn.ftz.f32 	%f1928, %f1927, %f3331, %f1924;
	rcp.approx.ftz.f32 	%f1929, %f1928;
	mul.ftz.f32 	%f3341, %f1918, %f1929;
	mul.ftz.f32 	%f1930, %f3323, %f3330;
	mul.ftz.f32 	%f1931, %f3322, %f3331;
	sub.ftz.f32 	%f1932, %f1931, %f1930;
	mul.ftz.f32 	%f3342, %f1932, %f1929;
	mul.ftz.f32 	%f1933, %f3326, %f3331;
	mul.ftz.f32 	%f1934, %f3327, %f3330;
	sub.ftz.f32 	%f1935, %f1934, %f1933;
	mul.ftz.f32 	%f3343, %f1935, %f1929;
	sub.ftz.f32 	%f1936, %f1920, %f1921;
	mul.ftz.f32 	%f3337, %f1936, %f1929;
	mul.ftz.f32 	%f1937, %f3321, %f3331;
	mul.ftz.f32 	%f1938, %f3323, %f3329;
	sub.ftz.f32 	%f1939, %f1938, %f1937;
	mul.ftz.f32 	%f3338, %f1939, %f1929;
	mul.ftz.f32 	%f1940, %f3327, %f3329;
	mul.ftz.f32 	%f1941, %f3325, %f3331;
	sub.ftz.f32 	%f1942, %f1941, %f1940;
	mul.ftz.f32 	%f3339, %f1942, %f1929;
	mul.ftz.f32 	%f3333, %f1927, %f1929;
	mul.ftz.f32 	%f1943, %f3322, %f3329;
	mul.ftz.f32 	%f1944, %f3321, %f3330;
	sub.ftz.f32 	%f1945, %f1944, %f1943;
	mul.ftz.f32 	%f3334, %f1945, %f1929;
	mul.ftz.f32 	%f1946, %f3325, %f3330;
	mul.ftz.f32 	%f1947, %f3326, %f3329;
	sub.ftz.f32 	%f1948, %f1947, %f1946;
	mul.ftz.f32 	%f3335, %f1948, %f1929;
	mul.ftz.f32 	%f1949, %f3332, %f3341;
	neg.ftz.f32 	%f1950, %f1949;
	mul.ftz.f32 	%f1951, %f3328, %f3342;
	sub.ftz.f32 	%f1952, %f1950, %f1951;
	mul.ftz.f32 	%f1953, %f3324, %f3343;
	sub.ftz.f32 	%f3344, %f1952, %f1953;
	mul.ftz.f32 	%f1954, %f3332, %f3337;
	neg.ftz.f32 	%f1955, %f1954;
	mul.ftz.f32 	%f1956, %f3328, %f3338;
	sub.ftz.f32 	%f1957, %f1955, %f1956;
	mul.ftz.f32 	%f1958, %f3324, %f3339;
	sub.ftz.f32 	%f3340, %f1957, %f1958;
	mul.ftz.f32 	%f1959, %f3332, %f3333;
	neg.ftz.f32 	%f1960, %f1959;
	mul.ftz.f32 	%f1961, %f3328, %f3334;
	sub.ftz.f32 	%f1962, %f1960, %f1961;
	mul.ftz.f32 	%f1963, %f3324, %f3335;
	sub.ftz.f32 	%f3336, %f1962, %f1963;
	bra.uni 	$L__BB0_65;

$L__BB0_56:
	// begin inline asm
	call (%rd791), _optix_get_instance_inverse_transform_from_handle, (%rd293);
	// end inline asm

$L__BB0_57:
	// begin inline asm
	cvta.to.global.u64 %rd299, %rd791;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r398,%r399,%r400,%r401}, [%rd299];
	// end inline asm
	mov.b32 	%f3341, %r398;
	mov.b32 	%f3342, %r399;
	mov.b32 	%f3343, %r400;
	mov.b32 	%f3344, %r401;
	add.s64 	%rd303, %rd791, 16;
	// begin inline asm
	cvta.to.global.u64 %rd302, %rd303;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r402,%r403,%r404,%r405}, [%rd302];
	// end inline asm
	mov.b32 	%f3337, %r402;
	mov.b32 	%f3338, %r403;
	mov.b32 	%f3339, %r404;
	mov.b32 	%f3340, %r405;
	add.s64 	%rd306, %rd791, 32;
	// begin inline asm
	cvta.to.global.u64 %rd305, %rd306;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r406,%r407,%r408,%r409}, [%rd305];
	// end inline asm
	mov.b32 	%f3333, %r406;
	mov.b32 	%f3334, %r407;
	mov.b32 	%f3335, %r408;
	mov.b32 	%f3336, %r409;

$L__BB0_65:
	setp.eq.s32 	%p34, %r1163, 0;
	@%p34 bra 	$L__BB0_67;

	mul.ftz.f32 	%f1964, %f3300, %f3342;
	fma.rn.ftz.f32 	%f1965, %f3296, %f3341, %f1964;
	fma.rn.ftz.f32 	%f536, %f3304, %f3343, %f1965;
	mul.ftz.f32 	%f1966, %f3299, %f3342;
	fma.rn.ftz.f32 	%f1967, %f3295, %f3341, %f1966;
	fma.rn.ftz.f32 	%f537, %f3303, %f3343, %f1967;
	mul.ftz.f32 	%f1968, %f3298, %f3342;
	fma.rn.ftz.f32 	%f1969, %f3294, %f3341, %f1968;
	fma.rn.ftz.f32 	%f538, %f3302, %f3343, %f1969;
	mul.ftz.f32 	%f1970, %f3297, %f3342;
	fma.rn.ftz.f32 	%f1971, %f3293, %f3341, %f1970;
	fma.rn.ftz.f32 	%f1972, %f3301, %f3343, %f1971;
	add.ftz.f32 	%f3344, %f3344, %f1972;
	mul.ftz.f32 	%f1973, %f3300, %f3338;
	fma.rn.ftz.f32 	%f1974, %f3296, %f3337, %f1973;
	fma.rn.ftz.f32 	%f540, %f3304, %f3339, %f1974;
	mul.ftz.f32 	%f1975, %f3299, %f3338;
	fma.rn.ftz.f32 	%f1976, %f3295, %f3337, %f1975;
	fma.rn.ftz.f32 	%f541, %f3303, %f3339, %f1976;
	mul.ftz.f32 	%f1977, %f3298, %f3338;
	fma.rn.ftz.f32 	%f1978, %f3294, %f3337, %f1977;
	fma.rn.ftz.f32 	%f542, %f3302, %f3339, %f1978;
	mul.ftz.f32 	%f1979, %f3297, %f3338;
	fma.rn.ftz.f32 	%f1980, %f3293, %f3337, %f1979;
	fma.rn.ftz.f32 	%f1981, %f3301, %f3339, %f1980;
	add.ftz.f32 	%f3340, %f3340, %f1981;
	mul.ftz.f32 	%f1982, %f3300, %f3334;
	fma.rn.ftz.f32 	%f1983, %f3296, %f3333, %f1982;
	fma.rn.ftz.f32 	%f544, %f3304, %f3335, %f1983;
	mul.ftz.f32 	%f1984, %f3299, %f3334;
	fma.rn.ftz.f32 	%f1985, %f3295, %f3333, %f1984;
	fma.rn.ftz.f32 	%f545, %f3303, %f3335, %f1985;
	mul.ftz.f32 	%f1986, %f3298, %f3334;
	fma.rn.ftz.f32 	%f1987, %f3294, %f3333, %f1986;
	fma.rn.ftz.f32 	%f546, %f3302, %f3335, %f1987;
	mul.ftz.f32 	%f1988, %f3297, %f3334;
	fma.rn.ftz.f32 	%f1989, %f3293, %f3333, %f1988;
	fma.rn.ftz.f32 	%f1990, %f3301, %f3335, %f1989;
	add.ftz.f32 	%f3336, %f3336, %f1990;
	mov.f32 	%f3333, %f544;
	mov.f32 	%f3334, %f545;
	mov.f32 	%f3335, %f546;
	mov.f32 	%f3337, %f540;
	mov.f32 	%f3338, %f541;
	mov.f32 	%f3339, %f542;
	mov.f32 	%f3341, %f536;
	mov.f32 	%f3342, %f537;
	mov.f32 	%f3343, %f538;

$L__BB0_67:
	add.s32 	%r1163, %r1163, 1;
	setp.lt.u32 	%p35, %r1163, %r393;
	mov.f32 	%f3293, %f3344;
	mov.f32 	%f3294, %f3343;
	mov.f32 	%f3295, %f3342;
	mov.f32 	%f3296, %f3341;
	mov.f32 	%f3297, %f3340;
	mov.f32 	%f3298, %f3339;
	mov.f32 	%f3299, %f3338;
	mov.f32 	%f3300, %f3337;
	mov.f32 	%f3301, %f3336;
	mov.f32 	%f3302, %f3335;
	mov.f32 	%f3303, %f3334;
	mov.f32 	%f3304, %f3333;
	@%p35 bra 	$L__BB0_52;

$L__BB0_68:
	mul.ftz.f32 	%f1991, %f2, %f3342;
	fma.rn.ftz.f32 	%f1992, %f1, %f3341, %f1991;
	fma.rn.ftz.f32 	%f1993, %f3, %f3343, %f1992;
	mul.ftz.f32 	%f1994, %f2, %f3338;
	fma.rn.ftz.f32 	%f1995, %f1, %f3337, %f1994;
	fma.rn.ftz.f32 	%f1996, %f3, %f3339, %f1995;
	mul.ftz.f32 	%f1997, %f2, %f3334;
	fma.rn.ftz.f32 	%f1998, %f1, %f3333, %f1997;
	fma.rn.ftz.f32 	%f1999, %f3, %f3335, %f1998;
	add.ftz.f32 	%f3, %f3336, %f1999;
	add.ftz.f32 	%f2, %f3340, %f1996;
	add.ftz.f32 	%f1, %f3344, %f1993;

$L__BB0_69:
	// begin inline asm
	call (%r544), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f584, %r544;
	setp.eq.ftz.f32 	%p36, %f584, 0f00000000;
	@%p36 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_70;

$L__BB0_73:
	mov.f32 	%f2104, 0f3F800000;
	sub.ftz.f32 	%f2105, %f2104, 0f358637BD;
	mul.ftz.f32 	%f2106, %f2105, 0f3F000000;
	mul.ftz.f32 	%f2107, %f2106, %f2105;
	add.ftz.f32 	%f2108, %f2105, %f2105;
	mul.ftz.f32 	%f2109, %f2108, 0f358637BD;
	mul.ftz.f32 	%f2110, %f381, %f2109;
	fma.rn.ftz.f32 	%f2111, %f377, %f2107, %f2110;
	mul.ftz.f32 	%f2112, %f382, %f2109;
	fma.rn.ftz.f32 	%f2113, %f378, %f2107, %f2112;
	mul.ftz.f32 	%f2114, %f383, %f2109;
	fma.rn.ftz.f32 	%f2115, %f379, %f2107, %f2114;
	fma.rn.ftz.f32 	%f2116, %f385, 0f2B0CBCCC, %f2111;
	fma.rn.ftz.f32 	%f2117, %f386, 0f2B0CBCCC, %f2113;
	fma.rn.ftz.f32 	%f2118, %f387, 0f2B0CBCCC, %f2115;
	neg.ftz.f32 	%f3372, %f2116;
	neg.ftz.f32 	%f3373, %f2117;
	neg.ftz.f32 	%f3374, %f2118;
	bra.uni 	$L__BB0_74;

$L__BB0_24:
	setp.ltu.ftz.f32 	%p15, %f213, 0f3F800000;
	@%p15 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	sub.ftz.f32 	%f1496, %f1243, %f1239;
	fma.rn.ftz.f32 	%f1497, %f13, %f213, %f1236;
	fma.rn.ftz.f32 	%f1498, %f15, %f213, %f1237;
	fma.rn.ftz.f32 	%f1499, %f17, %f213, %f1238;
	fma.rn.ftz.f32 	%f1500, %f1496, %f213, %f1239;
	mul.ftz.f32 	%f1501, %f15, %f15;
	fma.rn.ftz.f32 	%f1502, %f13, %f13, %f1501;
	fma.rn.ftz.f32 	%f1503, %f17, %f17, %f1502;
	sub.ftz.f32 	%f1504, %f1, %f1497;
	sub.ftz.f32 	%f1505, %f2, %f1498;
	sub.ftz.f32 	%f1506, %f3, %f1499;
	mul.ftz.f32 	%f1507, %f15, %f1505;
	fma.rn.ftz.f32 	%f1508, %f13, %f1504, %f1507;
	fma.rn.ftz.f32 	%f1509, %f17, %f1506, %f1508;
	div.approx.ftz.f32 	%f1510, %f1509, %f1503;
	mul.ftz.f32 	%f1511, %f13, %f1510;
	mul.ftz.f32 	%f1512, %f15, %f1510;
	mul.ftz.f32 	%f1513, %f17, %f1510;
	sub.ftz.f32 	%f1514, %f1504, %f1511;
	sub.ftz.f32 	%f1515, %f1505, %f1512;
	sub.ftz.f32 	%f1516, %f1506, %f1513;
	mul.ftz.f32 	%f1517, %f1515, %f1515;
	fma.rn.ftz.f32 	%f1518, %f1514, %f1514, %f1517;
	fma.rn.ftz.f32 	%f1519, %f1516, %f1516, %f1518;
	sqrt.approx.ftz.f32 	%f1520, %f1519;
	div.approx.ftz.f32 	%f1521, %f1500, %f1520;
	mul.ftz.f32 	%f1522, %f1514, %f1521;
	mul.ftz.f32 	%f1523, %f1515, %f1521;
	mul.ftz.f32 	%f1524, %f1516, %f1521;
	mul.ftz.f32 	%f1525, %f1503, %f1522;
	mul.ftz.f32 	%f1526, %f1503, %f1523;
	mul.ftz.f32 	%f1527, %f1503, %f1524;
	mul.ftz.f32 	%f1528, %f1496, %f1500;
	mul.ftz.f32 	%f1529, %f13, %f1528;
	mul.ftz.f32 	%f1530, %f15, %f1528;
	mul.ftz.f32 	%f1531, %f17, %f1528;
	sub.ftz.f32 	%f3235, %f1525, %f1529;
	sub.ftz.f32 	%f3236, %f1526, %f1530;
	sub.ftz.f32 	%f3237, %f1527, %f1531;
	bra.uni 	$L__BB0_28;

$L__BB0_116:
	setp.eq.ftz.f32 	%p59, %f951, 0f3F800000;
	add.ftz.f32 	%f952, %f752, %f752;
	add.ftz.f32 	%f953, %f753, %f753;
	add.ftz.f32 	%f954, %f754, %f754;
	@%p59 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_117;

$L__BB0_118:
	add.ftz.f32 	%f3509, %f748, %f952;
	add.ftz.f32 	%f3510, %f749, %f953;
	add.ftz.f32 	%f3511, %f750, %f954;
	bra.uni 	$L__BB0_120;

$L__BB0_70:
	setp.eq.ftz.f32 	%p37, %f584, 0f3F800000;
	@%p37 bra 	$L__BB0_72;
	bra.uni 	$L__BB0_71;

$L__BB0_72:
	mov.f32 	%f2092, 0f3F800000;
	sub.ftz.f32 	%f2093, %f2092, 0f3F7FFFEF;
	mul.ftz.f32 	%f2094, %f2093, 0f3F000000;
	mul.ftz.f32 	%f2095, %f2094, %f2093;
	add.ftz.f32 	%f2096, %f2093, %f2093;
	mul.ftz.f32 	%f2097, %f2096, 0f3F7FFFEF;
	mul.ftz.f32 	%f2098, %f381, %f2097;
	fma.rn.ftz.f32 	%f2099, %f377, %f2095, %f2098;
	mul.ftz.f32 	%f2100, %f382, %f2097;
	fma.rn.ftz.f32 	%f2101, %f378, %f2095, %f2100;
	mul.ftz.f32 	%f2102, %f383, %f2097;
	fma.rn.ftz.f32 	%f2103, %f379, %f2095, %f2102;
	fma.rn.ftz.f32 	%f3372, %f385, 0f3EFFFFDE, %f2099;
	fma.rn.ftz.f32 	%f3373, %f386, 0f3EFFFFDE, %f2101;
	fma.rn.ftz.f32 	%f3374, %f387, 0f3EFFFFDE, %f2103;
	bra.uni 	$L__BB0_74;

$L__BB0_25:
	add.ftz.f32 	%f1493, %f1236, %f13;
	sub.ftz.f32 	%f3235, %f1, %f1493;
	add.ftz.f32 	%f1494, %f1237, %f15;
	sub.ftz.f32 	%f3236, %f2, %f1494;
	add.ftz.f32 	%f1495, %f1238, %f17;
	sub.ftz.f32 	%f3237, %f3, %f1495;

$L__BB0_28:
	mul.ftz.f32 	%f1532, %f3236, %f3236;
	fma.rn.ftz.f32 	%f1533, %f3235, %f3235, %f1532;
	fma.rn.ftz.f32 	%f1534, %f3237, %f3237, %f1533;
	rsqrt.approx.ftz.f32 	%f1535, %f1534;
	mul.ftz.f32 	%f3572, %f3235, %f1535;
	mul.ftz.f32 	%f3571, %f3236, %f1535;
	mul.ftz.f32 	%f228, %f3237, %f1535;
	// begin inline asm
	call (%r237), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p16, %r237, 0;
	@%p16 bra 	$L__BB0_48;

	// begin inline asm
	call (%r238), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1536), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p17, %r238, 0;
	@%p17 bra 	$L__BB0_47;

	mov.u32 	%r1162, 0;

$L__BB0_31:
	.pragma "nounroll";
	// begin inline asm
	call (%rd172), _optix_get_transform_list_handle, (%r1162);
	// end inline asm
	// begin inline asm
	call (%r241), _optix_get_transform_type_from_handle, (%rd172);
	// end inline asm
	or.b32  	%r242, %r241, 1;
	setp.eq.s32 	%p18, %r242, 3;
	@%p18 bra 	$L__BB0_37;
	bra.uni 	$L__BB0_32;

$L__BB0_37:
	setp.eq.s32 	%p21, %r241, 2;
	@%p21 bra 	$L__BB0_41;
	bra.uni 	$L__BB0_38;

$L__BB0_41:
	// begin inline asm
	call (%rd244), _optix_get_matrix_motion_transform_from_handle, (%rd172);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd246, %rd244;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r330,%r331,%r332,%r333}, [%rd246];
	// end inline asm
	add.s64 	%rd250, %rd244, 16;
	// begin inline asm
	cvta.to.global.u64 %rd249, %rd250;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r334,%r335,%r336,%r337}, [%rd249];
	// end inline asm
	add.s64 	%rd253, %rd244, 32;
	// begin inline asm
	cvta.to.global.u64 %rd252, %rd253;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r338,%r339,%r340,%r341}, [%rd252];
	// end inline asm
	add.s64 	%rd256, %rd244, 48;
	// begin inline asm
	cvta.to.global.u64 %rd255, %rd256;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r342,%r343,%r344,%r345}, [%rd255];
	// end inline asm
	add.s64 	%rd259, %rd244, 64;
	// begin inline asm
	cvta.to.global.u64 %rd258, %rd259;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r346,%r347,%r348,%r349}, [%rd258];
	// end inline asm
	add.s64 	%rd262, %rd244, 80;
	// begin inline asm
	cvta.to.global.u64 %rd261, %rd262;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r350,%r351,%r352,%r353}, [%rd261];
	// end inline asm
	add.s64 	%rd265, %rd244, 96;
	// begin inline asm
	cvta.to.global.u64 %rd264, %rd265;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r354,%r355,%r356,%r357}, [%rd264];
	// end inline asm
	add.s64 	%rd268, %rd244, 112;
	// begin inline asm
	cvta.to.global.u64 %rd267, %rd268;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r358,%r359,%r360,%r361}, [%rd267];
	// end inline asm
	mov.b32 	%f1639, %r333;
	mov.b32 	%f1640, %r334;
	and.b32  	%r374, %r332, 65535;
	add.s32 	%r375, %r374, -1;
	cvt.rn.f32.s32 	%f1641, %r375;
	sub.ftz.f32 	%f1642, %f1536, %f1639;
	mul.ftz.f32 	%f1643, %f1642, %f1641;
	sub.ftz.f32 	%f1644, %f1640, %f1639;
	div.approx.ftz.f32 	%f1645, %f1643, %f1644;
	min.ftz.f32 	%f1646, %f1641, %f1645;
	mov.f32 	%f1647, 0f00000000;
	max.ftz.f32 	%f1648, %f1647, %f1646;
	cvt.rmi.ftz.f32.f32 	%f1649, %f1648;
	sub.ftz.f32 	%f288, %f1648, %f1649;
	cvt.rzi.ftz.s32.f32 	%r376, %f1649;
	cvt.s64.s32 	%rd15, %r376;
	mul.wide.s32 	%rd279, %r376, 48;
	add.s64 	%rd271, %rd253, %rd279;
	// begin inline asm
	cvta.to.global.u64 %rd270, %rd271;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r362,%r363,%r364,%r365}, [%rd270];
	// end inline asm
	mov.b32 	%f3263, %r362;
	mov.b32 	%f3264, %r363;
	mov.b32 	%f3265, %r364;
	add.s64 	%rd274, %rd271, 16;
	// begin inline asm
	cvta.to.global.u64 %rd273, %rd274;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r366,%r367,%r368,%r369}, [%rd273];
	// end inline asm
	mov.b32 	%f3260, %r366;
	mov.b32 	%f3261, %r367;
	mov.b32 	%f3262, %r368;
	add.s64 	%rd277, %rd271, 32;
	// begin inline asm
	cvta.to.global.u64 %rd276, %rd277;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r370,%r371,%r372,%r373}, [%rd276];
	// end inline asm
	mov.b32 	%f3257, %r370;
	mov.b32 	%f3258, %r371;
	mov.b32 	%f3259, %r372;
	setp.leu.ftz.f32 	%p23, %f288, 0f00000000;
	@%p23 bra 	$L__BB0_43;

	mov.f32 	%f1650, 0f3F800000;
	sub.ftz.f32 	%f1651, %f1650, %f288;
	mul.lo.s64 	%rd289, %rd15, 48;
	add.s64 	%rd290, %rd244, %rd289;
	add.s64 	%rd281, %rd290, 80;
	// begin inline asm
	cvta.to.global.u64 %rd280, %rd281;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r377,%r378,%r379,%r380}, [%rd280];
	// end inline asm
	mov.b32 	%f1652, %r377;
	mov.b32 	%f1653, %r378;
	mov.b32 	%f1654, %r379;
	mul.ftz.f32 	%f1655, %f288, %f1652;
	mul.ftz.f32 	%f1656, %f288, %f1653;
	mul.ftz.f32 	%f1657, %f288, %f1654;
	fma.rn.ftz.f32 	%f3263, %f1651, %f3263, %f1655;
	fma.rn.ftz.f32 	%f3264, %f1651, %f3264, %f1656;
	fma.rn.ftz.f32 	%f3265, %f1651, %f3265, %f1657;
	add.s64 	%rd284, %rd290, 96;
	// begin inline asm
	cvta.to.global.u64 %rd283, %rd284;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r381,%r382,%r383,%r384}, [%rd283];
	// end inline asm
	mov.b32 	%f1658, %r381;
	mov.b32 	%f1659, %r382;
	mov.b32 	%f1660, %r383;
	mul.ftz.f32 	%f1661, %f288, %f1658;
	mul.ftz.f32 	%f1662, %f288, %f1659;
	mul.ftz.f32 	%f1663, %f288, %f1660;
	fma.rn.ftz.f32 	%f3260, %f1651, %f3260, %f1661;
	fma.rn.ftz.f32 	%f3261, %f1651, %f3261, %f1662;
	fma.rn.ftz.f32 	%f3262, %f1651, %f3262, %f1663;
	add.s64 	%rd287, %rd290, 112;
	// begin inline asm
	cvta.to.global.u64 %rd286, %rd287;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r385,%r386,%r387,%r388}, [%rd286];
	// end inline asm
	mov.b32 	%f1664, %r385;
	mov.b32 	%f1665, %r386;
	mov.b32 	%f1666, %r387;
	mul.ftz.f32 	%f1667, %f288, %f1664;
	mul.ftz.f32 	%f1668, %f288, %f1665;
	mul.ftz.f32 	%f1669, %f288, %f1666;
	fma.rn.ftz.f32 	%f3257, %f1651, %f3257, %f1667;
	fma.rn.ftz.f32 	%f3258, %f1651, %f3258, %f1668;
	fma.rn.ftz.f32 	%f3259, %f1651, %f3259, %f1669;
	bra.uni 	$L__BB0_43;

$L__BB0_32:
	mov.f32 	%f3266, 0f00000000;
	mov.f32 	%f3268, 0f3F800000;
	setp.eq.s32 	%p19, %r241, 4;
	@%p19 bra 	$L__BB0_35;

	setp.ne.s32 	%p20, %r241, 1;
	mov.f32 	%f3267, %f3266;
	mov.f32 	%f3269, %f3266;
	mov.f32 	%f3270, %f3268;
	mov.f32 	%f3271, %f3266;
	mov.f32 	%f3272, %f3268;
	mov.f32 	%f3273, %f3266;
	mov.f32 	%f3274, %f3266;
	@%p20 bra 	$L__BB0_44;

	// begin inline asm
	call (%rd174), _optix_get_static_transform_from_handle, (%rd172);
	// end inline asm
	add.s64 	%rd790, %rd174, 64;
	bra.uni 	$L__BB0_36;

$L__BB0_38:
	// begin inline asm
	call (%rd187), _optix_get_srt_motion_transform_from_handle, (%rd172);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd189, %rd187;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r255,%r256,%r257,%r258}, [%rd189];
	// end inline asm
	add.s64 	%rd193, %rd187, 16;
	// begin inline asm
	cvta.to.global.u64 %rd192, %rd193;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r259,%r260,%r261,%r262}, [%rd192];
	// end inline asm
	add.s64 	%rd196, %rd187, 32;
	// begin inline asm
	cvta.to.global.u64 %rd195, %rd196;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r263,%r264,%r265,%r266}, [%rd195];
	// end inline asm
	add.s64 	%rd199, %rd187, 48;
	// begin inline asm
	cvta.to.global.u64 %rd198, %rd199;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r267,%r268,%r269,%r270}, [%rd198];
	// end inline asm
	add.s64 	%rd202, %rd187, 64;
	// begin inline asm
	cvta.to.global.u64 %rd201, %rd202;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r271,%r272,%r273,%r274}, [%rd201];
	// end inline asm
	add.s64 	%rd205, %rd187, 80;
	// begin inline asm
	cvta.to.global.u64 %rd204, %rd205;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r275,%r276,%r277,%r278}, [%rd204];
	// end inline asm
	add.s64 	%rd208, %rd187, 96;
	// begin inline asm
	cvta.to.global.u64 %rd207, %rd208;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r279,%r280,%r281,%r282}, [%rd207];
	// end inline asm
	add.s64 	%rd211, %rd187, 112;
	// begin inline asm
	cvta.to.global.u64 %rd210, %rd211;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r283,%r284,%r285,%r286}, [%rd210];
	// end inline asm
	add.s64 	%rd214, %rd187, 128;
	// begin inline asm
	cvta.to.global.u64 %rd213, %rd214;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r287,%r288,%r289,%r290}, [%rd213];
	// end inline asm
	add.s64 	%rd217, %rd187, 144;
	// begin inline asm
	cvta.to.global.u64 %rd216, %rd217;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r291,%r292,%r293,%r294}, [%rd216];
	// end inline asm
	mov.b32 	%f1548, %r258;
	mov.b32 	%f1549, %r259;
	and.b32  	%r311, %r257, 65535;
	add.s32 	%r312, %r311, -1;
	cvt.rn.f32.s32 	%f1550, %r312;
	sub.ftz.f32 	%f1551, %f1536, %f1548;
	mul.ftz.f32 	%f1552, %f1551, %f1550;
	sub.ftz.f32 	%f1553, %f1549, %f1548;
	div.approx.ftz.f32 	%f1554, %f1552, %f1553;
	min.ftz.f32 	%f1555, %f1550, %f1554;
	mov.f32 	%f1556, 0f00000000;
	max.ftz.f32 	%f1557, %f1556, %f1555;
	cvt.rmi.ftz.f32.f32 	%f1558, %f1557;
	sub.ftz.f32 	%f248, %f1557, %f1558;
	cvt.rzi.ftz.s32.f32 	%r313, %f1558;
	mul.wide.s32 	%rd231, %r313, 64;
	add.s64 	%rd220, %rd196, %rd231;
	// begin inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r295,%r296,%r297,%r298}, [%rd219];
	// end inline asm
	mov.b32 	%f3247, %r295;
	mov.b32 	%f3248, %r296;
	mov.b32 	%f3249, %r297;
	add.s64 	%rd223, %rd220, 16;
	// begin inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r299,%r300,%r301,%r302}, [%rd222];
	// end inline asm
	mov.b32 	%f3250, %r299;
	mov.b32 	%f3251, %r300;
	mov.b32 	%f3252, %r302;
	add.s64 	%rd226, %rd220, 32;
	// begin inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r303,%r304,%r305,%r306}, [%rd225];
	// end inline asm
	mov.b32 	%f3253, %r304;
	mov.b32 	%f3254, %r305;
	mov.b32 	%f3255, %r306;
	add.s64 	%rd229, %rd220, 48;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r307,%r308,%r309,%r310}, [%rd228];
	// end inline asm
	mov.b32 	%f3256, %r307;
	setp.leu.ftz.f32 	%p22, %f248, 0f00000000;
	@%p22 bra 	$L__BB0_40;

	mov.f32 	%f1559, 0f3F800000;
	sub.ftz.f32 	%f1560, %f1559, %f248;
	add.s64 	%rd233, %rd220, 64;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r314,%r315,%r316,%r317}, [%rd232];
	// end inline asm
	mov.b32 	%f1561, %r314;
	mov.b32 	%f1562, %r315;
	mov.b32 	%f1563, %r316;
	mul.ftz.f32 	%f1564, %f248, %f1561;
	mul.ftz.f32 	%f1565, %f248, %f1562;
	mul.ftz.f32 	%f1566, %f248, %f1563;
	fma.rn.ftz.f32 	%f3247, %f1560, %f3247, %f1564;
	fma.rn.ftz.f32 	%f3248, %f1560, %f3248, %f1565;
	fma.rn.ftz.f32 	%f3249, %f1560, %f3249, %f1566;
	add.s64 	%rd236, %rd220, 80;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r318,%r319,%r320,%r321}, [%rd235];
	// end inline asm
	mov.b32 	%f1567, %r318;
	mov.b32 	%f1568, %r319;
	mov.b32 	%f1569, %r321;
	mul.ftz.f32 	%f1570, %f248, %f1567;
	mul.ftz.f32 	%f1571, %f248, %f1568;
	mul.ftz.f32 	%f1572, %f248, %f1569;
	fma.rn.ftz.f32 	%f3250, %f1560, %f3250, %f1570;
	fma.rn.ftz.f32 	%f3251, %f1560, %f3251, %f1571;
	fma.rn.ftz.f32 	%f3252, %f1560, %f3252, %f1572;
	add.s64 	%rd239, %rd220, 96;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r322,%r323,%r324,%r325}, [%rd238];
	// end inline asm
	mov.b32 	%f1573, %r323;
	mov.b32 	%f1574, %r324;
	mov.b32 	%f1575, %r325;
	mul.ftz.f32 	%f1576, %f248, %f1573;
	mul.ftz.f32 	%f1577, %f248, %f1574;
	mul.ftz.f32 	%f1578, %f248, %f1575;
	fma.rn.ftz.f32 	%f1579, %f1560, %f3253, %f1576;
	fma.rn.ftz.f32 	%f1580, %f1560, %f3254, %f1577;
	fma.rn.ftz.f32 	%f1581, %f1560, %f3255, %f1578;
	add.s64 	%rd242, %rd220, 112;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r326,%r327,%r328,%r329}, [%rd241];
	// end inline asm
	mov.b32 	%f1582, %r326;
	mul.ftz.f32 	%f1583, %f248, %f1582;
	fma.rn.ftz.f32 	%f1584, %f1560, %f3256, %f1583;
	mul.ftz.f32 	%f1585, %f1580, %f1580;
	fma.rn.ftz.f32 	%f1586, %f1579, %f1579, %f1585;
	fma.rn.ftz.f32 	%f1587, %f1581, %f1581, %f1586;
	fma.rn.ftz.f32 	%f1588, %f1584, %f1584, %f1587;
	rsqrt.approx.ftz.f32 	%f1589, %f1588;
	mul.ftz.f32 	%f3253, %f1579, %f1589;
	mul.ftz.f32 	%f3254, %f1580, %f1589;
	mul.ftz.f32 	%f3255, %f1581, %f1589;
	mul.ftz.f32 	%f3256, %f1589, %f1584;

$L__BB0_40:
	mul.ftz.f32 	%f1590, %f3254, %f3254;
	fma.rn.ftz.f32 	%f1591, %f3253, %f3253, %f1590;
	fma.rn.ftz.f32 	%f1592, %f3255, %f3255, %f1591;
	fma.rn.ftz.f32 	%f1593, %f3256, %f3256, %f1592;
	rcp.approx.ftz.f32 	%f1594, %f1593;
	mul.ftz.f32 	%f1595, %f3253, %f1594;
	mul.ftz.f32 	%f1596, %f3254, %f1594;
	mul.ftz.f32 	%f1597, %f3255, %f1594;
	mul.ftz.f32 	%f1598, %f3256, %f1594;
	mul.ftz.f32 	%f1599, %f3253, %f1595;
	mul.ftz.f32 	%f1600, %f3254, %f1596;
	mul.ftz.f32 	%f1601, %f3255, %f1597;
	mul.ftz.f32 	%f1602, %f3253, %f1596;
	mul.ftz.f32 	%f1603, %f3255, %f1598;
	mul.ftz.f32 	%f1604, %f3253, %f1597;
	mul.ftz.f32 	%f1605, %f3254, %f1598;
	mul.ftz.f32 	%f1606, %f3254, %f1597;
	mul.ftz.f32 	%f1607, %f3253, %f1598;
	sub.ftz.f32 	%f1608, %f1599, %f1600;
	sub.ftz.f32 	%f1609, %f1608, %f1601;
	fma.rn.ftz.f32 	%f1610, %f3256, %f1598, %f1609;
	sub.ftz.f32 	%f1611, %f1602, %f1603;
	add.ftz.f32 	%f1612, %f1611, %f1611;
	add.ftz.f32 	%f1613, %f1604, %f1605;
	add.ftz.f32 	%f1614, %f1613, %f1613;
	add.ftz.f32 	%f1615, %f1602, %f1603;
	add.ftz.f32 	%f1616, %f1615, %f1615;
	sub.ftz.f32 	%f1617, %f1600, %f1599;
	sub.ftz.f32 	%f1618, %f1617, %f1601;
	fma.rn.ftz.f32 	%f1619, %f3256, %f1598, %f1618;
	sub.ftz.f32 	%f1620, %f1606, %f1607;
	add.ftz.f32 	%f1621, %f1620, %f1620;
	sub.ftz.f32 	%f1622, %f1604, %f1605;
	add.ftz.f32 	%f1623, %f1622, %f1622;
	add.ftz.f32 	%f1624, %f1606, %f1607;
	add.ftz.f32 	%f1625, %f1624, %f1624;
	neg.ftz.f32 	%f1626, %f1599;
	sub.ftz.f32 	%f1627, %f1626, %f1600;
	add.ftz.f32 	%f1628, %f1601, %f1627;
	fma.rn.ftz.f32 	%f1629, %f3256, %f1598, %f1628;
	mul.ftz.f32 	%f1630, %f3249, %f1610;
	fma.rn.ftz.f32 	%f1631, %f3251, %f1612, %f1630;
	fma.rn.ftz.f32 	%f3265, %f3252, %f1614, %f1631;
	mul.ftz.f32 	%f1632, %f3251, %f1619;
	fma.rn.ftz.f32 	%f1633, %f3249, %f1616, %f1632;
	fma.rn.ftz.f32 	%f3262, %f3252, %f1621, %f1633;
	mul.ftz.f32 	%f1634, %f3251, %f1625;
	fma.rn.ftz.f32 	%f1635, %f3249, %f1623, %f1634;
	fma.rn.ftz.f32 	%f3259, %f3252, %f1629, %f1635;
	mul.ftz.f32 	%f1636, %f3248, %f1610;
	fma.rn.ftz.f32 	%f3264, %f3250, %f1612, %f1636;
	mul.ftz.f32 	%f1637, %f3250, %f1619;
	fma.rn.ftz.f32 	%f3261, %f3248, %f1616, %f1637;
	mul.ftz.f32 	%f1638, %f3250, %f1625;
	fma.rn.ftz.f32 	%f3258, %f3248, %f1623, %f1638;
	mul.ftz.f32 	%f3263, %f3247, %f1610;
	mul.ftz.f32 	%f3260, %f3247, %f1616;
	mul.ftz.f32 	%f3257, %f3247, %f1623;

$L__BB0_43:
	mul.ftz.f32 	%f1670, %f3258, %f3262;
	mul.ftz.f32 	%f1671, %f3259, %f3261;
	sub.ftz.f32 	%f1672, %f1671, %f1670;
	mul.ftz.f32 	%f1673, %f3263, %f1672;
	mul.ftz.f32 	%f1674, %f3257, %f3262;
	mul.ftz.f32 	%f1675, %f3259, %f3260;
	sub.ftz.f32 	%f1676, %f1675, %f1674;
	mul.ftz.f32 	%f1677, %f1676, %f3264;
	sub.ftz.f32 	%f1678, %f1673, %f1677;
	mul.ftz.f32 	%f1679, %f3257, %f3261;
	mul.ftz.f32 	%f1680, %f3258, %f3260;
	sub.ftz.f32 	%f1681, %f1680, %f1679;
	fma.rn.ftz.f32 	%f1682, %f1681, %f3265, %f1678;
	rcp.approx.ftz.f32 	%f1683, %f1682;
	mul.ftz.f32 	%f3272, %f1672, %f1683;
	mul.ftz.f32 	%f1684, %f3259, %f3264;
	mul.ftz.f32 	%f1685, %f3258, %f3265;
	sub.ftz.f32 	%f1686, %f1685, %f1684;
	mul.ftz.f32 	%f3273, %f1686, %f1683;
	mul.ftz.f32 	%f1687, %f3261, %f3265;
	mul.ftz.f32 	%f1688, %f3262, %f3264;
	sub.ftz.f32 	%f1689, %f1688, %f1687;
	mul.ftz.f32 	%f3274, %f1689, %f1683;
	sub.ftz.f32 	%f1690, %f1674, %f1675;
	mul.ftz.f32 	%f3269, %f1690, %f1683;
	mul.ftz.f32 	%f1691, %f3257, %f3265;
	mul.ftz.f32 	%f1692, %f3259, %f3263;
	sub.ftz.f32 	%f1693, %f1692, %f1691;
	mul.ftz.f32 	%f3270, %f1693, %f1683;
	mul.ftz.f32 	%f1694, %f3262, %f3263;
	mul.ftz.f32 	%f1695, %f3260, %f3265;
	sub.ftz.f32 	%f1696, %f1695, %f1694;
	mul.ftz.f32 	%f3271, %f1696, %f1683;
	mul.ftz.f32 	%f3266, %f1681, %f1683;
	mul.ftz.f32 	%f1697, %f3258, %f3263;
	mul.ftz.f32 	%f1698, %f3257, %f3264;
	sub.ftz.f32 	%f1699, %f1698, %f1697;
	mul.ftz.f32 	%f3267, %f1699, %f1683;
	mul.ftz.f32 	%f1700, %f3260, %f3264;
	mul.ftz.f32 	%f1701, %f3261, %f3263;
	sub.ftz.f32 	%f1702, %f1701, %f1700;
	mul.ftz.f32 	%f3268, %f1702, %f1683;
	bra.uni 	$L__BB0_44;

$L__BB0_35:
	// begin inline asm
	call (%rd790), _optix_get_instance_inverse_transform_from_handle, (%rd172);
	// end inline asm

$L__BB0_36:
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd790;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r243,%r244,%r245,%r246}, [%rd178];
	// end inline asm
	mov.b32 	%f3272, %r243;
	mov.b32 	%f3273, %r244;
	mov.b32 	%f3274, %r245;
	add.s64 	%rd182, %rd790, 16;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r247,%r248,%r249,%r250}, [%rd181];
	// end inline asm
	mov.b32 	%f3269, %r247;
	mov.b32 	%f3270, %r248;
	mov.b32 	%f3271, %r249;
	add.s64 	%rd185, %rd790, 32;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r251,%r252,%r253,%r254}, [%rd184];
	// end inline asm
	mov.b32 	%f3266, %r251;
	mov.b32 	%f3267, %r252;
	mov.b32 	%f3268, %r253;

$L__BB0_44:
	setp.eq.s32 	%p24, %r1162, 0;
	@%p24 bra 	$L__BB0_46;

	mul.ftz.f32 	%f1703, %f3243, %f3273;
	fma.rn.ftz.f32 	%f1704, %f3240, %f3272, %f1703;
	fma.rn.ftz.f32 	%f334, %f3246, %f3274, %f1704;
	mul.ftz.f32 	%f1705, %f3242, %f3273;
	fma.rn.ftz.f32 	%f1706, %f3239, %f3272, %f1705;
	fma.rn.ftz.f32 	%f335, %f3245, %f3274, %f1706;
	mul.ftz.f32 	%f1707, %f3241, %f3273;
	fma.rn.ftz.f32 	%f1708, %f3238, %f3272, %f1707;
	fma.rn.ftz.f32 	%f3274, %f3244, %f3274, %f1708;
	mul.ftz.f32 	%f1709, %f3243, %f3270;
	fma.rn.ftz.f32 	%f1710, %f3240, %f3269, %f1709;
	fma.rn.ftz.f32 	%f337, %f3246, %f3271, %f1710;
	mul.ftz.f32 	%f1711, %f3242, %f3270;
	fma.rn.ftz.f32 	%f1712, %f3239, %f3269, %f1711;
	fma.rn.ftz.f32 	%f338, %f3245, %f3271, %f1712;
	mul.ftz.f32 	%f1713, %f3241, %f3270;
	fma.rn.ftz.f32 	%f1714, %f3238, %f3269, %f1713;
	fma.rn.ftz.f32 	%f3271, %f3244, %f3271, %f1714;
	mul.ftz.f32 	%f1715, %f3243, %f3267;
	fma.rn.ftz.f32 	%f1716, %f3240, %f3266, %f1715;
	fma.rn.ftz.f32 	%f340, %f3246, %f3268, %f1716;
	mul.ftz.f32 	%f1717, %f3242, %f3267;
	fma.rn.ftz.f32 	%f1718, %f3239, %f3266, %f1717;
	fma.rn.ftz.f32 	%f341, %f3245, %f3268, %f1718;
	mul.ftz.f32 	%f1719, %f3241, %f3267;
	fma.rn.ftz.f32 	%f1720, %f3238, %f3266, %f1719;
	fma.rn.ftz.f32 	%f3268, %f3244, %f3268, %f1720;
	mov.f32 	%f3266, %f340;
	mov.f32 	%f3267, %f341;
	mov.f32 	%f3269, %f337;
	mov.f32 	%f3270, %f338;
	mov.f32 	%f3272, %f334;
	mov.f32 	%f3273, %f335;

$L__BB0_46:
	add.s32 	%r1162, %r1162, 1;
	setp.lt.u32 	%p25, %r1162, %r238;
	mov.f32 	%f3238, %f3274;
	mov.f32 	%f3239, %f3273;
	mov.f32 	%f3240, %f3272;
	mov.f32 	%f3241, %f3271;
	mov.f32 	%f3242, %f3270;
	mov.f32 	%f3243, %f3269;
	mov.f32 	%f3244, %f3268;
	mov.f32 	%f3245, %f3267;
	mov.f32 	%f3246, %f3266;
	@%p25 bra 	$L__BB0_31;

$L__BB0_47:
	mul.ftz.f32 	%f1721, %f3572, %f3272;
	fma.rn.ftz.f32 	%f1722, %f3571, %f3269, %f1721;
	mul.ftz.f32 	%f1723, %f3572, %f3273;
	fma.rn.ftz.f32 	%f1724, %f3571, %f3270, %f1723;
	mul.ftz.f32 	%f1725, %f3572, %f3274;
	fma.rn.ftz.f32 	%f1726, %f3571, %f3271, %f1725;
	fma.rn.ftz.f32 	%f3570, %f228, %f3268, %f1726;
	fma.rn.ftz.f32 	%f3571, %f228, %f3267, %f1724;
	fma.rn.ftz.f32 	%f3572, %f228, %f3266, %f1722;
	bra.uni 	$L__BB0_141;

$L__BB0_48:
	mov.f32 	%f3570, %f228;
	bra.uni 	$L__BB0_141;

$L__BB0_117:
	fma.rn.ftz.f32 	%f2583, %f748, %f951, %f744;
	fma.rn.ftz.f32 	%f2584, %f749, %f951, %f745;
	fma.rn.ftz.f32 	%f2585, %f750, %f951, %f746;
	fma.rn.ftz.f32 	%f2586, %f751, %f951, %f747;
	mul.ftz.f32 	%f2587, %f951, %f951;
	fma.rn.ftz.f32 	%f2588, %f752, %f2587, %f2583;
	fma.rn.ftz.f32 	%f2589, %f753, %f2587, %f2584;
	fma.rn.ftz.f32 	%f2590, %f754, %f2587, %f2585;
	fma.rn.ftz.f32 	%f2591, %f755, %f2587, %f2586;
	add.ftz.f32 	%f2592, %f951, %f951;
	fma.rn.ftz.f32 	%f2593, %f752, %f2592, %f748;
	fma.rn.ftz.f32 	%f2594, %f753, %f2592, %f749;
	fma.rn.ftz.f32 	%f2595, %f754, %f2592, %f750;
	fma.rn.ftz.f32 	%f2596, %f755, %f2592, %f751;
	mul.ftz.f32 	%f2597, %f2594, %f2594;
	fma.rn.ftz.f32 	%f2598, %f2593, %f2593, %f2597;
	fma.rn.ftz.f32 	%f2599, %f2595, %f2595, %f2598;
	sub.ftz.f32 	%f2600, %f1, %f2588;
	sub.ftz.f32 	%f2601, %f2, %f2589;
	sub.ftz.f32 	%f2602, %f3, %f2590;
	mul.ftz.f32 	%f2603, %f2594, %f2601;
	fma.rn.ftz.f32 	%f2604, %f2593, %f2600, %f2603;
	fma.rn.ftz.f32 	%f2605, %f2595, %f2602, %f2604;
	div.approx.ftz.f32 	%f2606, %f2605, %f2599;
	mul.ftz.f32 	%f2607, %f2593, %f2606;
	mul.ftz.f32 	%f2608, %f2594, %f2606;
	mul.ftz.f32 	%f2609, %f2595, %f2606;
	sub.ftz.f32 	%f2610, %f2600, %f2607;
	sub.ftz.f32 	%f2611, %f2601, %f2608;
	sub.ftz.f32 	%f2612, %f2602, %f2609;
	mul.ftz.f32 	%f2613, %f2611, %f2611;
	fma.rn.ftz.f32 	%f2614, %f2610, %f2610, %f2613;
	fma.rn.ftz.f32 	%f2615, %f2612, %f2612, %f2614;
	sqrt.approx.ftz.f32 	%f2616, %f2615;
	div.approx.ftz.f32 	%f2617, %f2591, %f2616;
	mul.ftz.f32 	%f2618, %f2610, %f2617;
	mul.ftz.f32 	%f2619, %f2611, %f2617;
	mul.ftz.f32 	%f2620, %f2612, %f2617;
	mul.ftz.f32 	%f2621, %f953, %f2619;
	fma.rn.ftz.f32 	%f2622, %f952, %f2618, %f2621;
	fma.rn.ftz.f32 	%f2623, %f954, %f2620, %f2622;
	sub.ftz.f32 	%f2624, %f2599, %f2623;
	mul.ftz.f32 	%f2625, %f2618, %f2624;
	mul.ftz.f32 	%f2626, %f2619, %f2624;
	mul.ftz.f32 	%f2627, %f2620, %f2624;
	mul.ftz.f32 	%f2628, %f2596, %f2591;
	mul.ftz.f32 	%f2629, %f2593, %f2628;
	mul.ftz.f32 	%f2630, %f2594, %f2628;
	mul.ftz.f32 	%f2631, %f2595, %f2628;
	sub.ftz.f32 	%f3509, %f2625, %f2629;
	sub.ftz.f32 	%f3510, %f2626, %f2630;
	sub.ftz.f32 	%f3511, %f2627, %f2631;

$L__BB0_120:
	mul.ftz.f32 	%f2635, %f3510, %f3510;
	fma.rn.ftz.f32 	%f2636, %f3509, %f3509, %f2635;
	fma.rn.ftz.f32 	%f2637, %f3511, %f3511, %f2636;
	rsqrt.approx.ftz.f32 	%f2638, %f2637;
	mul.ftz.f32 	%f3572, %f3509, %f2638;
	mul.ftz.f32 	%f3571, %f3510, %f2638;
	mul.ftz.f32 	%f969, %f3511, %f2638;
	// begin inline asm
	call (%r853), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p60, %r853, 0;
	@%p60 bra 	$L__BB0_140;

	// begin inline asm
	call (%r854), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2639), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p61, %r854, 0;
	@%p61 bra 	$L__BB0_139;

	mov.u32 	%r1166, 0;

$L__BB0_123:
	.pragma "nounroll";
	// begin inline asm
	call (%rd652), _optix_get_transform_list_handle, (%r1166);
	// end inline asm
	// begin inline asm
	call (%r857), _optix_get_transform_type_from_handle, (%rd652);
	// end inline asm
	or.b32  	%r858, %r857, 1;
	setp.eq.s32 	%p62, %r858, 3;
	@%p62 bra 	$L__BB0_129;
	bra.uni 	$L__BB0_124;

$L__BB0_129:
	setp.eq.s32 	%p65, %r857, 2;
	@%p65 bra 	$L__BB0_133;
	bra.uni 	$L__BB0_130;

$L__BB0_133:
	// begin inline asm
	call (%rd724), _optix_get_matrix_motion_transform_from_handle, (%rd652);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd726, %rd724;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r946,%r947,%r948,%r949}, [%rd726];
	// end inline asm
	add.s64 	%rd730, %rd724, 16;
	// begin inline asm
	cvta.to.global.u64 %rd729, %rd730;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r950,%r951,%r952,%r953}, [%rd729];
	// end inline asm
	add.s64 	%rd733, %rd724, 32;
	// begin inline asm
	cvta.to.global.u64 %rd732, %rd733;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r954,%r955,%r956,%r957}, [%rd732];
	// end inline asm
	add.s64 	%rd736, %rd724, 48;
	// begin inline asm
	cvta.to.global.u64 %rd735, %rd736;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r958,%r959,%r960,%r961}, [%rd735];
	// end inline asm
	add.s64 	%rd739, %rd724, 64;
	// begin inline asm
	cvta.to.global.u64 %rd738, %rd739;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r962,%r963,%r964,%r965}, [%rd738];
	// end inline asm
	add.s64 	%rd742, %rd724, 80;
	// begin inline asm
	cvta.to.global.u64 %rd741, %rd742;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r966,%r967,%r968,%r969}, [%rd741];
	// end inline asm
	add.s64 	%rd745, %rd724, 96;
	// begin inline asm
	cvta.to.global.u64 %rd744, %rd745;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r970,%r971,%r972,%r973}, [%rd744];
	// end inline asm
	add.s64 	%rd748, %rd724, 112;
	// begin inline asm
	cvta.to.global.u64 %rd747, %rd748;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r974,%r975,%r976,%r977}, [%rd747];
	// end inline asm
	mov.b32 	%f2742, %r949;
	mov.b32 	%f2743, %r950;
	and.b32  	%r990, %r948, 65535;
	add.s32 	%r991, %r990, -1;
	cvt.rn.f32.s32 	%f2744, %r991;
	sub.ftz.f32 	%f2745, %f2639, %f2742;
	mul.ftz.f32 	%f2746, %f2745, %f2744;
	sub.ftz.f32 	%f2747, %f2743, %f2742;
	div.approx.ftz.f32 	%f2748, %f2746, %f2747;
	min.ftz.f32 	%f2749, %f2744, %f2748;
	mov.f32 	%f2750, 0f00000000;
	max.ftz.f32 	%f2751, %f2750, %f2749;
	cvt.rmi.ftz.f32.f32 	%f2752, %f2751;
	sub.ftz.f32 	%f1029, %f2751, %f2752;
	cvt.rzi.ftz.s32.f32 	%r992, %f2752;
	cvt.s64.s32 	%rd43, %r992;
	mul.wide.s32 	%rd759, %r992, 48;
	add.s64 	%rd751, %rd733, %rd759;
	// begin inline asm
	cvta.to.global.u64 %rd750, %rd751;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r978,%r979,%r980,%r981}, [%rd750];
	// end inline asm
	mov.b32 	%f3537, %r978;
	mov.b32 	%f3538, %r979;
	mov.b32 	%f3539, %r980;
	add.s64 	%rd754, %rd751, 16;
	// begin inline asm
	cvta.to.global.u64 %rd753, %rd754;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r982,%r983,%r984,%r985}, [%rd753];
	// end inline asm
	mov.b32 	%f3534, %r982;
	mov.b32 	%f3535, %r983;
	mov.b32 	%f3536, %r984;
	add.s64 	%rd757, %rd751, 32;
	// begin inline asm
	cvta.to.global.u64 %rd756, %rd757;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r986,%r987,%r988,%r989}, [%rd756];
	// end inline asm
	mov.b32 	%f3531, %r986;
	mov.b32 	%f3532, %r987;
	mov.b32 	%f3533, %r988;
	setp.leu.ftz.f32 	%p67, %f1029, 0f00000000;
	@%p67 bra 	$L__BB0_135;

	mov.f32 	%f2753, 0f3F800000;
	sub.ftz.f32 	%f2754, %f2753, %f1029;
	mul.lo.s64 	%rd769, %rd43, 48;
	add.s64 	%rd770, %rd724, %rd769;
	add.s64 	%rd761, %rd770, 80;
	// begin inline asm
	cvta.to.global.u64 %rd760, %rd761;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r993,%r994,%r995,%r996}, [%rd760];
	// end inline asm
	mov.b32 	%f2755, %r993;
	mov.b32 	%f2756, %r994;
	mov.b32 	%f2757, %r995;
	mul.ftz.f32 	%f2758, %f1029, %f2755;
	mul.ftz.f32 	%f2759, %f1029, %f2756;
	mul.ftz.f32 	%f2760, %f1029, %f2757;
	fma.rn.ftz.f32 	%f3537, %f2754, %f3537, %f2758;
	fma.rn.ftz.f32 	%f3538, %f2754, %f3538, %f2759;
	fma.rn.ftz.f32 	%f3539, %f2754, %f3539, %f2760;
	add.s64 	%rd764, %rd770, 96;
	// begin inline asm
	cvta.to.global.u64 %rd763, %rd764;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r997,%r998,%r999,%r1000}, [%rd763];
	// end inline asm
	mov.b32 	%f2761, %r997;
	mov.b32 	%f2762, %r998;
	mov.b32 	%f2763, %r999;
	mul.ftz.f32 	%f2764, %f1029, %f2761;
	mul.ftz.f32 	%f2765, %f1029, %f2762;
	mul.ftz.f32 	%f2766, %f1029, %f2763;
	fma.rn.ftz.f32 	%f3534, %f2754, %f3534, %f2764;
	fma.rn.ftz.f32 	%f3535, %f2754, %f3535, %f2765;
	fma.rn.ftz.f32 	%f3536, %f2754, %f3536, %f2766;
	add.s64 	%rd767, %rd770, 112;
	// begin inline asm
	cvta.to.global.u64 %rd766, %rd767;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r1001,%r1002,%r1003,%r1004}, [%rd766];
	// end inline asm
	mov.b32 	%f2767, %r1001;
	mov.b32 	%f2768, %r1002;
	mov.b32 	%f2769, %r1003;
	mul.ftz.f32 	%f2770, %f1029, %f2767;
	mul.ftz.f32 	%f2771, %f1029, %f2768;
	mul.ftz.f32 	%f2772, %f1029, %f2769;
	fma.rn.ftz.f32 	%f3531, %f2754, %f3531, %f2770;
	fma.rn.ftz.f32 	%f3532, %f2754, %f3532, %f2771;
	fma.rn.ftz.f32 	%f3533, %f2754, %f3533, %f2772;
	bra.uni 	$L__BB0_135;

$L__BB0_124:
	mov.f32 	%f3540, 0f00000000;
	mov.f32 	%f3542, 0f3F800000;
	setp.eq.s32 	%p63, %r857, 4;
	@%p63 bra 	$L__BB0_127;

	setp.ne.s32 	%p64, %r857, 1;
	mov.f32 	%f3541, %f3540;
	mov.f32 	%f3543, %f3540;
	mov.f32 	%f3544, %f3542;
	mov.f32 	%f3545, %f3540;
	mov.f32 	%f3546, %f3542;
	mov.f32 	%f3547, %f3540;
	mov.f32 	%f3548, %f3540;
	@%p64 bra 	$L__BB0_136;

	// begin inline asm
	call (%rd654), _optix_get_static_transform_from_handle, (%rd652);
	// end inline asm
	add.s64 	%rd794, %rd654, 64;
	bra.uni 	$L__BB0_128;

$L__BB0_130:
	// begin inline asm
	call (%rd667), _optix_get_srt_motion_transform_from_handle, (%rd652);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd669, %rd667;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r871,%r872,%r873,%r874}, [%rd669];
	// end inline asm
	add.s64 	%rd673, %rd667, 16;
	// begin inline asm
	cvta.to.global.u64 %rd672, %rd673;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r875,%r876,%r877,%r878}, [%rd672];
	// end inline asm
	add.s64 	%rd676, %rd667, 32;
	// begin inline asm
	cvta.to.global.u64 %rd675, %rd676;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r879,%r880,%r881,%r882}, [%rd675];
	// end inline asm
	add.s64 	%rd679, %rd667, 48;
	// begin inline asm
	cvta.to.global.u64 %rd678, %rd679;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r883,%r884,%r885,%r886}, [%rd678];
	// end inline asm
	add.s64 	%rd682, %rd667, 64;
	// begin inline asm
	cvta.to.global.u64 %rd681, %rd682;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r887,%r888,%r889,%r890}, [%rd681];
	// end inline asm
	add.s64 	%rd685, %rd667, 80;
	// begin inline asm
	cvta.to.global.u64 %rd684, %rd685;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r891,%r892,%r893,%r894}, [%rd684];
	// end inline asm
	add.s64 	%rd688, %rd667, 96;
	// begin inline asm
	cvta.to.global.u64 %rd687, %rd688;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r895,%r896,%r897,%r898}, [%rd687];
	// end inline asm
	add.s64 	%rd691, %rd667, 112;
	// begin inline asm
	cvta.to.global.u64 %rd690, %rd691;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r899,%r900,%r901,%r902}, [%rd690];
	// end inline asm
	add.s64 	%rd694, %rd667, 128;
	// begin inline asm
	cvta.to.global.u64 %rd693, %rd694;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r903,%r904,%r905,%r906}, [%rd693];
	// end inline asm
	add.s64 	%rd697, %rd667, 144;
	// begin inline asm
	cvta.to.global.u64 %rd696, %rd697;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r907,%r908,%r909,%r910}, [%rd696];
	// end inline asm
	mov.b32 	%f2651, %r874;
	mov.b32 	%f2652, %r875;
	and.b32  	%r927, %r873, 65535;
	add.s32 	%r928, %r927, -1;
	cvt.rn.f32.s32 	%f2653, %r928;
	sub.ftz.f32 	%f2654, %f2639, %f2651;
	mul.ftz.f32 	%f2655, %f2654, %f2653;
	sub.ftz.f32 	%f2656, %f2652, %f2651;
	div.approx.ftz.f32 	%f2657, %f2655, %f2656;
	min.ftz.f32 	%f2658, %f2653, %f2657;
	mov.f32 	%f2659, 0f00000000;
	max.ftz.f32 	%f2660, %f2659, %f2658;
	cvt.rmi.ftz.f32.f32 	%f2661, %f2660;
	sub.ftz.f32 	%f989, %f2660, %f2661;
	cvt.rzi.ftz.s32.f32 	%r929, %f2661;
	mul.wide.s32 	%rd711, %r929, 64;
	add.s64 	%rd700, %rd676, %rd711;
	// begin inline asm
	cvta.to.global.u64 %rd699, %rd700;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r911,%r912,%r913,%r914}, [%rd699];
	// end inline asm
	mov.b32 	%f3521, %r911;
	mov.b32 	%f3522, %r912;
	mov.b32 	%f3523, %r913;
	add.s64 	%rd703, %rd700, 16;
	// begin inline asm
	cvta.to.global.u64 %rd702, %rd703;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r915,%r916,%r917,%r918}, [%rd702];
	// end inline asm
	mov.b32 	%f3524, %r915;
	mov.b32 	%f3525, %r916;
	mov.b32 	%f3526, %r918;
	add.s64 	%rd706, %rd700, 32;
	// begin inline asm
	cvta.to.global.u64 %rd705, %rd706;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r919,%r920,%r921,%r922}, [%rd705];
	// end inline asm
	mov.b32 	%f3527, %r920;
	mov.b32 	%f3528, %r921;
	mov.b32 	%f3529, %r922;
	add.s64 	%rd709, %rd700, 48;
	// begin inline asm
	cvta.to.global.u64 %rd708, %rd709;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r923,%r924,%r925,%r926}, [%rd708];
	// end inline asm
	mov.b32 	%f3530, %r923;
	setp.leu.ftz.f32 	%p66, %f989, 0f00000000;
	@%p66 bra 	$L__BB0_132;

	mov.f32 	%f2662, 0f3F800000;
	sub.ftz.f32 	%f2663, %f2662, %f989;
	add.s64 	%rd713, %rd700, 64;
	// begin inline asm
	cvta.to.global.u64 %rd712, %rd713;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r930,%r931,%r932,%r933}, [%rd712];
	// end inline asm
	mov.b32 	%f2664, %r930;
	mov.b32 	%f2665, %r931;
	mov.b32 	%f2666, %r932;
	mul.ftz.f32 	%f2667, %f989, %f2664;
	mul.ftz.f32 	%f2668, %f989, %f2665;
	mul.ftz.f32 	%f2669, %f989, %f2666;
	fma.rn.ftz.f32 	%f3521, %f2663, %f3521, %f2667;
	fma.rn.ftz.f32 	%f3522, %f2663, %f3522, %f2668;
	fma.rn.ftz.f32 	%f3523, %f2663, %f3523, %f2669;
	add.s64 	%rd716, %rd700, 80;
	// begin inline asm
	cvta.to.global.u64 %rd715, %rd716;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r934,%r935,%r936,%r937}, [%rd715];
	// end inline asm
	mov.b32 	%f2670, %r934;
	mov.b32 	%f2671, %r935;
	mov.b32 	%f2672, %r937;
	mul.ftz.f32 	%f2673, %f989, %f2670;
	mul.ftz.f32 	%f2674, %f989, %f2671;
	mul.ftz.f32 	%f2675, %f989, %f2672;
	fma.rn.ftz.f32 	%f3524, %f2663, %f3524, %f2673;
	fma.rn.ftz.f32 	%f3525, %f2663, %f3525, %f2674;
	fma.rn.ftz.f32 	%f3526, %f2663, %f3526, %f2675;
	add.s64 	%rd719, %rd700, 96;
	// begin inline asm
	cvta.to.global.u64 %rd718, %rd719;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r938,%r939,%r940,%r941}, [%rd718];
	// end inline asm
	mov.b32 	%f2676, %r939;
	mov.b32 	%f2677, %r940;
	mov.b32 	%f2678, %r941;
	mul.ftz.f32 	%f2679, %f989, %f2676;
	mul.ftz.f32 	%f2680, %f989, %f2677;
	mul.ftz.f32 	%f2681, %f989, %f2678;
	fma.rn.ftz.f32 	%f2682, %f2663, %f3527, %f2679;
	fma.rn.ftz.f32 	%f2683, %f2663, %f3528, %f2680;
	fma.rn.ftz.f32 	%f2684, %f2663, %f3529, %f2681;
	add.s64 	%rd722, %rd700, 112;
	// begin inline asm
	cvta.to.global.u64 %rd721, %rd722;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r942,%r943,%r944,%r945}, [%rd721];
	// end inline asm
	mov.b32 	%f2685, %r942;
	mul.ftz.f32 	%f2686, %f989, %f2685;
	fma.rn.ftz.f32 	%f2687, %f2663, %f3530, %f2686;
	mul.ftz.f32 	%f2688, %f2683, %f2683;
	fma.rn.ftz.f32 	%f2689, %f2682, %f2682, %f2688;
	fma.rn.ftz.f32 	%f2690, %f2684, %f2684, %f2689;
	fma.rn.ftz.f32 	%f2691, %f2687, %f2687, %f2690;
	rsqrt.approx.ftz.f32 	%f2692, %f2691;
	mul.ftz.f32 	%f3527, %f2682, %f2692;
	mul.ftz.f32 	%f3528, %f2683, %f2692;
	mul.ftz.f32 	%f3529, %f2684, %f2692;
	mul.ftz.f32 	%f3530, %f2692, %f2687;

$L__BB0_132:
	mul.ftz.f32 	%f2693, %f3528, %f3528;
	fma.rn.ftz.f32 	%f2694, %f3527, %f3527, %f2693;
	fma.rn.ftz.f32 	%f2695, %f3529, %f3529, %f2694;
	fma.rn.ftz.f32 	%f2696, %f3530, %f3530, %f2695;
	rcp.approx.ftz.f32 	%f2697, %f2696;
	mul.ftz.f32 	%f2698, %f3527, %f2697;
	mul.ftz.f32 	%f2699, %f3528, %f2697;
	mul.ftz.f32 	%f2700, %f3529, %f2697;
	mul.ftz.f32 	%f2701, %f3530, %f2697;
	mul.ftz.f32 	%f2702, %f3527, %f2698;
	mul.ftz.f32 	%f2703, %f3528, %f2699;
	mul.ftz.f32 	%f2704, %f3529, %f2700;
	mul.ftz.f32 	%f2705, %f3527, %f2699;
	mul.ftz.f32 	%f2706, %f3529, %f2701;
	mul.ftz.f32 	%f2707, %f3527, %f2700;
	mul.ftz.f32 	%f2708, %f3528, %f2701;
	mul.ftz.f32 	%f2709, %f3528, %f2700;
	mul.ftz.f32 	%f2710, %f3527, %f2701;
	sub.ftz.f32 	%f2711, %f2702, %f2703;
	sub.ftz.f32 	%f2712, %f2711, %f2704;
	fma.rn.ftz.f32 	%f2713, %f3530, %f2701, %f2712;
	sub.ftz.f32 	%f2714, %f2705, %f2706;
	add.ftz.f32 	%f2715, %f2714, %f2714;
	add.ftz.f32 	%f2716, %f2707, %f2708;
	add.ftz.f32 	%f2717, %f2716, %f2716;
	add.ftz.f32 	%f2718, %f2705, %f2706;
	add.ftz.f32 	%f2719, %f2718, %f2718;
	sub.ftz.f32 	%f2720, %f2703, %f2702;
	sub.ftz.f32 	%f2721, %f2720, %f2704;
	fma.rn.ftz.f32 	%f2722, %f3530, %f2701, %f2721;
	sub.ftz.f32 	%f2723, %f2709, %f2710;
	add.ftz.f32 	%f2724, %f2723, %f2723;
	sub.ftz.f32 	%f2725, %f2707, %f2708;
	add.ftz.f32 	%f2726, %f2725, %f2725;
	add.ftz.f32 	%f2727, %f2709, %f2710;
	add.ftz.f32 	%f2728, %f2727, %f2727;
	neg.ftz.f32 	%f2729, %f2702;
	sub.ftz.f32 	%f2730, %f2729, %f2703;
	add.ftz.f32 	%f2731, %f2704, %f2730;
	fma.rn.ftz.f32 	%f2732, %f3530, %f2701, %f2731;
	mul.ftz.f32 	%f2733, %f3523, %f2713;
	fma.rn.ftz.f32 	%f2734, %f3525, %f2715, %f2733;
	fma.rn.ftz.f32 	%f3539, %f3526, %f2717, %f2734;
	mul.ftz.f32 	%f2735, %f3525, %f2722;
	fma.rn.ftz.f32 	%f2736, %f3523, %f2719, %f2735;
	fma.rn.ftz.f32 	%f3536, %f3526, %f2724, %f2736;
	mul.ftz.f32 	%f2737, %f3525, %f2728;
	fma.rn.ftz.f32 	%f2738, %f3523, %f2726, %f2737;
	fma.rn.ftz.f32 	%f3533, %f3526, %f2732, %f2738;
	mul.ftz.f32 	%f2739, %f3522, %f2713;
	fma.rn.ftz.f32 	%f3538, %f3524, %f2715, %f2739;
	mul.ftz.f32 	%f2740, %f3524, %f2722;
	fma.rn.ftz.f32 	%f3535, %f3522, %f2719, %f2740;
	mul.ftz.f32 	%f2741, %f3524, %f2728;
	fma.rn.ftz.f32 	%f3532, %f3522, %f2726, %f2741;
	mul.ftz.f32 	%f3537, %f3521, %f2713;
	mul.ftz.f32 	%f3534, %f3521, %f2719;
	mul.ftz.f32 	%f3531, %f3521, %f2726;

$L__BB0_135:
	mul.ftz.f32 	%f2773, %f3532, %f3536;
	mul.ftz.f32 	%f2774, %f3533, %f3535;
	sub.ftz.f32 	%f2775, %f2774, %f2773;
	mul.ftz.f32 	%f2776, %f3537, %f2775;
	mul.ftz.f32 	%f2777, %f3531, %f3536;
	mul.ftz.f32 	%f2778, %f3533, %f3534;
	sub.ftz.f32 	%f2779, %f2778, %f2777;
	mul.ftz.f32 	%f2780, %f2779, %f3538;
	sub.ftz.f32 	%f2781, %f2776, %f2780;
	mul.ftz.f32 	%f2782, %f3531, %f3535;
	mul.ftz.f32 	%f2783, %f3532, %f3534;
	sub.ftz.f32 	%f2784, %f2783, %f2782;
	fma.rn.ftz.f32 	%f2785, %f2784, %f3539, %f2781;
	rcp.approx.ftz.f32 	%f2786, %f2785;
	mul.ftz.f32 	%f3546, %f2775, %f2786;
	mul.ftz.f32 	%f2787, %f3533, %f3538;
	mul.ftz.f32 	%f2788, %f3532, %f3539;
	sub.ftz.f32 	%f2789, %f2788, %f2787;
	mul.ftz.f32 	%f3547, %f2789, %f2786;
	mul.ftz.f32 	%f2790, %f3535, %f3539;
	mul.ftz.f32 	%f2791, %f3536, %f3538;
	sub.ftz.f32 	%f2792, %f2791, %f2790;
	mul.ftz.f32 	%f3548, %f2792, %f2786;
	sub.ftz.f32 	%f2793, %f2777, %f2778;
	mul.ftz.f32 	%f3543, %f2793, %f2786;
	mul.ftz.f32 	%f2794, %f3531, %f3539;
	mul.ftz.f32 	%f2795, %f3533, %f3537;
	sub.ftz.f32 	%f2796, %f2795, %f2794;
	mul.ftz.f32 	%f3544, %f2796, %f2786;
	mul.ftz.f32 	%f2797, %f3536, %f3537;
	mul.ftz.f32 	%f2798, %f3534, %f3539;
	sub.ftz.f32 	%f2799, %f2798, %f2797;
	mul.ftz.f32 	%f3545, %f2799, %f2786;
	mul.ftz.f32 	%f3540, %f2784, %f2786;
	mul.ftz.f32 	%f2800, %f3532, %f3537;
	mul.ftz.f32 	%f2801, %f3531, %f3538;
	sub.ftz.f32 	%f2802, %f2801, %f2800;
	mul.ftz.f32 	%f3541, %f2802, %f2786;
	mul.ftz.f32 	%f2803, %f3534, %f3538;
	mul.ftz.f32 	%f2804, %f3535, %f3537;
	sub.ftz.f32 	%f2805, %f2804, %f2803;
	mul.ftz.f32 	%f3542, %f2805, %f2786;
	bra.uni 	$L__BB0_136;

$L__BB0_127:
	// begin inline asm
	call (%rd794), _optix_get_instance_inverse_transform_from_handle, (%rd652);
	// end inline asm

$L__BB0_128:
	// begin inline asm
	cvta.to.global.u64 %rd658, %rd794;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r859,%r860,%r861,%r862}, [%rd658];
	// end inline asm
	mov.b32 	%f3546, %r859;
	mov.b32 	%f3547, %r860;
	mov.b32 	%f3548, %r861;
	add.s64 	%rd662, %rd794, 16;
	// begin inline asm
	cvta.to.global.u64 %rd661, %rd662;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r863,%r864,%r865,%r866}, [%rd661];
	// end inline asm
	mov.b32 	%f3543, %r863;
	mov.b32 	%f3544, %r864;
	mov.b32 	%f3545, %r865;
	add.s64 	%rd665, %rd794, 32;
	// begin inline asm
	cvta.to.global.u64 %rd664, %rd665;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r867,%r868,%r869,%r870}, [%rd664];
	// end inline asm
	mov.b32 	%f3540, %r867;
	mov.b32 	%f3541, %r868;
	mov.b32 	%f3542, %r869;

$L__BB0_136:
	setp.eq.s32 	%p68, %r1166, 0;
	@%p68 bra 	$L__BB0_138;

	mul.ftz.f32 	%f2806, %f3517, %f3547;
	fma.rn.ftz.f32 	%f2807, %f3514, %f3546, %f2806;
	fma.rn.ftz.f32 	%f1075, %f3520, %f3548, %f2807;
	mul.ftz.f32 	%f2808, %f3516, %f3547;
	fma.rn.ftz.f32 	%f2809, %f3513, %f3546, %f2808;
	fma.rn.ftz.f32 	%f1076, %f3519, %f3548, %f2809;
	mul.ftz.f32 	%f2810, %f3515, %f3547;
	fma.rn.ftz.f32 	%f2811, %f3512, %f3546, %f2810;
	fma.rn.ftz.f32 	%f3548, %f3518, %f3548, %f2811;
	mul.ftz.f32 	%f2812, %f3517, %f3544;
	fma.rn.ftz.f32 	%f2813, %f3514, %f3543, %f2812;
	fma.rn.ftz.f32 	%f1078, %f3520, %f3545, %f2813;
	mul.ftz.f32 	%f2814, %f3516, %f3544;
	fma.rn.ftz.f32 	%f2815, %f3513, %f3543, %f2814;
	fma.rn.ftz.f32 	%f1079, %f3519, %f3545, %f2815;
	mul.ftz.f32 	%f2816, %f3515, %f3544;
	fma.rn.ftz.f32 	%f2817, %f3512, %f3543, %f2816;
	fma.rn.ftz.f32 	%f3545, %f3518, %f3545, %f2817;
	mul.ftz.f32 	%f2818, %f3517, %f3541;
	fma.rn.ftz.f32 	%f2819, %f3514, %f3540, %f2818;
	fma.rn.ftz.f32 	%f1081, %f3520, %f3542, %f2819;
	mul.ftz.f32 	%f2820, %f3516, %f3541;
	fma.rn.ftz.f32 	%f2821, %f3513, %f3540, %f2820;
	fma.rn.ftz.f32 	%f1082, %f3519, %f3542, %f2821;
	mul.ftz.f32 	%f2822, %f3515, %f3541;
	fma.rn.ftz.f32 	%f2823, %f3512, %f3540, %f2822;
	fma.rn.ftz.f32 	%f3542, %f3518, %f3542, %f2823;
	mov.f32 	%f3540, %f1081;
	mov.f32 	%f3541, %f1082;
	mov.f32 	%f3543, %f1078;
	mov.f32 	%f3544, %f1079;
	mov.f32 	%f3546, %f1075;
	mov.f32 	%f3547, %f1076;

$L__BB0_138:
	add.s32 	%r1166, %r1166, 1;
	setp.lt.u32 	%p69, %r1166, %r854;
	mov.f32 	%f3512, %f3548;
	mov.f32 	%f3513, %f3547;
	mov.f32 	%f3514, %f3546;
	mov.f32 	%f3515, %f3545;
	mov.f32 	%f3516, %f3544;
	mov.f32 	%f3517, %f3543;
	mov.f32 	%f3518, %f3542;
	mov.f32 	%f3519, %f3541;
	mov.f32 	%f3520, %f3540;
	@%p69 bra 	$L__BB0_123;

$L__BB0_139:
	mul.ftz.f32 	%f2824, %f3572, %f3546;
	fma.rn.ftz.f32 	%f2825, %f3571, %f3543, %f2824;
	mul.ftz.f32 	%f2826, %f3572, %f3547;
	fma.rn.ftz.f32 	%f2827, %f3571, %f3544, %f2826;
	mul.ftz.f32 	%f2828, %f3572, %f3548;
	fma.rn.ftz.f32 	%f2829, %f3571, %f3545, %f2828;
	fma.rn.ftz.f32 	%f3570, %f969, %f3542, %f2829;
	fma.rn.ftz.f32 	%f3571, %f969, %f3541, %f2827;
	fma.rn.ftz.f32 	%f3572, %f969, %f3540, %f2825;
	bra.uni 	$L__BB0_141;

$L__BB0_140:
	mov.f32 	%f3570, %f969;
	bra.uni 	$L__BB0_141;

$L__BB0_71:
	mul.ftz.f32 	%f2000, %f584, %f584;
	mul.ftz.f32 	%f2001, %f2000, 0f3E2AAAAB;
	mul.ftz.f32 	%f2002, %f2001, %f584;
	sub.ftz.f32 	%f2003, %f584, %f2000;
	fma.rn.ftz.f32 	%f2004, %f2003, 0f3F000000, %f2002;
	mul.ftz.f32 	%f2005, %f2002, 0f40800000;
	sub.ftz.f32 	%f2006, %f2000, %f2005;
	fma.rn.ftz.f32 	%f2007, %f377, %f2004, %f373;
	fma.rn.ftz.f32 	%f2008, %f378, %f2004, %f374;
	fma.rn.ftz.f32 	%f2009, %f379, %f2004, %f375;
	fma.rn.ftz.f32 	%f2010, %f380, %f2004, %f376;
	fma.rn.ftz.f32 	%f2011, %f381, %f2006, %f2007;
	fma.rn.ftz.f32 	%f2012, %f382, %f2006, %f2008;
	fma.rn.ftz.f32 	%f2013, %f383, %f2006, %f2009;
	fma.rn.ftz.f32 	%f2014, %f384, %f2006, %f2010;
	fma.rn.ftz.f32 	%f2015, %f385, %f2002, %f2011;
	fma.rn.ftz.f32 	%f2016, %f386, %f2002, %f2012;
	fma.rn.ftz.f32 	%f2017, %f387, %f2002, %f2013;
	fma.rn.ftz.f32 	%f2018, %f388, %f2002, %f2014;
	mov.f32 	%f2019, 0f3F800000;
	sub.ftz.f32 	%f2020, %f2019, %f584;
	mul.ftz.f32 	%f2021, %f2020, 0f3F000000;
	mul.ftz.f32 	%f2022, %f2020, %f2021;
	add.ftz.f32 	%f2023, %f2020, %f2020;
	mul.ftz.f32 	%f2024, %f2023, %f584;
	mul.ftz.f32 	%f2025, %f381, %f2024;
	mul.ftz.f32 	%f2026, %f382, %f2024;
	mul.ftz.f32 	%f2027, %f383, %f2024;
	mul.ftz.f32 	%f2028, %f384, %f2024;
	fma.rn.ftz.f32 	%f2029, %f377, %f2022, %f2025;
	fma.rn.ftz.f32 	%f2030, %f378, %f2022, %f2026;
	fma.rn.ftz.f32 	%f2031, %f379, %f2022, %f2027;
	fma.rn.ftz.f32 	%f2032, %f380, %f2022, %f2028;
	mul.ftz.f32 	%f2033, %f584, 0f3F000000;
	mul.ftz.f32 	%f2034, %f2033, %f584;
	fma.rn.ftz.f32 	%f2035, %f385, %f2034, %f2029;
	fma.rn.ftz.f32 	%f2036, %f386, %f2034, %f2030;
	fma.rn.ftz.f32 	%f2037, %f387, %f2034, %f2031;
	fma.rn.ftz.f32 	%f2038, %f388, %f2034, %f2032;
	mul.ftz.f32 	%f2039, %f2036, %f2036;
	fma.rn.ftz.f32 	%f2040, %f2035, %f2035, %f2039;
	fma.rn.ftz.f32 	%f2041, %f2037, %f2037, %f2040;
	sub.ftz.f32 	%f2042, %f1, %f2015;
	sub.ftz.f32 	%f2043, %f2, %f2016;
	sub.ftz.f32 	%f2044, %f3, %f2017;
	mul.ftz.f32 	%f2045, %f2036, %f2043;
	fma.rn.ftz.f32 	%f2046, %f2035, %f2042, %f2045;
	fma.rn.ftz.f32 	%f2047, %f2037, %f2044, %f2046;
	div.approx.ftz.f32 	%f2048, %f2047, %f2041;
	mul.ftz.f32 	%f2049, %f2035, %f2048;
	mul.ftz.f32 	%f2050, %f2036, %f2048;
	mul.ftz.f32 	%f2051, %f2037, %f2048;
	sub.ftz.f32 	%f2052, %f2042, %f2049;
	sub.ftz.f32 	%f2053, %f2043, %f2050;
	sub.ftz.f32 	%f2054, %f2044, %f2051;
	mul.ftz.f32 	%f2055, %f2053, %f2053;
	fma.rn.ftz.f32 	%f2056, %f2052, %f2052, %f2055;
	fma.rn.ftz.f32 	%f2057, %f2054, %f2054, %f2056;
	sqrt.approx.ftz.f32 	%f2058, %f2057;
	div.approx.ftz.f32 	%f2059, %f2018, %f2058;
	mul.ftz.f32 	%f2060, %f2052, %f2059;
	mul.ftz.f32 	%f2061, %f2053, %f2059;
	mul.ftz.f32 	%f2062, %f2054, %f2059;
	add.ftz.f32 	%f2063, %f381, %f381;
	sub.ftz.f32 	%f2064, %f2063, %f377;
	add.ftz.f32 	%f2065, %f382, %f382;
	sub.ftz.f32 	%f2066, %f2065, %f378;
	add.ftz.f32 	%f2067, %f383, %f383;
	sub.ftz.f32 	%f2068, %f2067, %f379;
	mul.ftz.f32 	%f2069, %f381, 0f40800000;
	sub.ftz.f32 	%f2070, %f377, %f2069;
	mul.ftz.f32 	%f2071, %f382, 0f40800000;
	sub.ftz.f32 	%f2072, %f378, %f2071;
	mul.ftz.f32 	%f2073, %f383, 0f40800000;
	sub.ftz.f32 	%f2074, %f379, %f2073;
	add.ftz.f32 	%f2075, %f385, %f2070;
	add.ftz.f32 	%f2076, %f386, %f2072;
	add.ftz.f32 	%f2077, %f387, %f2074;
	fma.rn.ftz.f32 	%f2078, %f2075, %f584, %f2064;
	fma.rn.ftz.f32 	%f2079, %f2076, %f584, %f2066;
	fma.rn.ftz.f32 	%f2080, %f2077, %f584, %f2068;
	mul.ftz.f32 	%f2081, %f2079, %f2061;
	fma.rn.ftz.f32 	%f2082, %f2078, %f2060, %f2081;
	fma.rn.ftz.f32 	%f2083, %f2080, %f2062, %f2082;
	sub.ftz.f32 	%f2084, %f2041, %f2083;
	mul.ftz.f32 	%f2085, %f2060, %f2084;
	mul.ftz.f32 	%f2086, %f2061, %f2084;
	mul.ftz.f32 	%f2087, %f2062, %f2084;
	mul.ftz.f32 	%f2088, %f2038, %f2018;
	mul.ftz.f32 	%f2089, %f2035, %f2088;
	mul.ftz.f32 	%f2090, %f2036, %f2088;
	mul.ftz.f32 	%f2091, %f2037, %f2088;
	sub.ftz.f32 	%f3372, %f2085, %f2089;
	sub.ftz.f32 	%f3373, %f2086, %f2090;
	sub.ftz.f32 	%f3374, %f2087, %f2091;

$L__BB0_74:
	mul.ftz.f32 	%f2119, %f3373, %f3373;
	fma.rn.ftz.f32 	%f2120, %f3372, %f3372, %f2119;
	fma.rn.ftz.f32 	%f2121, %f3374, %f3374, %f2120;
	rsqrt.approx.ftz.f32 	%f2122, %f2121;
	mul.ftz.f32 	%f3572, %f3372, %f2122;
	mul.ftz.f32 	%f3571, %f3373, %f2122;
	mul.ftz.f32 	%f599, %f3374, %f2122;
	// begin inline asm
	call (%r545), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p38, %r545, 0;
	@%p38 bra 	$L__BB0_94;

	// begin inline asm
	call (%r546), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2123), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p39, %r546, 0;
	@%p39 bra 	$L__BB0_93;

	mov.u32 	%r1164, 0;

$L__BB0_77:
	.pragma "nounroll";
	// begin inline asm
	call (%rd412), _optix_get_transform_list_handle, (%r1164);
	// end inline asm
	// begin inline asm
	call (%r549), _optix_get_transform_type_from_handle, (%rd412);
	// end inline asm
	or.b32  	%r550, %r549, 1;
	setp.eq.s32 	%p40, %r550, 3;
	@%p40 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_78;

$L__BB0_83:
	setp.eq.s32 	%p43, %r549, 2;
	@%p43 bra 	$L__BB0_87;
	bra.uni 	$L__BB0_84;

$L__BB0_87:
	// begin inline asm
	call (%rd484), _optix_get_matrix_motion_transform_from_handle, (%rd412);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd486, %rd484;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r638,%r639,%r640,%r641}, [%rd486];
	// end inline asm
	add.s64 	%rd490, %rd484, 16;
	// begin inline asm
	cvta.to.global.u64 %rd489, %rd490;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r642,%r643,%r644,%r645}, [%rd489];
	// end inline asm
	add.s64 	%rd493, %rd484, 32;
	// begin inline asm
	cvta.to.global.u64 %rd492, %rd493;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r646,%r647,%r648,%r649}, [%rd492];
	// end inline asm
	add.s64 	%rd496, %rd484, 48;
	// begin inline asm
	cvta.to.global.u64 %rd495, %rd496;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r650,%r651,%r652,%r653}, [%rd495];
	// end inline asm
	add.s64 	%rd499, %rd484, 64;
	// begin inline asm
	cvta.to.global.u64 %rd498, %rd499;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r654,%r655,%r656,%r657}, [%rd498];
	// end inline asm
	add.s64 	%rd502, %rd484, 80;
	// begin inline asm
	cvta.to.global.u64 %rd501, %rd502;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r658,%r659,%r660,%r661}, [%rd501];
	// end inline asm
	add.s64 	%rd505, %rd484, 96;
	// begin inline asm
	cvta.to.global.u64 %rd504, %rd505;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r662,%r663,%r664,%r665}, [%rd504];
	// end inline asm
	add.s64 	%rd508, %rd484, 112;
	// begin inline asm
	cvta.to.global.u64 %rd507, %rd508;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r666,%r667,%r668,%r669}, [%rd507];
	// end inline asm
	mov.b32 	%f2226, %r641;
	mov.b32 	%f2227, %r642;
	and.b32  	%r682, %r640, 65535;
	add.s32 	%r683, %r682, -1;
	cvt.rn.f32.s32 	%f2228, %r683;
	sub.ftz.f32 	%f2229, %f2123, %f2226;
	mul.ftz.f32 	%f2230, %f2229, %f2228;
	sub.ftz.f32 	%f2231, %f2227, %f2226;
	div.approx.ftz.f32 	%f2232, %f2230, %f2231;
	min.ftz.f32 	%f2233, %f2228, %f2232;
	mov.f32 	%f2234, 0f00000000;
	max.ftz.f32 	%f2235, %f2234, %f2233;
	cvt.rmi.ftz.f32.f32 	%f2236, %f2235;
	sub.ftz.f32 	%f659, %f2235, %f2236;
	cvt.rzi.ftz.s32.f32 	%r684, %f2236;
	cvt.s64.s32 	%rd29, %r684;
	mul.wide.s32 	%rd519, %r684, 48;
	add.s64 	%rd511, %rd493, %rd519;
	// begin inline asm
	cvta.to.global.u64 %rd510, %rd511;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r670,%r671,%r672,%r673}, [%rd510];
	// end inline asm
	mov.b32 	%f3400, %r670;
	mov.b32 	%f3401, %r671;
	mov.b32 	%f3402, %r672;
	add.s64 	%rd514, %rd511, 16;
	// begin inline asm
	cvta.to.global.u64 %rd513, %rd514;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r674,%r675,%r676,%r677}, [%rd513];
	// end inline asm
	mov.b32 	%f3397, %r674;
	mov.b32 	%f3398, %r675;
	mov.b32 	%f3399, %r676;
	add.s64 	%rd517, %rd511, 32;
	// begin inline asm
	cvta.to.global.u64 %rd516, %rd517;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r678,%r679,%r680,%r681}, [%rd516];
	// end inline asm
	mov.b32 	%f3394, %r678;
	mov.b32 	%f3395, %r679;
	mov.b32 	%f3396, %r680;
	setp.leu.ftz.f32 	%p45, %f659, 0f00000000;
	@%p45 bra 	$L__BB0_89;

	mov.f32 	%f2237, 0f3F800000;
	sub.ftz.f32 	%f2238, %f2237, %f659;
	mul.lo.s64 	%rd529, %rd29, 48;
	add.s64 	%rd530, %rd484, %rd529;
	add.s64 	%rd521, %rd530, 80;
	// begin inline asm
	cvta.to.global.u64 %rd520, %rd521;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r685,%r686,%r687,%r688}, [%rd520];
	// end inline asm
	mov.b32 	%f2239, %r685;
	mov.b32 	%f2240, %r686;
	mov.b32 	%f2241, %r687;
	mul.ftz.f32 	%f2242, %f659, %f2239;
	mul.ftz.f32 	%f2243, %f659, %f2240;
	mul.ftz.f32 	%f2244, %f659, %f2241;
	fma.rn.ftz.f32 	%f3400, %f2238, %f3400, %f2242;
	fma.rn.ftz.f32 	%f3401, %f2238, %f3401, %f2243;
	fma.rn.ftz.f32 	%f3402, %f2238, %f3402, %f2244;
	add.s64 	%rd524, %rd530, 96;
	// begin inline asm
	cvta.to.global.u64 %rd523, %rd524;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r689,%r690,%r691,%r692}, [%rd523];
	// end inline asm
	mov.b32 	%f2245, %r689;
	mov.b32 	%f2246, %r690;
	mov.b32 	%f2247, %r691;
	mul.ftz.f32 	%f2248, %f659, %f2245;
	mul.ftz.f32 	%f2249, %f659, %f2246;
	mul.ftz.f32 	%f2250, %f659, %f2247;
	fma.rn.ftz.f32 	%f3397, %f2238, %f3397, %f2248;
	fma.rn.ftz.f32 	%f3398, %f2238, %f3398, %f2249;
	fma.rn.ftz.f32 	%f3399, %f2238, %f3399, %f2250;
	add.s64 	%rd527, %rd530, 112;
	// begin inline asm
	cvta.to.global.u64 %rd526, %rd527;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r693,%r694,%r695,%r696}, [%rd526];
	// end inline asm
	mov.b32 	%f2251, %r693;
	mov.b32 	%f2252, %r694;
	mov.b32 	%f2253, %r695;
	mul.ftz.f32 	%f2254, %f659, %f2251;
	mul.ftz.f32 	%f2255, %f659, %f2252;
	mul.ftz.f32 	%f2256, %f659, %f2253;
	fma.rn.ftz.f32 	%f3394, %f2238, %f3394, %f2254;
	fma.rn.ftz.f32 	%f3395, %f2238, %f3395, %f2255;
	fma.rn.ftz.f32 	%f3396, %f2238, %f3396, %f2256;
	bra.uni 	$L__BB0_89;

$L__BB0_78:
	mov.f32 	%f3403, 0f00000000;
	mov.f32 	%f3405, 0f3F800000;
	setp.eq.s32 	%p41, %r549, 4;
	@%p41 bra 	$L__BB0_81;

	setp.ne.s32 	%p42, %r549, 1;
	mov.f32 	%f3404, %f3403;
	mov.f32 	%f3406, %f3403;
	mov.f32 	%f3407, %f3405;
	mov.f32 	%f3408, %f3403;
	mov.f32 	%f3409, %f3405;
	mov.f32 	%f3410, %f3403;
	mov.f32 	%f3411, %f3403;
	@%p42 bra 	$L__BB0_90;

	// begin inline asm
	call (%rd414), _optix_get_static_transform_from_handle, (%rd412);
	// end inline asm
	add.s64 	%rd792, %rd414, 64;
	bra.uni 	$L__BB0_82;

$L__BB0_84:
	// begin inline asm
	call (%rd427), _optix_get_srt_motion_transform_from_handle, (%rd412);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd429, %rd427;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r563,%r564,%r565,%r566}, [%rd429];
	// end inline asm
	add.s64 	%rd433, %rd427, 16;
	// begin inline asm
	cvta.to.global.u64 %rd432, %rd433;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r567,%r568,%r569,%r570}, [%rd432];
	// end inline asm
	add.s64 	%rd436, %rd427, 32;
	// begin inline asm
	cvta.to.global.u64 %rd435, %rd436;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r571,%r572,%r573,%r574}, [%rd435];
	// end inline asm
	add.s64 	%rd439, %rd427, 48;
	// begin inline asm
	cvta.to.global.u64 %rd438, %rd439;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r575,%r576,%r577,%r578}, [%rd438];
	// end inline asm
	add.s64 	%rd442, %rd427, 64;
	// begin inline asm
	cvta.to.global.u64 %rd441, %rd442;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r579,%r580,%r581,%r582}, [%rd441];
	// end inline asm
	add.s64 	%rd445, %rd427, 80;
	// begin inline asm
	cvta.to.global.u64 %rd444, %rd445;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r583,%r584,%r585,%r586}, [%rd444];
	// end inline asm
	add.s64 	%rd448, %rd427, 96;
	// begin inline asm
	cvta.to.global.u64 %rd447, %rd448;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r587,%r588,%r589,%r590}, [%rd447];
	// end inline asm
	add.s64 	%rd451, %rd427, 112;
	// begin inline asm
	cvta.to.global.u64 %rd450, %rd451;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r591,%r592,%r593,%r594}, [%rd450];
	// end inline asm
	add.s64 	%rd454, %rd427, 128;
	// begin inline asm
	cvta.to.global.u64 %rd453, %rd454;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r595,%r596,%r597,%r598}, [%rd453];
	// end inline asm
	add.s64 	%rd457, %rd427, 144;
	// begin inline asm
	cvta.to.global.u64 %rd456, %rd457;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r599,%r600,%r601,%r602}, [%rd456];
	// end inline asm
	mov.b32 	%f2135, %r566;
	mov.b32 	%f2136, %r567;
	and.b32  	%r619, %r565, 65535;
	add.s32 	%r620, %r619, -1;
	cvt.rn.f32.s32 	%f2137, %r620;
	sub.ftz.f32 	%f2138, %f2123, %f2135;
	mul.ftz.f32 	%f2139, %f2138, %f2137;
	sub.ftz.f32 	%f2140, %f2136, %f2135;
	div.approx.ftz.f32 	%f2141, %f2139, %f2140;
	min.ftz.f32 	%f2142, %f2137, %f2141;
	mov.f32 	%f2143, 0f00000000;
	max.ftz.f32 	%f2144, %f2143, %f2142;
	cvt.rmi.ftz.f32.f32 	%f2145, %f2144;
	sub.ftz.f32 	%f619, %f2144, %f2145;
	cvt.rzi.ftz.s32.f32 	%r621, %f2145;
	mul.wide.s32 	%rd471, %r621, 64;
	add.s64 	%rd460, %rd436, %rd471;
	// begin inline asm
	cvta.to.global.u64 %rd459, %rd460;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r603,%r604,%r605,%r606}, [%rd459];
	// end inline asm
	mov.b32 	%f3384, %r603;
	mov.b32 	%f3385, %r604;
	mov.b32 	%f3386, %r605;
	add.s64 	%rd463, %rd460, 16;
	// begin inline asm
	cvta.to.global.u64 %rd462, %rd463;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r607,%r608,%r609,%r610}, [%rd462];
	// end inline asm
	mov.b32 	%f3387, %r607;
	mov.b32 	%f3388, %r608;
	mov.b32 	%f3389, %r610;
	add.s64 	%rd466, %rd460, 32;
	// begin inline asm
	cvta.to.global.u64 %rd465, %rd466;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r611,%r612,%r613,%r614}, [%rd465];
	// end inline asm
	mov.b32 	%f3390, %r612;
	mov.b32 	%f3391, %r613;
	mov.b32 	%f3392, %r614;
	add.s64 	%rd469, %rd460, 48;
	// begin inline asm
	cvta.to.global.u64 %rd468, %rd469;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r615,%r616,%r617,%r618}, [%rd468];
	// end inline asm
	mov.b32 	%f3393, %r615;
	setp.leu.ftz.f32 	%p44, %f619, 0f00000000;
	@%p44 bra 	$L__BB0_86;

	mov.f32 	%f2146, 0f3F800000;
	sub.ftz.f32 	%f2147, %f2146, %f619;
	add.s64 	%rd473, %rd460, 64;
	// begin inline asm
	cvta.to.global.u64 %rd472, %rd473;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r622,%r623,%r624,%r625}, [%rd472];
	// end inline asm
	mov.b32 	%f2148, %r622;
	mov.b32 	%f2149, %r623;
	mov.b32 	%f2150, %r624;
	mul.ftz.f32 	%f2151, %f619, %f2148;
	mul.ftz.f32 	%f2152, %f619, %f2149;
	mul.ftz.f32 	%f2153, %f619, %f2150;
	fma.rn.ftz.f32 	%f3384, %f2147, %f3384, %f2151;
	fma.rn.ftz.f32 	%f3385, %f2147, %f3385, %f2152;
	fma.rn.ftz.f32 	%f3386, %f2147, %f3386, %f2153;
	add.s64 	%rd476, %rd460, 80;
	// begin inline asm
	cvta.to.global.u64 %rd475, %rd476;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r626,%r627,%r628,%r629}, [%rd475];
	// end inline asm
	mov.b32 	%f2154, %r626;
	mov.b32 	%f2155, %r627;
	mov.b32 	%f2156, %r629;
	mul.ftz.f32 	%f2157, %f619, %f2154;
	mul.ftz.f32 	%f2158, %f619, %f2155;
	mul.ftz.f32 	%f2159, %f619, %f2156;
	fma.rn.ftz.f32 	%f3387, %f2147, %f3387, %f2157;
	fma.rn.ftz.f32 	%f3388, %f2147, %f3388, %f2158;
	fma.rn.ftz.f32 	%f3389, %f2147, %f3389, %f2159;
	add.s64 	%rd479, %rd460, 96;
	// begin inline asm
	cvta.to.global.u64 %rd478, %rd479;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r630,%r631,%r632,%r633}, [%rd478];
	// end inline asm
	mov.b32 	%f2160, %r631;
	mov.b32 	%f2161, %r632;
	mov.b32 	%f2162, %r633;
	mul.ftz.f32 	%f2163, %f619, %f2160;
	mul.ftz.f32 	%f2164, %f619, %f2161;
	mul.ftz.f32 	%f2165, %f619, %f2162;
	fma.rn.ftz.f32 	%f2166, %f2147, %f3390, %f2163;
	fma.rn.ftz.f32 	%f2167, %f2147, %f3391, %f2164;
	fma.rn.ftz.f32 	%f2168, %f2147, %f3392, %f2165;
	add.s64 	%rd482, %rd460, 112;
	// begin inline asm
	cvta.to.global.u64 %rd481, %rd482;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r634,%r635,%r636,%r637}, [%rd481];
	// end inline asm
	mov.b32 	%f2169, %r634;
	mul.ftz.f32 	%f2170, %f619, %f2169;
	fma.rn.ftz.f32 	%f2171, %f2147, %f3393, %f2170;
	mul.ftz.f32 	%f2172, %f2167, %f2167;
	fma.rn.ftz.f32 	%f2173, %f2166, %f2166, %f2172;
	fma.rn.ftz.f32 	%f2174, %f2168, %f2168, %f2173;
	fma.rn.ftz.f32 	%f2175, %f2171, %f2171, %f2174;
	rsqrt.approx.ftz.f32 	%f2176, %f2175;
	mul.ftz.f32 	%f3390, %f2166, %f2176;
	mul.ftz.f32 	%f3391, %f2167, %f2176;
	mul.ftz.f32 	%f3392, %f2168, %f2176;
	mul.ftz.f32 	%f3393, %f2176, %f2171;

$L__BB0_86:
	mul.ftz.f32 	%f2177, %f3391, %f3391;
	fma.rn.ftz.f32 	%f2178, %f3390, %f3390, %f2177;
	fma.rn.ftz.f32 	%f2179, %f3392, %f3392, %f2178;
	fma.rn.ftz.f32 	%f2180, %f3393, %f3393, %f2179;
	rcp.approx.ftz.f32 	%f2181, %f2180;
	mul.ftz.f32 	%f2182, %f3390, %f2181;
	mul.ftz.f32 	%f2183, %f3391, %f2181;
	mul.ftz.f32 	%f2184, %f3392, %f2181;
	mul.ftz.f32 	%f2185, %f3393, %f2181;
	mul.ftz.f32 	%f2186, %f3390, %f2182;
	mul.ftz.f32 	%f2187, %f3391, %f2183;
	mul.ftz.f32 	%f2188, %f3392, %f2184;
	mul.ftz.f32 	%f2189, %f3390, %f2183;
	mul.ftz.f32 	%f2190, %f3392, %f2185;
	mul.ftz.f32 	%f2191, %f3390, %f2184;
	mul.ftz.f32 	%f2192, %f3391, %f2185;
	mul.ftz.f32 	%f2193, %f3391, %f2184;
	mul.ftz.f32 	%f2194, %f3390, %f2185;
	sub.ftz.f32 	%f2195, %f2186, %f2187;
	sub.ftz.f32 	%f2196, %f2195, %f2188;
	fma.rn.ftz.f32 	%f2197, %f3393, %f2185, %f2196;
	sub.ftz.f32 	%f2198, %f2189, %f2190;
	add.ftz.f32 	%f2199, %f2198, %f2198;
	add.ftz.f32 	%f2200, %f2191, %f2192;
	add.ftz.f32 	%f2201, %f2200, %f2200;
	add.ftz.f32 	%f2202, %f2189, %f2190;
	add.ftz.f32 	%f2203, %f2202, %f2202;
	sub.ftz.f32 	%f2204, %f2187, %f2186;
	sub.ftz.f32 	%f2205, %f2204, %f2188;
	fma.rn.ftz.f32 	%f2206, %f3393, %f2185, %f2205;
	sub.ftz.f32 	%f2207, %f2193, %f2194;
	add.ftz.f32 	%f2208, %f2207, %f2207;
	sub.ftz.f32 	%f2209, %f2191, %f2192;
	add.ftz.f32 	%f2210, %f2209, %f2209;
	add.ftz.f32 	%f2211, %f2193, %f2194;
	add.ftz.f32 	%f2212, %f2211, %f2211;
	neg.ftz.f32 	%f2213, %f2186;
	sub.ftz.f32 	%f2214, %f2213, %f2187;
	add.ftz.f32 	%f2215, %f2188, %f2214;
	fma.rn.ftz.f32 	%f2216, %f3393, %f2185, %f2215;
	mul.ftz.f32 	%f2217, %f3386, %f2197;
	fma.rn.ftz.f32 	%f2218, %f3388, %f2199, %f2217;
	fma.rn.ftz.f32 	%f3402, %f3389, %f2201, %f2218;
	mul.ftz.f32 	%f2219, %f3388, %f2206;
	fma.rn.ftz.f32 	%f2220, %f3386, %f2203, %f2219;
	fma.rn.ftz.f32 	%f3399, %f3389, %f2208, %f2220;
	mul.ftz.f32 	%f2221, %f3388, %f2212;
	fma.rn.ftz.f32 	%f2222, %f3386, %f2210, %f2221;
	fma.rn.ftz.f32 	%f3396, %f3389, %f2216, %f2222;
	mul.ftz.f32 	%f2223, %f3385, %f2197;
	fma.rn.ftz.f32 	%f3401, %f3387, %f2199, %f2223;
	mul.ftz.f32 	%f2224, %f3387, %f2206;
	fma.rn.ftz.f32 	%f3398, %f3385, %f2203, %f2224;
	mul.ftz.f32 	%f2225, %f3387, %f2212;
	fma.rn.ftz.f32 	%f3395, %f3385, %f2210, %f2225;
	mul.ftz.f32 	%f3400, %f3384, %f2197;
	mul.ftz.f32 	%f3397, %f3384, %f2203;
	mul.ftz.f32 	%f3394, %f3384, %f2210;

$L__BB0_89:
	mul.ftz.f32 	%f2257, %f3395, %f3399;
	mul.ftz.f32 	%f2258, %f3396, %f3398;
	sub.ftz.f32 	%f2259, %f2258, %f2257;
	mul.ftz.f32 	%f2260, %f3400, %f2259;
	mul.ftz.f32 	%f2261, %f3394, %f3399;
	mul.ftz.f32 	%f2262, %f3396, %f3397;
	sub.ftz.f32 	%f2263, %f2262, %f2261;
	mul.ftz.f32 	%f2264, %f2263, %f3401;
	sub.ftz.f32 	%f2265, %f2260, %f2264;
	mul.ftz.f32 	%f2266, %f3394, %f3398;
	mul.ftz.f32 	%f2267, %f3395, %f3397;
	sub.ftz.f32 	%f2268, %f2267, %f2266;
	fma.rn.ftz.f32 	%f2269, %f2268, %f3402, %f2265;
	rcp.approx.ftz.f32 	%f2270, %f2269;
	mul.ftz.f32 	%f3409, %f2259, %f2270;
	mul.ftz.f32 	%f2271, %f3396, %f3401;
	mul.ftz.f32 	%f2272, %f3395, %f3402;
	sub.ftz.f32 	%f2273, %f2272, %f2271;
	mul.ftz.f32 	%f3410, %f2273, %f2270;
	mul.ftz.f32 	%f2274, %f3398, %f3402;
	mul.ftz.f32 	%f2275, %f3399, %f3401;
	sub.ftz.f32 	%f2276, %f2275, %f2274;
	mul.ftz.f32 	%f3411, %f2276, %f2270;
	sub.ftz.f32 	%f2277, %f2261, %f2262;
	mul.ftz.f32 	%f3406, %f2277, %f2270;
	mul.ftz.f32 	%f2278, %f3394, %f3402;
	mul.ftz.f32 	%f2279, %f3396, %f3400;
	sub.ftz.f32 	%f2280, %f2279, %f2278;
	mul.ftz.f32 	%f3407, %f2280, %f2270;
	mul.ftz.f32 	%f2281, %f3399, %f3400;
	mul.ftz.f32 	%f2282, %f3397, %f3402;
	sub.ftz.f32 	%f2283, %f2282, %f2281;
	mul.ftz.f32 	%f3408, %f2283, %f2270;
	mul.ftz.f32 	%f3403, %f2268, %f2270;
	mul.ftz.f32 	%f2284, %f3395, %f3400;
	mul.ftz.f32 	%f2285, %f3394, %f3401;
	sub.ftz.f32 	%f2286, %f2285, %f2284;
	mul.ftz.f32 	%f3404, %f2286, %f2270;
	mul.ftz.f32 	%f2287, %f3397, %f3401;
	mul.ftz.f32 	%f2288, %f3398, %f3400;
	sub.ftz.f32 	%f2289, %f2288, %f2287;
	mul.ftz.f32 	%f3405, %f2289, %f2270;
	bra.uni 	$L__BB0_90;

$L__BB0_81:
	// begin inline asm
	call (%rd792), _optix_get_instance_inverse_transform_from_handle, (%rd412);
	// end inline asm

$L__BB0_82:
	// begin inline asm
	cvta.to.global.u64 %rd418, %rd792;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r551,%r552,%r553,%r554}, [%rd418];
	// end inline asm
	mov.b32 	%f3409, %r551;
	mov.b32 	%f3410, %r552;
	mov.b32 	%f3411, %r553;
	add.s64 	%rd422, %rd792, 16;
	// begin inline asm
	cvta.to.global.u64 %rd421, %rd422;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r555,%r556,%r557,%r558}, [%rd421];
	// end inline asm
	mov.b32 	%f3406, %r555;
	mov.b32 	%f3407, %r556;
	mov.b32 	%f3408, %r557;
	add.s64 	%rd425, %rd792, 32;
	// begin inline asm
	cvta.to.global.u64 %rd424, %rd425;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r559,%r560,%r561,%r562}, [%rd424];
	// end inline asm
	mov.b32 	%f3403, %r559;
	mov.b32 	%f3404, %r560;
	mov.b32 	%f3405, %r561;

$L__BB0_90:
	setp.eq.s32 	%p46, %r1164, 0;
	@%p46 bra 	$L__BB0_92;

	mul.ftz.f32 	%f2290, %f3380, %f3410;
	fma.rn.ftz.f32 	%f2291, %f3377, %f3409, %f2290;
	fma.rn.ftz.f32 	%f705, %f3383, %f3411, %f2291;
	mul.ftz.f32 	%f2292, %f3379, %f3410;
	fma.rn.ftz.f32 	%f2293, %f3376, %f3409, %f2292;
	fma.rn.ftz.f32 	%f706, %f3382, %f3411, %f2293;
	mul.ftz.f32 	%f2294, %f3378, %f3410;
	fma.rn.ftz.f32 	%f2295, %f3375, %f3409, %f2294;
	fma.rn.ftz.f32 	%f3411, %f3381, %f3411, %f2295;
	mul.ftz.f32 	%f2296, %f3380, %f3407;
	fma.rn.ftz.f32 	%f2297, %f3377, %f3406, %f2296;
	fma.rn.ftz.f32 	%f708, %f3383, %f3408, %f2297;
	mul.ftz.f32 	%f2298, %f3379, %f3407;
	fma.rn.ftz.f32 	%f2299, %f3376, %f3406, %f2298;
	fma.rn.ftz.f32 	%f709, %f3382, %f3408, %f2299;
	mul.ftz.f32 	%f2300, %f3378, %f3407;
	fma.rn.ftz.f32 	%f2301, %f3375, %f3406, %f2300;
	fma.rn.ftz.f32 	%f3408, %f3381, %f3408, %f2301;
	mul.ftz.f32 	%f2302, %f3380, %f3404;
	fma.rn.ftz.f32 	%f2303, %f3377, %f3403, %f2302;
	fma.rn.ftz.f32 	%f711, %f3383, %f3405, %f2303;
	mul.ftz.f32 	%f2304, %f3379, %f3404;
	fma.rn.ftz.f32 	%f2305, %f3376, %f3403, %f2304;
	fma.rn.ftz.f32 	%f712, %f3382, %f3405, %f2305;
	mul.ftz.f32 	%f2306, %f3378, %f3404;
	fma.rn.ftz.f32 	%f2307, %f3375, %f3403, %f2306;
	fma.rn.ftz.f32 	%f3405, %f3381, %f3405, %f2307;
	mov.f32 	%f3403, %f711;
	mov.f32 	%f3404, %f712;
	mov.f32 	%f3406, %f708;
	mov.f32 	%f3407, %f709;
	mov.f32 	%f3409, %f705;
	mov.f32 	%f3410, %f706;

$L__BB0_92:
	add.s32 	%r1164, %r1164, 1;
	setp.lt.u32 	%p47, %r1164, %r546;
	mov.f32 	%f3375, %f3411;
	mov.f32 	%f3376, %f3410;
	mov.f32 	%f3377, %f3409;
	mov.f32 	%f3378, %f3408;
	mov.f32 	%f3379, %f3407;
	mov.f32 	%f3380, %f3406;
	mov.f32 	%f3381, %f3405;
	mov.f32 	%f3382, %f3404;
	mov.f32 	%f3383, %f3403;
	@%p47 bra 	$L__BB0_77;

$L__BB0_93:
	mul.ftz.f32 	%f2308, %f3572, %f3409;
	fma.rn.ftz.f32 	%f2309, %f3571, %f3406, %f2308;
	mul.ftz.f32 	%f2310, %f3572, %f3410;
	fma.rn.ftz.f32 	%f2311, %f3571, %f3407, %f2310;
	mul.ftz.f32 	%f2312, %f3572, %f3411;
	fma.rn.ftz.f32 	%f2313, %f3571, %f3408, %f2312;
	fma.rn.ftz.f32 	%f3570, %f599, %f3405, %f2313;
	fma.rn.ftz.f32 	%f3571, %f599, %f3404, %f2311;
	fma.rn.ftz.f32 	%f3572, %f599, %f3403, %f2309;
	bra.uni 	$L__BB0_141;

$L__BB0_94:
	mov.f32 	%f3570, %f599;

$L__BB0_141:
	ld.u32 	%r1005, [%rd50+100];
	setp.eq.s32 	%p70, %r1005, 14;
	@%p70 bra 	$L__BB0_143;
	bra.uni 	$L__BB0_142;

$L__BB0_143:
	ld.u64 	%rd771, [%rd50+24];
	mul.wide.u32 	%rd772, %r74, 8;
	add.s64 	%rd773, %rd771, %rd772;
	ld.v2.u32 	{%r30, %r29}, [%rd773];
	bra.uni 	$L__BB0_144;

$L__BB0_142:
	add.s32 	%r29, %r74, 1;
	mov.u32 	%r30, %r74;

$L__BB0_144:
	// begin inline asm
	call (%r1008), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f1117, %r1008;
	ld.u32 	%r1011, [%rd50+96];
	and.b32  	%r1012, %r1011, 1073741823;
	setp.gt.ftz.f32 	%p71, %f1117, 0f3F000000;
	or.b32  	%r1013, %r1012, 1073741824;
	selp.b32 	%r1010, %r1013, %r1012, %p71;
	mov.u32 	%r1009, 2;
	// begin inline asm
	call _optix_set_payload, (%r1009, %r1010);
	// end inline asm
	ld.f32 	%f1118, [%rd50+156];
	ld.v4.f32 	{%f2830, %f2831, %f2832, %f2833}, [%rd50+112];
	ld.f32 	%f3575, [%rd50+80];
	setp.lt.ftz.f32 	%p72, %f3575, 0f00000000;
	@%p72 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	ld.u64 	%rd44, [%rd50+8];
	ld.u8 	%rs1, [%rd50+188];
	and.b16  	%rs2, %rs1, 64;
	setp.eq.s16 	%p73, %rs2, 0;
	@%p73 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mul.wide.s32 	%rd776, %r29, 12;
	add.s64 	%rd777, %rd44, %rd776;
	mul.wide.s32 	%rd778, %r30, 12;
	add.s64 	%rd779, %rd44, %rd778;
	ld.f32 	%f2834, [%rd779];
	ld.f32 	%f2835, [%rd777];
	sub.ftz.f32 	%f2836, %f2835, %f2834;
	ld.f32 	%f2837, [%rd779+4];
	ld.f32 	%f2838, [%rd777+4];
	sub.ftz.f32 	%f2839, %f2838, %f2837;
	ld.f32 	%f2840, [%rd779+8];
	ld.f32 	%f2841, [%rd777+8];
	sub.ftz.f32 	%f2842, %f2841, %f2840;
	fma.rn.ftz.f32 	%f3575, %f2836, %f1117, %f2834;
	fma.rn.ftz.f32 	%f3574, %f2839, %f1117, %f2837;
	fma.rn.ftz.f32 	%f3573, %f2842, %f1117, %f2840;
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	ld.f32 	%f3574, [%rd50+84];
	ld.f32 	%f3573, [%rd50+88];
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mul.wide.u32 	%rd774, %r74, 12;
	add.s64 	%rd775, %rd44, %rd774;
	ld.f32 	%f3575, [%rd775];
	ld.f32 	%f3574, [%rd775+4];
	ld.f32 	%f3573, [%rd775+8];

$L__BB0_149:
	mov.u32 	%r1015, 0;
	mul.ftz.f32 	%f1135, %f2830, %f3575;
	mov.u32 	%r1017, 1;
	mul.ftz.f32 	%f1136, %f2831, %f3574;
	mul.ftz.f32 	%f1137, %f2832, %f3573;
	// begin inline asm
	call (%r1014), _optix_get_payload, (%r1015);
	// end inline asm
	// begin inline asm
	call (%r1016), _optix_get_payload, (%r1017);
	// end inline asm
	cvt.u64.u32 	%rd780, %r1014;
	cvt.u64.u32 	%rd781, %r1016;
	bfi.b64 	%rd45, %rd780, %rd781, 32, 32;
	// begin inline asm
	call (%f2843), _optix_get_ray_tmax, ();
	// end inline asm
	st.f32 	[%rd45+108], %f2843;
	// begin inline asm
	call (%f2844), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f2845), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f2846), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f2847), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f2848), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f2849), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f2850), _optix_get_world_ray_direction_z, ();
	// end inline asm
	fma.rn.ftz.f32 	%f1138, %f2847, %f2850, %f2846;
	fma.rn.ftz.f32 	%f2851, %f2847, %f2849, %f2845;
	mov.b32 	%r1018, %f2851;
	fma.rn.ftz.f32 	%f2852, %f2847, %f2848, %f2844;
	mov.b32 	%r1019, %f2852;
	st.v2.f32 	[%rd45+96], {%f2852, %f2851};
	st.f32 	[%rd45+104], %f1138;
	ld.const.u32 	%r31, [params+192];
	setp.eq.s32 	%p74, %r31, 0;
	mov.b64 	%rd782, {%r1019, %r1018};
	cvt.u32.u64 	%r1020, %rd782;
	mov.b32 	%f1139, %r1020;
	shr.u64 	%rd783, %rd782, 32;
	cvt.u32.u64 	%r1021, %rd783;
	mov.b32 	%f1140, %r1021;
	@%p74 bra 	$L__BB0_182;

	mul.ftz.f32 	%f2853, %f3572, %f3572;
	fma.rn.ftz.f32 	%f2854, %f3571, %f3571, %f2853;
	fma.rn.ftz.f32 	%f2855, %f3570, %f3570, %f2854;
	rsqrt.approx.ftz.f32 	%f2856, %f2855;
	mul.ftz.f32 	%f2857, %f3572, %f2856;
	mul.ftz.f32 	%f2858, %f3571, %f2856;
	mul.ftz.f32 	%f2859, %f3570, %f2856;
	ld.f32 	%f2860, [%rd45+112];
	mov.u64 	%rd795, 0;
	ld.f32 	%f2861, [%rd45+116];
	mul.ftz.f32 	%f2862, %f2861, %f2858;
	fma.rn.ftz.f32 	%f2863, %f2860, %f2857, %f2862;
	ld.f32 	%f2864, [%rd45+120];
	fma.rn.ftz.f32 	%f2865, %f2859, %f2864, %f2863;
	setp.ge.ftz.f32 	%p75, %f2865, 0f00000000;
	ld.u32 	%r1022, [%rd50+188];
	or.b32  	%r1023, %r1022, 16;
	selp.b32 	%r1024, %r1023, %r1022, %p75;
	ld.u32 	%r1025, [%rd45+12];
	or.b32  	%r1026, %r1024, %r1025;
	st.u32 	[%rd45+12], %r1026;
	and.b32  	%r1027, %r1026, 16;
	setp.eq.s32 	%p76, %r1027, 0;
	neg.ftz.f32 	%f2866, %f2857;
	neg.ftz.f32 	%f2867, %f2858;
	neg.ftz.f32 	%f2868, %f2859;
	selp.f32 	%f1141, %f2868, %f2859, %p76;
	selp.f32 	%f1142, %f2867, %f2858, %p76;
	selp.f32 	%f1143, %f2866, %f2857, %p76;
	ld.u32 	%r1169, [%rd45+28];
	setp.eq.s32 	%p77, %r31, 1;
	@%p77 bra 	$L__BB0_152;

	mad.lo.s32 	%r1169, %r1169, 1664525, 1013904223;
	st.u32 	[%rd45+28], %r1169;
	and.b32  	%r1028, %r1169, 16777215;
	cvt.rn.f32.u32 	%f2869, %r1028;
	mov.f32 	%f2870, 0f4B800000;
	div.approx.ftz.f32 	%f2871, %f2869, %f2870;
	cvt.rn.f32.u32 	%f2872, %r31;
	mul.ftz.f32 	%f2873, %f2871, %f2872;
	cvt.rmi.ftz.f32.f32 	%f2874, %f2873;
	cvt.rzi.ftz.u32.f32 	%r1029, %f2874;
	add.s32 	%r1030, %r31, -1;
	min.u32 	%r1031, %r1029, %r1030;
	cvt.s64.s32 	%rd795, %r1031;

$L__BB0_152:
	mad.lo.s32 	%r1032, %r1169, 1664525, 1013904223;
	and.b32  	%r1033, %r1032, 16777215;
	cvt.rn.f32.u32 	%f2875, %r1033;
	mov.f32 	%f2876, 0f4B800000;
	div.approx.ftz.f32 	%f1144, %f2875, %f2876;
	mad.lo.s32 	%r1034, %r1032, 1664525, 1013904223;
	st.u32 	[%rd45+28], %r1034;
	and.b32  	%r1035, %r1034, 16777215;
	cvt.rn.f32.u32 	%f2877, %r1035;
	div.approx.ftz.f32 	%f1145, %f2877, %f2876;
	ld.const.u64 	%rd785, [params+200];
	cvta.to.global.u64 	%rd786, %rd785;
	mul.lo.s64 	%rd787, %rd795, 80;
	add.s64 	%rd48, %rd786, %rd787;
	ld.global.f32 	%f1146, [%rd48];
	ld.global.f32 	%f1147, [%rd48+4];
	ld.global.f32 	%f1148, [%rd48+8];
	ld.global.f32 	%f1149, [%rd48+16];
	ld.global.f32 	%f1150, [%rd48+20];
	ld.global.f32 	%f1151, [%rd48+24];
	ld.global.f32 	%f1152, [%rd48+28];
	ld.global.u32 	%r1036, [%rd48+12];
	setp.eq.s32 	%p78, %r1036, 0;
	@%p78 bra 	$L__BB0_157;

	ld.global.f32 	%f1153, [%rd48+44];
	sub.ftz.f32 	%f2879, %f1139, %f1146;
	sub.ftz.f32 	%f2880, %f1140, %f1147;
	mul.ftz.f32 	%f2881, %f2880, %f2880;
	fma.rn.ftz.f32 	%f2882, %f2879, %f2879, %f2881;
	sub.ftz.f32 	%f2883, %f1138, %f1148;
	fma.rn.ftz.f32 	%f2884, %f2883, %f2883, %f2882;
	rsqrt.approx.ftz.f32 	%f2885, %f2884;
	mov.f32 	%f2886, 0f3F800000;
	mul.ftz.f32 	%f1154, %f2879, %f2885;
	mul.ftz.f32 	%f1155, %f2880, %f2885;
	mul.ftz.f32 	%f1156, %f2883, %f2885;
	mul.ftz.f32 	%f2887, %f1144, 0f40C90FDB;
	cos.approx.ftz.f32 	%f2888, %f2887;
	sqrt.approx.ftz.f32 	%f2889, %f1145;
	mul.ftz.f32 	%f1157, %f2889, %f2888;
	sin.approx.ftz.f32 	%f2890, %f2887;
	mul.ftz.f32 	%f1158, %f2889, %f2890;
	mul.ftz.f32 	%f2891, %f1157, %f1157;
	sub.ftz.f32 	%f2892, %f2886, %f2891;
	mul.ftz.f32 	%f2893, %f1158, %f1158;
	sub.ftz.f32 	%f1159, %f2892, %f2893;
	setp.leu.ftz.f32 	%p79, %f1159, 0f00000000;
	mov.f32 	%f3577, 0f00000000;
	mov.f32 	%f3576, %f3577;
	@%p79 bra 	$L__BB0_155;

	sqrt.approx.ftz.f32 	%f3576, %f1159;

$L__BB0_155:
	mov.b32 	%r1037, %f1156;
	and.b32  	%r1038, %r1037, -2147483648;
	or.b32  	%r1039, %r1038, 1065353216;
	mov.b32 	%f2896, %r1039;
	mul.ftz.f32 	%f2897, %f3576, %f2896;
	add.ftz.f32 	%f2898, %f1156, %f2896;
	mul.ftz.f32 	%f2899, %f1155, %f1158;
	fma.rn.ftz.f32 	%f2900, %f1154, %f1157, %f2899;
	fma.rn.ftz.f32 	%f2901, %f2898, %f2897, %f2900;
	abs.ftz.f32 	%f2902, %f1156;
	add.ftz.f32 	%f2903, %f2902, 0f3F800000;
	div.approx.ftz.f32 	%f2904, %f2901, %f2903;
	mul.ftz.f32 	%f2905, %f1154, %f2904;
	mul.ftz.f32 	%f2906, %f1155, %f2904;
	mul.ftz.f32 	%f2907, %f2898, %f2904;
	sub.ftz.f32 	%f2908, %f2905, %f1157;
	sub.ftz.f32 	%f2909, %f2906, %f1158;
	sub.ftz.f32 	%f2910, %f2907, %f2897;
	fma.rn.ftz.f32 	%f2911, %f1153, %f2908, %f1146;
	fma.rn.ftz.f32 	%f2912, %f1153, %f2909, %f1147;
	fma.rn.ftz.f32 	%f2913, %f1153, %f2910, %f1148;
	sub.ftz.f32 	%f3584, %f2911, %f1139;
	sub.ftz.f32 	%f3583, %f2912, %f1140;
	sub.ftz.f32 	%f3582, %f2913, %f1138;
	mul.ftz.f32 	%f2914, %f3583, %f3583;
	fma.rn.ftz.f32 	%f2915, %f3584, %f3584, %f2914;
	fma.rn.ftz.f32 	%f2916, %f3582, %f3582, %f2915;
	sqrt.approx.ftz.f32 	%f3581, %f2916;
	setp.leu.ftz.f32 	%p80, %f3581, 0f358637BD;
	@%p80 bra 	$L__BB0_160;

	rcp.approx.ftz.f32 	%f2917, %f3581;
	mul.ftz.f32 	%f3584, %f3584, %f2917;
	mul.ftz.f32 	%f3583, %f3583, %f2917;
	mul.ftz.f32 	%f3582, %f3582, %f2917;
	cvt.rn.f32.u32 	%f2918, %r31;
	mul.ftz.f32 	%f3580, %f1149, %f2918;
	mul.ftz.f32 	%f3579, %f1150, %f2918;
	mul.ftz.f32 	%f3578, %f1151, %f2918;
	mul.ftz.f32 	%f2919, %f3581, %f3581;
	div.approx.ftz.f32 	%f3577, %f2919, %f1152;
	bra.uni 	$L__BB0_160;

$L__BB0_157:
	ld.global.f32 	%f2922, [%rd48+32];
	ld.global.f32 	%f2923, [%rd48+36];
	ld.global.f32 	%f2924, [%rd48+40];
	fma.rn.ftz.f32 	%f2925, %f1144, %f2922, %f1146;
	fma.rn.ftz.f32 	%f2926, %f1144, %f2923, %f1147;
	fma.rn.ftz.f32 	%f2927, %f1144, %f2924, %f1148;
	ld.global.f32 	%f2928, [%rd48+48];
	ld.global.f32 	%f2929, [%rd48+52];
	ld.global.f32 	%f2930, [%rd48+56];
	fma.rn.ftz.f32 	%f2931, %f1145, %f2928, %f2925;
	fma.rn.ftz.f32 	%f2932, %f1145, %f2929, %f2926;
	fma.rn.ftz.f32 	%f2933, %f1145, %f2930, %f2927;
	sub.ftz.f32 	%f3584, %f2931, %f1139;
	sub.ftz.f32 	%f3583, %f2932, %f1140;
	sub.ftz.f32 	%f3582, %f2933, %f1138;
	mul.ftz.f32 	%f2934, %f3584, %f3584;
	fma.rn.ftz.f32 	%f2935, %f3583, %f3583, %f2934;
	fma.rn.ftz.f32 	%f2936, %f3582, %f3582, %f2935;
	sqrt.approx.ftz.f32 	%f3581, %f2936;
	setp.leu.ftz.f32 	%p81, %f3581, 0f358637BD;
	mov.f32 	%f3577, 0f00000000;
	@%p81 bra 	$L__BB0_160;

	ld.global.f32 	%f2939, [%rd48+64];
	ld.global.f32 	%f2940, [%rd48+68];
	ld.global.f32 	%f2941, [%rd48+72];
	rcp.approx.ftz.f32 	%f2942, %f3581;
	mul.ftz.f32 	%f3584, %f3584, %f2942;
	mul.ftz.f32 	%f3583, %f3583, %f2942;
	mul.ftz.f32 	%f3582, %f3582, %f2942;
	mul.ftz.f32 	%f2943, %f2939, %f3584;
	mul.ftz.f32 	%f2944, %f2940, %f3583;
	neg.ftz.f32 	%f2945, %f2944;
	sub.ftz.f32 	%f2946, %f2945, %f2943;
	mul.ftz.f32 	%f2947, %f2941, %f3582;
	sub.ftz.f32 	%f1180, %f2946, %f2947;
	setp.leu.ftz.f32 	%p82, %f1180, 0f358637BD;
	@%p82 bra 	$L__BB0_160;

	cvt.rn.f32.u32 	%f2948, %r31;
	mul.ftz.f32 	%f3580, %f1149, %f2948;
	mul.ftz.f32 	%f3579, %f1150, %f2948;
	mul.ftz.f32 	%f3578, %f1151, %f2948;
	mul.ftz.f32 	%f2949, %f1152, %f1180;
	mul.ftz.f32 	%f2950, %f3581, %f3581;
	div.approx.ftz.f32 	%f3577, %f2950, %f2949;

$L__BB0_160:
	setp.leu.ftz.f32 	%p83, %f3577, 0f00000000;
	@%p83 bra 	$L__BB0_182;

	mul.ftz.f32 	%f2951, %f1143, %f3584;
	fma.rn.ftz.f32 	%f2952, %f1142, %f3583, %f2951;
	fma.rn.ftz.f32 	%f2953, %f1141, %f3582, %f2952;
	setp.leu.ftz.f32 	%p84, %f2953, 0f00000000;
	@%p84 bra 	$L__BB0_182;

	mul.ftz.f32 	%f2954, %f3580, 0f3EA2F983;
	setp.eq.ftz.f32 	%p85, %f2954, 0f00000000;
	mul.ftz.f32 	%f2955, %f3579, 0f3EA2F983;
	setp.eq.ftz.f32 	%p86, %f2955, 0f00000000;
	mul.ftz.f32 	%f2956, %f3578, 0f3EA2F983;
	setp.eq.ftz.f32 	%p87, %f2956, 0f00000000;
	and.pred  	%p88, %p86, %p85;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_182;

	ld.const.u64 	%rd49, [params+280];
	ld.v4.f32 	{%f2957, %f2958, %f2959, %f2960}, [%rd45+96];
	ld.const.f32 	%f1196, [params+76];
	sub.ftz.f32 	%f1197, %f3581, %f1196;
	mov.u32 	%r1170, 1065353216;
	mov.u32 	%r1081, 4;
	mov.f32 	%f3585, %f1196;
	mov.u32 	%r1171, %r1170;
	mov.u32 	%r1172, %r1170;

$L__BB0_164:
	mov.f32 	%f3586, 0f00000000;
	// begin inline asm
	call(%r1170,%r1171,%r1172,%r1046,%r1047,%r1048,%r1049,%r1050,%r1051,%r1052,%r1053,%r1054,%r1055,%r1056,%r1057,%r1058,%r1059,%r1060,%r1061,%r1062,%r1063,%r1064,%r1065,%r1066,%r1067,%r1068,%r1069,%r1070,%r1071,%r1072,%r1073,%r1074),_optix_trace_typed_32,(%r1015,%rd49,%f2957,%f2958,%f2959,%f3584,%f3583,%f3582,%f3585,%f1197,%f3586,%r1017,%r1015,%r1017,%r1009,%r1017,%r1081,%r1170,%r1171,%r1172,%r1015,%r1114,%r1115,%r1116,%r1117,%r1118,%r1119,%r1120,%r1121,%r1122,%r1123,%r1124,%r1125,%r1126,%r1127,%r1128,%r1129,%r1130,%r1131,%r1132,%r1133,%r1134,%r1135,%r1136,%r1137,%r1138,%r1139,%r1140,%r1141);
	// end inline asm
	mov.b32 	%f1199, %r1170;
	mov.b32 	%f1200, %r1171;
	mov.b32 	%f1201, %r1172;
	mul.ftz.f32 	%f2973, %f1199, %f1200;
	mul.ftz.f32 	%f2974, %f2973, %f1201;
	setp.lt.ftz.f32 	%p90, %f2974, 0f358637BD;
	mov.f32 	%f3587, %f3586;
	mov.f32 	%f3588, %f3586;
	@%p90 bra 	$L__BB0_167;

	mov.b32 	%f2975, %r1046;
	add.ftz.f32 	%f2976, %f1196, %f2975;
	add.ftz.f32 	%f3585, %f3585, %f2976;
	setp.lt.ftz.f32 	%p91, %f3585, %f1197;
	setp.ne.s32 	%p92, %r1046, 0;
	and.pred  	%p93, %p92, %p91;
	@%p93 bra 	$L__BB0_164;

	mov.f32 	%f3586, %f1199;
	mov.f32 	%f3587, %f1200;
	mov.f32 	%f3588, %f1201;

$L__BB0_167:
	setp.neu.ftz.f32 	%p94, %f3586, 0f00000000;
	setp.neu.ftz.f32 	%p95, %f3587, 0f00000000;
	or.pred  	%p96, %p94, %p95;
	setp.neu.ftz.f32 	%p97, %f3588, 0f00000000;
	or.pred  	%p98, %p97, %p96;
	@%p98 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_168;

$L__BB0_182:
	mov.f32 	%f3142, 0f00000000;
	st.v2.f32 	[%rd45], {%f3142, %f3142};
	st.u32 	[%rd45+8], %r1015;
	mov.f32 	%f3143, 0f3F800000;
	st.v4.f32 	[%rd45+48], {%f3143, %f3143, %f3143, %f3143};
	ld.u32 	%r1159, [%rd45+44];
	add.s32 	%r1160, %r1159, -1;
	st.u32 	[%rd45+44], %r1160;

$L__BB0_183:
	ret;

$L__BB0_168:
	ld.f32 	%f2977, [%rd45+96];
	fma.rn.ftz.f32 	%f2978, %f1143, %f1196, %f2977;
	st.f32 	[%rd45+96], %f2978;
	ld.f32 	%f2979, [%rd45+100];
	fma.rn.ftz.f32 	%f2980, %f1142, %f1196, %f2979;
	st.f32 	[%rd45+100], %f2980;
	ld.f32 	%f2981, [%rd45+104];
	fma.rn.ftz.f32 	%f2982, %f1141, %f1196, %f2981;
	st.f32 	[%rd45+104], %f2982;
	mov.f32 	%f2983, 0f00000000;
	st.v4.f32 	[%rd45+48], {%f2983, %f2983, %f2983, %f2983};
	ld.u32 	%r73, [%rd45+12];
	and.b32  	%r1142, %r73, 16777216;
	setp.eq.s32 	%p99, %r1142, 0;
	@%p99 bra 	$L__BB0_170;

	ld.f32 	%f2984, [%rd45+16];
	mul.ftz.f32 	%f2985, %f1135, %f2984;
	st.f32 	[%rd45+16], %f2985;
	ld.f32 	%f2986, [%rd45+20];
	mul.ftz.f32 	%f2987, %f1136, %f2986;
	st.f32 	[%rd45+20], %f2987;
	ld.f32 	%f2988, [%rd45+24];
	mul.ftz.f32 	%f2989, %f1137, %f2988;
	st.f32 	[%rd45+24], %f2989;
	and.b32  	%r1143, %r73, -16777217;
	st.u32 	[%rd45+12], %r1143;

$L__BB0_170:
	ld.u32 	%r1144, [%rd45+44];
	setp.ne.s32 	%p100, %r1144, 0;
	@%p100 bra 	$L__BB0_172;

	ld.const.v2.f32 	{%f2990, %f2991}, [params+144];
	mul.ftz.f32 	%f2994, %f1142, %f2991;
	fma.rn.ftz.f32 	%f2995, %f1143, %f2990, %f2994;
	ld.const.f32 	%f2996, [params+152];
	ld.const.v2.f32 	{%f2997, %f2998}, [params+160];
	mul.ftz.f32 	%f3001, %f1142, %f2998;
	fma.rn.ftz.f32 	%f3002, %f1143, %f2997, %f3001;
	ld.const.f32 	%f3003, [params+168];
	ld.const.v2.f32 	{%f3004, %f3005}, [params+176];
	mul.ftz.f32 	%f3008, %f1142, %f3005;
	fma.rn.ftz.f32 	%f3009, %f1143, %f3004, %f3008;
	ld.const.f32 	%f3010, [params+184];
	fma.rn.ftz.f32 	%f3011, %f1141, %f3010, %f3009;
	fma.rn.ftz.f32 	%f3012, %f1141, %f3003, %f3002;
	fma.rn.ftz.f32 	%f3013, %f1141, %f2996, %f2995;
	st.v2.f32 	[%rd45+32], {%f3013, %f3012};
	st.f32 	[%rd45+40], %f3011;

$L__BB0_172:
	ld.f32 	%f3014, [%rd45+112];
	ld.f32 	%f3015, [%rd45+116];
	mul.ftz.f32 	%f3016, %f1142, %f3015;
	fma.rn.ftz.f32 	%f3017, %f1143, %f3014, %f3016;
	ld.f32 	%f3018, [%rd45+120];
	fma.rn.ftz.f32 	%f3019, %f1141, %f3018, %f3017;
	ld.f32 	%f3020, [%rd50+140];
	mul.ftz.f32 	%f3021, %f3020, %f3019;
	mul.ftz.f32 	%f3022, %f1137, %f3021;
	mul.ftz.f32 	%f3023, %f1136, %f3021;
	mul.ftz.f32 	%f3024, %f1135, %f3021;
	st.v2.f32 	[%rd45], {%f3024, %f3023};
	st.f32 	[%rd45+8], %f3022;
	ld.u32 	%r1145, [%rd45+28];
	mad.lo.s32 	%r1146, %r1145, 1664525, 1013904223;
	and.b32  	%r1147, %r1146, 16777215;
	cvt.rn.f32.u32 	%f3025, %r1147;
	div.approx.ftz.f32 	%f3027, %f3025, %f2876;
	mad.lo.s32 	%r1148, %r1146, 1664525, 1013904223;
	st.u32 	[%rd45+28], %r1148;
	and.b32  	%r1149, %r1148, 16777215;
	cvt.rn.f32.u32 	%f3028, %r1149;
	div.approx.ftz.f32 	%f3029, %f3028, %f2876;
	mul.ftz.f32 	%f3030, %f3027, 0f40C90FDB;
	sqrt.approx.ftz.f32 	%f3031, %f3029;
	cos.approx.ftz.f32 	%f3032, %f3030;
	mul.ftz.f32 	%f1209, %f3031, %f3032;
	sin.approx.ftz.f32 	%f3033, %f3030;
	mul.ftz.f32 	%f1210, %f3031, %f3033;
	mul.ftz.f32 	%f3034, %f1209, %f1209;
	mov.f32 	%f3035, 0f3F800000;
	sub.ftz.f32 	%f3036, %f3035, %f3034;
	mul.ftz.f32 	%f3037, %f1210, %f1210;
	sub.ftz.f32 	%f1211, %f3036, %f3037;
	st.f32 	[%rd45+128], %f1209;
	st.f32 	[%rd45+132], %f1210;
	st.f32 	[%rd45+136], %f1211;
	setp.eq.ftz.f32 	%p101, %f1118, 0f00000000;
	@%p101 bra 	$L__BB0_176;
	bra.uni 	$L__BB0_173;

$L__BB0_176:
	setp.leu.ftz.f32 	%p103, %f1211, 0f00000000;
	mov.f32 	%f3590, 0f00000000;
	@%p103 bra 	$L__BB0_178;

	sqrt.approx.ftz.f32 	%f3590, %f1211;

$L__BB0_178:
	mov.b32 	%r1153, %f1141;
	and.b32  	%r1154, %r1153, -2147483648;
	or.b32  	%r1155, %r1154, 1065353216;
	mov.b32 	%f3127, %r1155;
	mul.ftz.f32 	%f3128, %f3590, %f3127;
	add.ftz.f32 	%f3129, %f1141, %f3127;
	mul.ftz.f32 	%f3130, %f1142, %f1210;
	fma.rn.ftz.f32 	%f3131, %f1143, %f1209, %f3130;
	fma.rn.ftz.f32 	%f3132, %f3129, %f3128, %f3131;
	abs.ftz.f32 	%f3133, %f1141;
	add.ftz.f32 	%f3134, %f3133, 0f3F800000;
	div.approx.ftz.f32 	%f3135, %f3132, %f3134;
	mul.ftz.f32 	%f3136, %f1143, %f3135;
	mul.ftz.f32 	%f3137, %f1142, %f3135;
	mul.ftz.f32 	%f3138, %f3129, %f3135;
	sub.ftz.f32 	%f3593, %f3136, %f1209;
	sub.ftz.f32 	%f3592, %f3137, %f1210;
	sub.ftz.f32 	%f3591, %f3138, %f3128;
	st.f32 	[%rd45+128], %f3593;
	st.f32 	[%rd45+132], %f3592;
	st.f32 	[%rd45+136], %f3591;
	mul.ftz.f32 	%f3594, %f3590, 0f3EA2F983;
	st.v4.f32 	[%rd45+48], {%f1135, %f1136, %f1137, %f3594};
	bra.uni 	$L__BB0_179;

$L__BB0_173:
	setp.leu.ftz.f32 	%p102, %f1211, 0f00000000;
	mov.f32 	%f3589, %f2983;
	@%p102 bra 	$L__BB0_175;

	sqrt.approx.ftz.f32 	%f3589, %f1211;

$L__BB0_175:
	mov.b32 	%r1150, %f1141;
	and.b32  	%r1151, %r1150, -2147483648;
	or.b32  	%r1152, %r1151, 1065353216;
	mov.b32 	%f3039, %r1152;
	mul.ftz.f32 	%f3040, %f3589, %f3039;
	add.ftz.f32 	%f3041, %f1141, %f3039;
	mul.ftz.f32 	%f3042, %f1142, %f1210;
	fma.rn.ftz.f32 	%f3043, %f1143, %f1209, %f3042;
	fma.rn.ftz.f32 	%f3044, %f3041, %f3040, %f3043;
	abs.ftz.f32 	%f3045, %f1141;
	add.ftz.f32 	%f3046, %f3045, 0f3F800000;
	div.approx.ftz.f32 	%f3048, %f3044, %f3046;
	mul.ftz.f32 	%f3049, %f1143, %f3048;
	mul.ftz.f32 	%f3050, %f1142, %f3048;
	mul.ftz.f32 	%f3051, %f3041, %f3048;
	sub.ftz.f32 	%f3593, %f3049, %f1209;
	sub.ftz.f32 	%f3592, %f3050, %f1210;
	sub.ftz.f32 	%f3591, %f3051, %f3040;
	st.f32 	[%rd45+128], %f3593;
	st.f32 	[%rd45+132], %f3592;
	st.f32 	[%rd45+136], %f3591;
	mul.ftz.f32 	%f3052, %f1118, %f1118;
	add.ftz.f32 	%f3053, %f3052, 0f3EA8F5C3;
	add.ftz.f32 	%f3054, %f3052, 0f3DB851EC;
	div.approx.ftz.f32 	%f3055, %f3052, %f3053;
	div.approx.ftz.f32 	%f3056, %f3052, %f3054;
	fma.rn.ftz.f32 	%f3057, %f3055, 0fBF000000, 0f3F800000;
	fma.rn.ftz.f32 	%f3058, %f3056, 0f3EE66666, 0f00000000;
	mul.ftz.f32 	%f3060, %f1142, %f3592;
	fma.rn.ftz.f32 	%f3061, %f1143, %f3593, %f3060;
	fma.rn.ftz.f32 	%f3062, %f1141, %f3591, %f3061;
	ld.f32 	%f3063, [%rd45+112];
	ld.f32 	%f3064, [%rd45+116];
	mul.ftz.f32 	%f3065, %f1142, %f3064;
	fma.rn.ftz.f32 	%f3066, %f1143, %f3063, %f3065;
	ld.f32 	%f3067, [%rd45+120];
	fma.rn.ftz.f32 	%f3068, %f1141, %f3067, %f3066;
	min.ftz.f32 	%f3069, %f3062, %f3035;
	max.ftz.f32 	%f3070, %f2983, %f3069;
	min.ftz.f32 	%f3071, %f3068, %f3035;
	max.ftz.f32 	%f3072, %f2983, %f3071;
	mul.ftz.f32 	%f3073, %f3070, %f3070;
	mul.ftz.f32 	%f3074, %f3072, %f3072;
	sub.ftz.f32 	%f3075, %f3035, %f3073;
	sub.ftz.f32 	%f3076, %f3035, %f3074;
	mul.ftz.f32 	%f3077, %f3075, %f3076;
	sqrt.approx.ftz.f32 	%f3078, %f3077;
	mul.ftz.f32 	%f3079, %f1143, %f3070;
	mul.ftz.f32 	%f3080, %f1142, %f3070;
	mul.ftz.f32 	%f3081, %f1141, %f3070;
	sub.ftz.f32 	%f3082, %f3593, %f3079;
	sub.ftz.f32 	%f3083, %f3592, %f3080;
	sub.ftz.f32 	%f3084, %f3591, %f3081;
	mul.ftz.f32 	%f3085, %f3083, %f3083;
	fma.rn.ftz.f32 	%f3086, %f3082, %f3082, %f3085;
	fma.rn.ftz.f32 	%f3087, %f3084, %f3084, %f3086;
	rsqrt.approx.ftz.f32 	%f3088, %f3087;
	mul.ftz.f32 	%f3089, %f3082, %f3088;
	mul.ftz.f32 	%f3090, %f3083, %f3088;
	mul.ftz.f32 	%f3091, %f3084, %f3088;
	mul.ftz.f32 	%f3092, %f1143, %f3072;
	mul.ftz.f32 	%f3093, %f1142, %f3072;
	mul.ftz.f32 	%f3094, %f1141, %f3072;
	sub.ftz.f32 	%f3095, %f3063, %f3092;
	sub.ftz.f32 	%f3096, %f3064, %f3093;
	sub.ftz.f32 	%f3097, %f3067, %f3094;
	mul.ftz.f32 	%f3098, %f3096, %f3096;
	fma.rn.ftz.f32 	%f3099, %f3095, %f3095, %f3098;
	fma.rn.ftz.f32 	%f3100, %f3097, %f3097, %f3099;
	rsqrt.approx.ftz.f32 	%f3101, %f3100;
	mul.ftz.f32 	%f3102, %f3095, %f3101;
	mul.ftz.f32 	%f3103, %f3096, %f3101;
	mul.ftz.f32 	%f3104, %f3097, %f3101;
	mul.ftz.f32 	%f3105, %f3090, %f3103;
	fma.rn.ftz.f32 	%f3106, %f3089, %f3102, %f3105;
	fma.rn.ftz.f32 	%f3107, %f3091, %f3104, %f3106;
	min.ftz.f32 	%f3108, %f3107, %f3035;
	max.ftz.f32 	%f3109, %f2983, %f3108;
	mul.ftz.f32 	%f3110, %f3078, %f3109;
	max.ftz.f32 	%f3111, %f3070, %f3072;
	div.approx.ftz.f32 	%f3112, %f3110, %f3111;
	fma.rn.ftz.f32 	%f3113, %f3058, %f3112, %f3057;
	mul.ftz.f32 	%f3114, %f3070, %f3113;
	mul.ftz.f32 	%f3594, %f3114, 0f3EA2F983;
	abs.ftz.f32 	%f3115, %f3062;
	mul.ftz.f32 	%f3116, %f1135, 0f3EA2F983;
	mul.ftz.f32 	%f3117, %f3116, %f3115;
	mul.ftz.f32 	%f3118, %f1136, 0f3EA2F983;
	mul.ftz.f32 	%f3119, %f3118, %f3115;
	mul.ftz.f32 	%f3120, %f1137, 0f3EA2F983;
	mul.ftz.f32 	%f3121, %f3120, %f3115;
	rcp.approx.ftz.f32 	%f3122, %f3594;
	mul.ftz.f32 	%f3123, %f3121, %f3122;
	mul.ftz.f32 	%f3124, %f3119, %f3122;
	mul.ftz.f32 	%f3125, %f3117, %f3122;
	st.v4.f32 	[%rd45+48], {%f3125, %f3124, %f3123, %f3594};

$L__BB0_179:
	setp.le.ftz.f32 	%p104, %f3594, 0f00000000;
	@%p104 bra 	$L__BB0_181;

	mul.ftz.f32 	%f3139, %f1142, %f3592;
	fma.rn.ftz.f32 	%f3140, %f1143, %f3593, %f3139;
	fma.rn.ftz.f32 	%f3141, %f1141, %f3591, %f3140;
	setp.gtu.ftz.f32 	%p105, %f3141, 0f3A83126F;
	@%p105 bra 	$L__BB0_183;

$L__BB0_181:
	ld.u32 	%r1156, [%rd45+12];
	or.b32  	%r1157, %r1156, -2147483648;
	st.u32 	[%rd45+12], %r1157;
	bra.uni 	$L__BB0_183;

}

