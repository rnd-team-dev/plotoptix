//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__curve_radiance__radio_scatter
.const .align 8 .b8 params[288];

.visible .entry __closesthit__curve_radiance__radio_scatter()
{
	.reg .pred 	%p<77>;
	.reg .f32 	%f<3300>;
	.reg .b32 	%r<999>;
	.reg .b64 	%rd<782>;


	// begin inline asm
	call (%rd45), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r998), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r33, 3;
	// begin inline asm
	call _optix_set_payload, (%r33, %r998);
	// end inline asm
	// begin inline asm
	call (%f1161), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f1162), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f1163), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f1164), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f1165), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1166), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f1167), _optix_get_world_ray_direction_z, ();
	// end inline asm
	fma.rn.ftz.f32 	%f1, %f1164, %f1165, %f1161;
	fma.rn.ftz.f32 	%f2, %f1164, %f1166, %f1162;
	fma.rn.ftz.f32 	%f3, %f1164, %f1167, %f1163;
	// begin inline asm
	call (%r35), _optix_get_hit_kind, ();
	// end inline asm
	// begin inline asm
	call (%r36), _optix_get_primitive_type_from_hit_kind, (%r35);
	// end inline asm
	setp.eq.s32 	%p1, %r36, 9473;
	@%p1 bra 	$L__BB0_97;

	setp.eq.s32 	%p2, %r36, 9474;
	@%p2 bra 	$L__BB0_50;

	setp.ne.s32 	%p3, %r36, 9475;
	@%p3 bra 	$L__BB0_144;

	// begin inline asm
	call (%rd46), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r39), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f1177, 0f00000000;
	// begin inline asm
	call (%f3290, %f3289, %f3288, %f1172,  %f3293, %f3292, %f3291, %f1176), _optix_get_linear_curve_vertex_data, (%rd46, %r998, %r39, %f1177);
	// end inline asm
	sub.ftz.f32 	%f14, %f3293, %f3290;
	sub.ftz.f32 	%f17, %f3292, %f3289;
	sub.ftz.f32 	%f20, %f3291, %f3288;
	// begin inline asm
	call (%r42), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p4, %r42, 0;
	@%p4 bra 	$L__BB0_23;

	// begin inline asm
	call (%r43), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1178), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p5, %r43, 0;
	@%p5 bra 	$L__BB0_22;

	mov.u32 	%r991, 0;

$L__BB0_6:
	.pragma "nounroll";
	// begin inline asm
	call (%rd48), _optix_get_transform_list_handle, (%r991);
	// end inline asm
	// begin inline asm
	call (%r46), _optix_get_transform_type_from_handle, (%rd48);
	// end inline asm
	or.b32  	%r47, %r46, 1;
	setp.eq.s32 	%p6, %r47, 3;
	@%p6 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_7;

$L__BB0_12:
	setp.eq.s32 	%p9, %r46, 2;
	@%p9 bra 	$L__BB0_16;
	bra.uni 	$L__BB0_13;

$L__BB0_16:
	// begin inline asm
	call (%rd120), _optix_get_matrix_motion_transform_from_handle, (%rd48);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r135,%r136,%r137,%r138}, [%rd122];
	// end inline asm
	add.s64 	%rd126, %rd120, 16;
	// begin inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r139,%r140,%r141,%r142}, [%rd125];
	// end inline asm
	add.s64 	%rd129, %rd120, 32;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r143,%r144,%r145,%r146}, [%rd128];
	// end inline asm
	add.s64 	%rd132, %rd120, 48;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd131];
	// end inline asm
	add.s64 	%rd135, %rd120, 64;
	// begin inline asm
	cvta.to.global.u64 %rd134, %rd135;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd134];
	// end inline asm
	add.s64 	%rd138, %rd120, 80;
	// begin inline asm
	cvta.to.global.u64 %rd137, %rd138;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd137];
	// end inline asm
	add.s64 	%rd141, %rd120, 96;
	// begin inline asm
	cvta.to.global.u64 %rd140, %rd141;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r159,%r160,%r161,%r162}, [%rd140];
	// end inline asm
	add.s64 	%rd144, %rd120, 112;
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd144;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r163,%r164,%r165,%r166}, [%rd143];
	// end inline asm
	mov.b32 	%f1305, %r138;
	mov.b32 	%f1306, %r139;
	and.b32  	%r179, %r137, 65535;
	add.s32 	%r180, %r179, -1;
	cvt.rn.f32.s32 	%f1307, %r180;
	sub.ftz.f32 	%f1308, %f1178, %f1305;
	mul.ftz.f32 	%f1309, %f1308, %f1307;
	sub.ftz.f32 	%f1310, %f1306, %f1305;
	div.approx.ftz.f32 	%f1311, %f1309, %f1310;
	min.ftz.f32 	%f1312, %f1307, %f1311;
	mov.f32 	%f1313, 0f00000000;
	max.ftz.f32 	%f1314, %f1313, %f1312;
	cvt.rmi.ftz.f32.f32 	%f1315, %f1314;
	sub.ftz.f32 	%f107, %f1314, %f1315;
	cvt.rzi.ftz.s32.f32 	%r181, %f1315;
	cvt.s64.s32 	%rd8, %r181;
	mul.wide.s32 	%rd155, %r181, 48;
	add.s64 	%rd147, %rd129, %rd155;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd146];
	// end inline asm
	mov.b32 	%f2905, %r167;
	mov.b32 	%f2904, %r168;
	mov.b32 	%f2903, %r169;
	mov.b32 	%f2902, %r170;
	add.s64 	%rd150, %rd147, 16;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd149];
	// end inline asm
	mov.b32 	%f2909, %r171;
	mov.b32 	%f2908, %r172;
	mov.b32 	%f2907, %r173;
	mov.b32 	%f2906, %r174;
	add.s64 	%rd153, %rd147, 32;
	// begin inline asm
	cvta.to.global.u64 %rd152, %rd153;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd152];
	// end inline asm
	mov.b32 	%f2913, %r175;
	mov.b32 	%f2912, %r176;
	mov.b32 	%f2911, %r177;
	mov.b32 	%f2910, %r178;
	setp.leu.ftz.f32 	%p11, %f107, 0f00000000;
	@%p11 bra 	$L__BB0_18;

	mov.f32 	%f1316, 0f3F800000;
	sub.ftz.f32 	%f1317, %f1316, %f107;
	mul.lo.s64 	%rd165, %rd8, 48;
	add.s64 	%rd166, %rd120, %rd165;
	add.s64 	%rd157, %rd166, 80;
	// begin inline asm
	cvta.to.global.u64 %rd156, %rd157;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r182,%r183,%r184,%r185}, [%rd156];
	// end inline asm
	mov.b32 	%f1318, %r182;
	mov.b32 	%f1319, %r183;
	mov.b32 	%f1320, %r184;
	mov.b32 	%f1321, %r185;
	mul.ftz.f32 	%f1322, %f107, %f1318;
	mul.ftz.f32 	%f1323, %f107, %f1319;
	mul.ftz.f32 	%f1324, %f107, %f1320;
	mul.ftz.f32 	%f1325, %f107, %f1321;
	fma.rn.ftz.f32 	%f2905, %f1317, %f2905, %f1322;
	fma.rn.ftz.f32 	%f2904, %f1317, %f2904, %f1323;
	fma.rn.ftz.f32 	%f2903, %f1317, %f2903, %f1324;
	fma.rn.ftz.f32 	%f2902, %f1317, %f2902, %f1325;
	add.s64 	%rd160, %rd166, 96;
	// begin inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r186,%r187,%r188,%r189}, [%rd159];
	// end inline asm
	mov.b32 	%f1326, %r186;
	mov.b32 	%f1327, %r187;
	mov.b32 	%f1328, %r188;
	mov.b32 	%f1329, %r189;
	mul.ftz.f32 	%f1330, %f107, %f1326;
	mul.ftz.f32 	%f1331, %f107, %f1327;
	mul.ftz.f32 	%f1332, %f107, %f1328;
	mul.ftz.f32 	%f1333, %f107, %f1329;
	fma.rn.ftz.f32 	%f2909, %f1317, %f2909, %f1330;
	fma.rn.ftz.f32 	%f2908, %f1317, %f2908, %f1331;
	fma.rn.ftz.f32 	%f2907, %f1317, %f2907, %f1332;
	fma.rn.ftz.f32 	%f2906, %f1317, %f2906, %f1333;
	add.s64 	%rd163, %rd166, 112;
	// begin inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r190,%r191,%r192,%r193}, [%rd162];
	// end inline asm
	mov.b32 	%f1334, %r190;
	mov.b32 	%f1335, %r191;
	mov.b32 	%f1336, %r192;
	mov.b32 	%f1337, %r193;
	mul.ftz.f32 	%f1338, %f107, %f1334;
	mul.ftz.f32 	%f1339, %f107, %f1335;
	mul.ftz.f32 	%f1340, %f107, %f1336;
	mul.ftz.f32 	%f1341, %f107, %f1337;
	fma.rn.ftz.f32 	%f2913, %f1317, %f2913, %f1338;
	fma.rn.ftz.f32 	%f2912, %f1317, %f2912, %f1339;
	fma.rn.ftz.f32 	%f2911, %f1317, %f2911, %f1340;
	fma.rn.ftz.f32 	%f2910, %f1317, %f2910, %f1341;
	bra.uni 	$L__BB0_18;

$L__BB0_7:
	mov.f32 	%f2917, 0f3F800000;
	setp.eq.s32 	%p7, %r46, 4;
	@%p7 bra 	$L__BB0_10;

	setp.ne.s32 	%p8, %r46, 1;
	mov.f32 	%f2914, %f1177;
	mov.f32 	%f2915, %f1177;
	mov.f32 	%f2916, %f1177;
	mov.f32 	%f2918, %f1177;
	mov.f32 	%f2919, %f1177;
	mov.f32 	%f2920, %f2917;
	mov.f32 	%f2921, %f1177;
	mov.f32 	%f2922, %f1177;
	mov.f32 	%f2923, %f2917;
	mov.f32 	%f2924, %f1177;
	mov.f32 	%f2925, %f1177;
	@%p8 bra 	$L__BB0_19;

	// begin inline asm
	call (%rd50), _optix_get_static_transform_from_handle, (%rd48);
	// end inline asm
	add.s64 	%rd776, %rd50, 64;
	bra.uni 	$L__BB0_11;

$L__BB0_13:
	// begin inline asm
	call (%rd63), _optix_get_srt_motion_transform_from_handle, (%rd48);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r60,%r61,%r62,%r63}, [%rd65];
	// end inline asm
	add.s64 	%rd69, %rd63, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r64,%r65,%r66,%r67}, [%rd68];
	// end inline asm
	add.s64 	%rd72, %rd63, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r68,%r69,%r70,%r71}, [%rd71];
	// end inline asm
	add.s64 	%rd75, %rd63, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r72,%r73,%r74,%r75}, [%rd74];
	// end inline asm
	add.s64 	%rd78, %rd63, 64;
	// begin inline asm
	cvta.to.global.u64 %rd77, %rd78;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r76,%r77,%r78,%r79}, [%rd77];
	// end inline asm
	add.s64 	%rd81, %rd63, 80;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r80,%r81,%r82,%r83}, [%rd80];
	// end inline asm
	add.s64 	%rd84, %rd63, 96;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd83];
	// end inline asm
	add.s64 	%rd87, %rd63, 112;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd86];
	// end inline asm
	add.s64 	%rd90, %rd63, 128;
	// begin inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd89];
	// end inline asm
	add.s64 	%rd93, %rd63, 144;
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd93;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd92];
	// end inline asm
	mov.b32 	%f1193, %r63;
	mov.b32 	%f1194, %r64;
	and.b32  	%r116, %r62, 65535;
	add.s32 	%r117, %r116, -1;
	cvt.rn.f32.s32 	%f1195, %r117;
	sub.ftz.f32 	%f1196, %f1178, %f1193;
	mul.ftz.f32 	%f1197, %f1196, %f1195;
	sub.ftz.f32 	%f1198, %f1194, %f1193;
	div.approx.ftz.f32 	%f1199, %f1197, %f1198;
	min.ftz.f32 	%f1200, %f1195, %f1199;
	mov.f32 	%f1201, 0f00000000;
	max.ftz.f32 	%f1202, %f1201, %f1200;
	cvt.rmi.ftz.f32.f32 	%f1203, %f1202;
	sub.ftz.f32 	%f46, %f1202, %f1203;
	cvt.rzi.ftz.s32.f32 	%r118, %f1203;
	mul.wide.s32 	%rd107, %r118, 64;
	add.s64 	%rd96, %rd72, %rd107;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r100,%r101,%r102,%r103}, [%rd95];
	// end inline asm
	mov.b32 	%f2886, %r100;
	mov.b32 	%f2887, %r101;
	mov.b32 	%f2888, %r102;
	mov.b32 	%f2889, %r103;
	add.s64 	%rd99, %rd96, 16;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r104,%r105,%r106,%r107}, [%rd98];
	// end inline asm
	mov.b32 	%f2890, %r104;
	mov.b32 	%f2891, %r105;
	mov.b32 	%f2892, %r106;
	mov.b32 	%f2893, %r107;
	add.s64 	%rd102, %rd96, 32;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r108,%r109,%r110,%r111}, [%rd101];
	// end inline asm
	mov.b32 	%f2894, %r108;
	mov.b32 	%f2895, %r109;
	mov.b32 	%f2896, %r110;
	mov.b32 	%f2897, %r111;
	add.s64 	%rd105, %rd96, 48;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r112,%r113,%r114,%r115}, [%rd104];
	// end inline asm
	mov.b32 	%f2898, %r112;
	mov.b32 	%f2899, %r113;
	mov.b32 	%f2900, %r114;
	mov.b32 	%f2901, %r115;
	setp.leu.ftz.f32 	%p10, %f46, 0f00000000;
	@%p10 bra 	$L__BB0_15;

	mov.f32 	%f1204, 0f3F800000;
	sub.ftz.f32 	%f1205, %f1204, %f46;
	add.s64 	%rd109, %rd96, 64;
	// begin inline asm
	cvta.to.global.u64 %rd108, %rd109;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r119,%r120,%r121,%r122}, [%rd108];
	// end inline asm
	mov.b32 	%f1206, %r119;
	mov.b32 	%f1207, %r120;
	mov.b32 	%f1208, %r121;
	mov.b32 	%f1209, %r122;
	mul.ftz.f32 	%f1210, %f46, %f1206;
	mul.ftz.f32 	%f1211, %f46, %f1207;
	mul.ftz.f32 	%f1212, %f46, %f1208;
	mul.ftz.f32 	%f1213, %f46, %f1209;
	fma.rn.ftz.f32 	%f2886, %f1205, %f2886, %f1210;
	fma.rn.ftz.f32 	%f2887, %f1205, %f2887, %f1211;
	fma.rn.ftz.f32 	%f2888, %f1205, %f2888, %f1212;
	fma.rn.ftz.f32 	%f2889, %f1205, %f2889, %f1213;
	add.s64 	%rd112, %rd96, 80;
	// begin inline asm
	cvta.to.global.u64 %rd111, %rd112;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r123,%r124,%r125,%r126}, [%rd111];
	// end inline asm
	mov.b32 	%f1214, %r123;
	mov.b32 	%f1215, %r124;
	mov.b32 	%f1216, %r125;
	mov.b32 	%f1217, %r126;
	mul.ftz.f32 	%f1218, %f46, %f1214;
	mul.ftz.f32 	%f1219, %f46, %f1215;
	mul.ftz.f32 	%f1220, %f46, %f1216;
	mul.ftz.f32 	%f1221, %f46, %f1217;
	fma.rn.ftz.f32 	%f2890, %f1205, %f2890, %f1218;
	fma.rn.ftz.f32 	%f2891, %f1205, %f2891, %f1219;
	fma.rn.ftz.f32 	%f2892, %f1205, %f2892, %f1220;
	fma.rn.ftz.f32 	%f2893, %f1205, %f2893, %f1221;
	add.s64 	%rd115, %rd96, 96;
	// begin inline asm
	cvta.to.global.u64 %rd114, %rd115;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r127,%r128,%r129,%r130}, [%rd114];
	// end inline asm
	mov.b32 	%f1222, %r127;
	mov.b32 	%f1223, %r128;
	mov.b32 	%f1224, %r129;
	mov.b32 	%f1225, %r130;
	mul.ftz.f32 	%f1226, %f46, %f1222;
	mul.ftz.f32 	%f1227, %f46, %f1223;
	mul.ftz.f32 	%f1228, %f46, %f1224;
	mul.ftz.f32 	%f1229, %f46, %f1225;
	fma.rn.ftz.f32 	%f2894, %f1205, %f2894, %f1226;
	fma.rn.ftz.f32 	%f1230, %f1205, %f2895, %f1227;
	fma.rn.ftz.f32 	%f1231, %f1205, %f2896, %f1228;
	fma.rn.ftz.f32 	%f1232, %f1205, %f2897, %f1229;
	add.s64 	%rd118, %rd96, 112;
	// begin inline asm
	cvta.to.global.u64 %rd117, %rd118;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r131,%r132,%r133,%r134}, [%rd117];
	// end inline asm
	mov.b32 	%f1233, %r131;
	mov.b32 	%f1234, %r132;
	mov.b32 	%f1235, %r133;
	mov.b32 	%f1236, %r134;
	mul.ftz.f32 	%f1237, %f46, %f1233;
	mul.ftz.f32 	%f1238, %f46, %f1234;
	mul.ftz.f32 	%f1239, %f46, %f1235;
	mul.ftz.f32 	%f1240, %f46, %f1236;
	fma.rn.ftz.f32 	%f1241, %f1205, %f2898, %f1237;
	fma.rn.ftz.f32 	%f2899, %f1205, %f2899, %f1238;
	fma.rn.ftz.f32 	%f2900, %f1205, %f2900, %f1239;
	fma.rn.ftz.f32 	%f2901, %f1205, %f2901, %f1240;
	mul.ftz.f32 	%f1242, %f1231, %f1231;
	fma.rn.ftz.f32 	%f1243, %f1230, %f1230, %f1242;
	fma.rn.ftz.f32 	%f1244, %f1232, %f1232, %f1243;
	fma.rn.ftz.f32 	%f1245, %f1241, %f1241, %f1244;
	rsqrt.approx.ftz.f32 	%f1246, %f1245;
	mul.ftz.f32 	%f2895, %f1230, %f1246;
	mul.ftz.f32 	%f2896, %f1231, %f1246;
	mul.ftz.f32 	%f2897, %f1232, %f1246;
	mul.ftz.f32 	%f2898, %f1246, %f1241;

$L__BB0_15:
	mul.ftz.f32 	%f1247, %f2896, %f2896;
	fma.rn.ftz.f32 	%f1248, %f2895, %f2895, %f1247;
	fma.rn.ftz.f32 	%f1249, %f2897, %f2897, %f1248;
	fma.rn.ftz.f32 	%f1250, %f2898, %f2898, %f1249;
	rcp.approx.ftz.f32 	%f1251, %f1250;
	mul.ftz.f32 	%f1252, %f2895, %f1251;
	mul.ftz.f32 	%f1253, %f2896, %f1251;
	mul.ftz.f32 	%f1254, %f2897, %f1251;
	mul.ftz.f32 	%f1255, %f2898, %f1251;
	mul.ftz.f32 	%f1256, %f2895, %f1252;
	mul.ftz.f32 	%f1257, %f2896, %f1253;
	mul.ftz.f32 	%f1258, %f2897, %f1254;
	mul.ftz.f32 	%f1259, %f2895, %f1253;
	mul.ftz.f32 	%f1260, %f2897, %f1255;
	mul.ftz.f32 	%f1261, %f2895, %f1254;
	mul.ftz.f32 	%f1262, %f2896, %f1255;
	mul.ftz.f32 	%f1263, %f2896, %f1254;
	mul.ftz.f32 	%f1264, %f2895, %f1255;
	sub.ftz.f32 	%f1265, %f1256, %f1257;
	sub.ftz.f32 	%f1266, %f1265, %f1258;
	fma.rn.ftz.f32 	%f1267, %f2898, %f1255, %f1266;
	sub.ftz.f32 	%f1268, %f1259, %f1260;
	add.ftz.f32 	%f1269, %f1268, %f1268;
	add.ftz.f32 	%f1270, %f1261, %f1262;
	add.ftz.f32 	%f1271, %f1270, %f1270;
	add.ftz.f32 	%f1272, %f1259, %f1260;
	add.ftz.f32 	%f1273, %f1272, %f1272;
	sub.ftz.f32 	%f1274, %f1257, %f1256;
	sub.ftz.f32 	%f1275, %f1274, %f1258;
	fma.rn.ftz.f32 	%f1276, %f2898, %f1255, %f1275;
	sub.ftz.f32 	%f1277, %f1263, %f1264;
	add.ftz.f32 	%f1278, %f1277, %f1277;
	sub.ftz.f32 	%f1279, %f1261, %f1262;
	add.ftz.f32 	%f1280, %f1279, %f1279;
	add.ftz.f32 	%f1281, %f1263, %f1264;
	add.ftz.f32 	%f1282, %f1281, %f1281;
	neg.ftz.f32 	%f1283, %f1256;
	sub.ftz.f32 	%f1284, %f1283, %f1257;
	add.ftz.f32 	%f1285, %f1258, %f1284;
	fma.rn.ftz.f32 	%f1286, %f2898, %f1255, %f1285;
	mul.ftz.f32 	%f1287, %f2889, %f1267;
	fma.rn.ftz.f32 	%f1288, %f2892, %f1269, %f1287;
	fma.rn.ftz.f32 	%f1289, %f2894, %f1271, %f1288;
	add.ftz.f32 	%f2902, %f2899, %f1289;
	mul.ftz.f32 	%f1290, %f2892, %f1276;
	fma.rn.ftz.f32 	%f1291, %f2889, %f1273, %f1290;
	fma.rn.ftz.f32 	%f1292, %f2894, %f1278, %f1291;
	add.ftz.f32 	%f2906, %f2900, %f1292;
	mul.ftz.f32 	%f1293, %f2892, %f1282;
	fma.rn.ftz.f32 	%f1294, %f2889, %f1280, %f1293;
	fma.rn.ftz.f32 	%f1295, %f2894, %f1286, %f1294;
	add.ftz.f32 	%f2910, %f2901, %f1295;
	mul.ftz.f32 	%f1296, %f2888, %f1267;
	fma.rn.ftz.f32 	%f1297, %f2891, %f1269, %f1296;
	fma.rn.ftz.f32 	%f2903, %f2893, %f1271, %f1297;
	mul.ftz.f32 	%f1298, %f2891, %f1276;
	fma.rn.ftz.f32 	%f1299, %f2888, %f1273, %f1298;
	fma.rn.ftz.f32 	%f2907, %f2893, %f1278, %f1299;
	mul.ftz.f32 	%f1300, %f2891, %f1282;
	fma.rn.ftz.f32 	%f1301, %f2888, %f1280, %f1300;
	fma.rn.ftz.f32 	%f2911, %f2893, %f1286, %f1301;
	mul.ftz.f32 	%f1302, %f2887, %f1267;
	fma.rn.ftz.f32 	%f2904, %f2890, %f1269, %f1302;
	mul.ftz.f32 	%f1303, %f2890, %f1276;
	fma.rn.ftz.f32 	%f2908, %f2887, %f1273, %f1303;
	mul.ftz.f32 	%f1304, %f2890, %f1282;
	fma.rn.ftz.f32 	%f2912, %f2887, %f1280, %f1304;
	mul.ftz.f32 	%f2905, %f2886, %f1267;
	mul.ftz.f32 	%f2909, %f2886, %f1273;
	mul.ftz.f32 	%f2913, %f2886, %f1280;

$L__BB0_18:
	mul.ftz.f32 	%f1342, %f2907, %f2912;
	mul.ftz.f32 	%f1343, %f2908, %f2911;
	sub.ftz.f32 	%f1344, %f1343, %f1342;
	mul.ftz.f32 	%f1345, %f2905, %f1344;
	mul.ftz.f32 	%f1346, %f2907, %f2913;
	mul.ftz.f32 	%f1347, %f2909, %f2911;
	sub.ftz.f32 	%f1348, %f1347, %f1346;
	mul.ftz.f32 	%f1349, %f2904, %f1348;
	sub.ftz.f32 	%f1350, %f1345, %f1349;
	mul.ftz.f32 	%f1351, %f2908, %f2913;
	mul.ftz.f32 	%f1352, %f2909, %f2912;
	sub.ftz.f32 	%f1353, %f1352, %f1351;
	fma.rn.ftz.f32 	%f1354, %f2903, %f1353, %f1350;
	rcp.approx.ftz.f32 	%f1355, %f1354;
	mul.ftz.f32 	%f2917, %f1344, %f1355;
	mul.ftz.f32 	%f1356, %f2904, %f2911;
	mul.ftz.f32 	%f1357, %f2903, %f2912;
	sub.ftz.f32 	%f1358, %f1357, %f1356;
	mul.ftz.f32 	%f2916, %f1358, %f1355;
	mul.ftz.f32 	%f1359, %f2903, %f2908;
	mul.ftz.f32 	%f1360, %f2904, %f2907;
	sub.ftz.f32 	%f1361, %f1360, %f1359;
	mul.ftz.f32 	%f2915, %f1361, %f1355;
	sub.ftz.f32 	%f1362, %f1346, %f1347;
	mul.ftz.f32 	%f2921, %f1362, %f1355;
	mul.ftz.f32 	%f1363, %f2903, %f2913;
	mul.ftz.f32 	%f1364, %f2905, %f2911;
	sub.ftz.f32 	%f1365, %f1364, %f1363;
	mul.ftz.f32 	%f2920, %f1365, %f1355;
	mul.ftz.f32 	%f1366, %f2905, %f2907;
	mul.ftz.f32 	%f1367, %f2903, %f2909;
	sub.ftz.f32 	%f1368, %f1367, %f1366;
	mul.ftz.f32 	%f2919, %f1368, %f1355;
	mul.ftz.f32 	%f2925, %f1353, %f1355;
	mul.ftz.f32 	%f1369, %f2905, %f2912;
	mul.ftz.f32 	%f1370, %f2904, %f2913;
	sub.ftz.f32 	%f1371, %f1370, %f1369;
	mul.ftz.f32 	%f2924, %f1371, %f1355;
	mul.ftz.f32 	%f1372, %f2904, %f2909;
	mul.ftz.f32 	%f1373, %f2905, %f2908;
	sub.ftz.f32 	%f1374, %f1373, %f1372;
	mul.ftz.f32 	%f2923, %f1374, %f1355;
	mul.ftz.f32 	%f1375, %f2902, %f2917;
	neg.ftz.f32 	%f1376, %f1375;
	mul.ftz.f32 	%f1377, %f2906, %f2916;
	sub.ftz.f32 	%f1378, %f1376, %f1377;
	mul.ftz.f32 	%f1379, %f2910, %f2915;
	sub.ftz.f32 	%f2914, %f1378, %f1379;
	mul.ftz.f32 	%f1380, %f2902, %f2921;
	neg.ftz.f32 	%f1381, %f1380;
	mul.ftz.f32 	%f1382, %f2906, %f2920;
	sub.ftz.f32 	%f1383, %f1381, %f1382;
	mul.ftz.f32 	%f1384, %f2910, %f2919;
	sub.ftz.f32 	%f2918, %f1383, %f1384;
	mul.ftz.f32 	%f1385, %f2902, %f2925;
	neg.ftz.f32 	%f1386, %f1385;
	mul.ftz.f32 	%f1387, %f2906, %f2924;
	sub.ftz.f32 	%f1388, %f1386, %f1387;
	mul.ftz.f32 	%f1389, %f2910, %f2923;
	sub.ftz.f32 	%f2922, %f1388, %f1389;
	bra.uni 	$L__BB0_19;

$L__BB0_10:
	// begin inline asm
	call (%rd776), _optix_get_instance_inverse_transform_from_handle, (%rd48);
	// end inline asm

$L__BB0_11:
	// begin inline asm
	cvta.to.global.u64 %rd54, %rd776;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r48,%r49,%r50,%r51}, [%rd54];
	// end inline asm
	mov.b32 	%f2917, %r48;
	mov.b32 	%f2916, %r49;
	mov.b32 	%f2915, %r50;
	mov.b32 	%f2914, %r51;
	add.s64 	%rd58, %rd776, 16;
	// begin inline asm
	cvta.to.global.u64 %rd57, %rd58;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r52,%r53,%r54,%r55}, [%rd57];
	// end inline asm
	mov.b32 	%f2921, %r52;
	mov.b32 	%f2920, %r53;
	mov.b32 	%f2919, %r54;
	mov.b32 	%f2918, %r55;
	add.s64 	%rd61, %rd776, 32;
	// begin inline asm
	cvta.to.global.u64 %rd60, %rd61;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r56,%r57,%r58,%r59}, [%rd60];
	// end inline asm
	mov.b32 	%f2925, %r56;
	mov.b32 	%f2924, %r57;
	mov.b32 	%f2923, %r58;
	mov.b32 	%f2922, %r59;

$L__BB0_19:
	setp.eq.s32 	%p12, %r991, 0;
	@%p12 bra 	$L__BB0_21;

	mul.ftz.f32 	%f1390, %f2882, %f2917;
	fma.rn.ftz.f32 	%f1391, %f2878, %f2916, %f1390;
	fma.rn.ftz.f32 	%f168, %f2874, %f2915, %f1391;
	mul.ftz.f32 	%f1392, %f2883, %f2917;
	fma.rn.ftz.f32 	%f1393, %f2879, %f2916, %f1392;
	fma.rn.ftz.f32 	%f169, %f2875, %f2915, %f1393;
	mul.ftz.f32 	%f1394, %f2884, %f2917;
	fma.rn.ftz.f32 	%f1395, %f2880, %f2916, %f1394;
	fma.rn.ftz.f32 	%f170, %f2876, %f2915, %f1395;
	mul.ftz.f32 	%f1396, %f2885, %f2917;
	fma.rn.ftz.f32 	%f1397, %f2881, %f2916, %f1396;
	fma.rn.ftz.f32 	%f1398, %f2877, %f2915, %f1397;
	add.ftz.f32 	%f2914, %f2914, %f1398;
	mul.ftz.f32 	%f1399, %f2882, %f2921;
	fma.rn.ftz.f32 	%f1400, %f2878, %f2920, %f1399;
	fma.rn.ftz.f32 	%f172, %f2874, %f2919, %f1400;
	mul.ftz.f32 	%f1401, %f2883, %f2921;
	fma.rn.ftz.f32 	%f1402, %f2879, %f2920, %f1401;
	fma.rn.ftz.f32 	%f173, %f2875, %f2919, %f1402;
	mul.ftz.f32 	%f1403, %f2884, %f2921;
	fma.rn.ftz.f32 	%f1404, %f2880, %f2920, %f1403;
	fma.rn.ftz.f32 	%f174, %f2876, %f2919, %f1404;
	mul.ftz.f32 	%f1405, %f2885, %f2921;
	fma.rn.ftz.f32 	%f1406, %f2881, %f2920, %f1405;
	fma.rn.ftz.f32 	%f1407, %f2877, %f2919, %f1406;
	add.ftz.f32 	%f2918, %f2918, %f1407;
	mul.ftz.f32 	%f1408, %f2882, %f2925;
	fma.rn.ftz.f32 	%f1409, %f2878, %f2924, %f1408;
	fma.rn.ftz.f32 	%f176, %f2874, %f2923, %f1409;
	mul.ftz.f32 	%f1410, %f2883, %f2925;
	fma.rn.ftz.f32 	%f1411, %f2879, %f2924, %f1410;
	fma.rn.ftz.f32 	%f177, %f2875, %f2923, %f1411;
	mul.ftz.f32 	%f1412, %f2884, %f2925;
	fma.rn.ftz.f32 	%f1413, %f2880, %f2924, %f1412;
	fma.rn.ftz.f32 	%f178, %f2876, %f2923, %f1413;
	mul.ftz.f32 	%f1414, %f2885, %f2925;
	fma.rn.ftz.f32 	%f1415, %f2881, %f2924, %f1414;
	fma.rn.ftz.f32 	%f1416, %f2877, %f2923, %f1415;
	add.ftz.f32 	%f2922, %f2922, %f1416;
	mov.f32 	%f2915, %f170;
	mov.f32 	%f2916, %f169;
	mov.f32 	%f2917, %f168;
	mov.f32 	%f2919, %f174;
	mov.f32 	%f2920, %f173;
	mov.f32 	%f2921, %f172;
	mov.f32 	%f2923, %f178;
	mov.f32 	%f2924, %f177;
	mov.f32 	%f2925, %f176;

$L__BB0_21:
	add.s32 	%r991, %r991, 1;
	setp.lt.u32 	%p13, %r991, %r43;
	mov.f32 	%f2874, %f2925;
	mov.f32 	%f2875, %f2924;
	mov.f32 	%f2876, %f2923;
	mov.f32 	%f2877, %f2922;
	mov.f32 	%f2878, %f2921;
	mov.f32 	%f2879, %f2920;
	mov.f32 	%f2880, %f2919;
	mov.f32 	%f2881, %f2918;
	mov.f32 	%f2882, %f2917;
	mov.f32 	%f2883, %f2916;
	mov.f32 	%f2884, %f2915;
	mov.f32 	%f2885, %f2914;
	@%p13 bra 	$L__BB0_6;

$L__BB0_22:
	mul.ftz.f32 	%f1417, %f1, %f2917;
	fma.rn.ftz.f32 	%f1418, %f2, %f2916, %f1417;
	fma.rn.ftz.f32 	%f1419, %f3, %f2915, %f1418;
	mul.ftz.f32 	%f1420, %f1, %f2921;
	fma.rn.ftz.f32 	%f1421, %f2, %f2920, %f1420;
	fma.rn.ftz.f32 	%f1422, %f3, %f2919, %f1421;
	mul.ftz.f32 	%f1423, %f1, %f2925;
	fma.rn.ftz.f32 	%f1424, %f2, %f2924, %f1423;
	fma.rn.ftz.f32 	%f1425, %f3, %f2923, %f1424;
	add.ftz.f32 	%f212, %f2922, %f1425;
	add.ftz.f32 	%f211, %f2918, %f1422;
	add.ftz.f32 	%f210, %f2914, %f1419;
	bra.uni 	$L__BB0_24;

$L__BB0_97:
	// begin inline asm
	call (%rd526), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r655), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f2259, 0f00000000;
	// begin inline asm
	call (%f3290, %f3289, %f3288, %f2250,  %f2251, %f2252, %f2253, %f2254,  %f3293, %f3292, %f3291, %f2258), _optix_get_quadratic_bspline_vertex_data, (%rd526, %r998, %r655, %f2259);
	// end inline asm
	mul.ftz.f32 	%f2260, %f3290, 0f3F000000;
	mul.ftz.f32 	%f2261, %f3289, 0f3F000000;
	mul.ftz.f32 	%f2262, %f3288, 0f3F000000;
	mul.ftz.f32 	%f2263, %f2250, 0f3F000000;
	fma.rn.ftz.f32 	%f756, %f2251, 0f3F000000, %f2260;
	fma.rn.ftz.f32 	%f757, %f2252, 0f3F000000, %f2261;
	fma.rn.ftz.f32 	%f758, %f2253, 0f3F000000, %f2262;
	fma.rn.ftz.f32 	%f759, %f2254, 0f3F000000, %f2263;
	sub.ftz.f32 	%f760, %f2251, %f3290;
	sub.ftz.f32 	%f761, %f2252, %f3289;
	sub.ftz.f32 	%f762, %f2253, %f3288;
	sub.ftz.f32 	%f763, %f2254, %f2250;
	sub.ftz.f32 	%f2264, %f2260, %f2251;
	sub.ftz.f32 	%f2265, %f2261, %f2252;
	sub.ftz.f32 	%f2266, %f2262, %f2253;
	sub.ftz.f32 	%f2267, %f2263, %f2254;
	fma.rn.ftz.f32 	%f767, %f3293, 0f3F000000, %f2264;
	fma.rn.ftz.f32 	%f768, %f3292, 0f3F000000, %f2265;
	fma.rn.ftz.f32 	%f769, %f3291, 0f3F000000, %f2266;
	fma.rn.ftz.f32 	%f770, %f2258, 0f3F000000, %f2267;
	// begin inline asm
	call (%r658), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p48, %r658, 0;
	@%p48 bra 	$L__BB0_117;

	// begin inline asm
	call (%r659), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2268), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p49, %r659, 0;
	@%p49 bra 	$L__BB0_116;

	mov.u32 	%r995, 0;

$L__BB0_100:
	.pragma "nounroll";
	// begin inline asm
	call (%rd528), _optix_get_transform_list_handle, (%r995);
	// end inline asm
	// begin inline asm
	call (%r662), _optix_get_transform_type_from_handle, (%rd528);
	// end inline asm
	or.b32  	%r663, %r662, 1;
	setp.eq.s32 	%p50, %r663, 3;
	@%p50 bra 	$L__BB0_106;
	bra.uni 	$L__BB0_101;

$L__BB0_106:
	setp.eq.s32 	%p53, %r662, 2;
	@%p53 bra 	$L__BB0_110;
	bra.uni 	$L__BB0_107;

$L__BB0_110:
	// begin inline asm
	call (%rd600), _optix_get_matrix_motion_transform_from_handle, (%rd528);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd602, %rd600;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r751,%r752,%r753,%r754}, [%rd602];
	// end inline asm
	add.s64 	%rd606, %rd600, 16;
	// begin inline asm
	cvta.to.global.u64 %rd605, %rd606;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r755,%r756,%r757,%r758}, [%rd605];
	// end inline asm
	add.s64 	%rd609, %rd600, 32;
	// begin inline asm
	cvta.to.global.u64 %rd608, %rd609;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r759,%r760,%r761,%r762}, [%rd608];
	// end inline asm
	add.s64 	%rd612, %rd600, 48;
	// begin inline asm
	cvta.to.global.u64 %rd611, %rd612;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r763,%r764,%r765,%r766}, [%rd611];
	// end inline asm
	add.s64 	%rd615, %rd600, 64;
	// begin inline asm
	cvta.to.global.u64 %rd614, %rd615;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r767,%r768,%r769,%r770}, [%rd614];
	// end inline asm
	add.s64 	%rd618, %rd600, 80;
	// begin inline asm
	cvta.to.global.u64 %rd617, %rd618;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r771,%r772,%r773,%r774}, [%rd617];
	// end inline asm
	add.s64 	%rd621, %rd600, 96;
	// begin inline asm
	cvta.to.global.u64 %rd620, %rd621;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r775,%r776,%r777,%r778}, [%rd620];
	// end inline asm
	add.s64 	%rd624, %rd600, 112;
	// begin inline asm
	cvta.to.global.u64 %rd623, %rd624;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r779,%r780,%r781,%r782}, [%rd623];
	// end inline asm
	mov.b32 	%f2395, %r754;
	mov.b32 	%f2396, %r755;
	and.b32  	%r795, %r753, 65535;
	add.s32 	%r796, %r795, -1;
	cvt.rn.f32.s32 	%f2397, %r796;
	sub.ftz.f32 	%f2398, %f2268, %f2395;
	mul.ftz.f32 	%f2399, %f2398, %f2397;
	sub.ftz.f32 	%f2400, %f2396, %f2395;
	div.approx.ftz.f32 	%f2401, %f2399, %f2400;
	min.ftz.f32 	%f2402, %f2397, %f2401;
	mov.f32 	%f2403, 0f00000000;
	max.ftz.f32 	%f2404, %f2403, %f2402;
	cvt.rmi.ftz.f32.f32 	%f2405, %f2404;
	sub.ftz.f32 	%f857, %f2404, %f2405;
	cvt.rzi.ftz.s32.f32 	%r797, %f2405;
	cvt.s64.s32 	%rd36, %r797;
	mul.wide.s32 	%rd635, %r797, 48;
	add.s64 	%rd627, %rd609, %rd635;
	// begin inline asm
	cvta.to.global.u64 %rd626, %rd627;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r783,%r784,%r785,%r786}, [%rd626];
	// end inline asm
	mov.b32 	%f3184, %r783;
	mov.b32 	%f3185, %r784;
	mov.b32 	%f3186, %r785;
	mov.b32 	%f3187, %r786;
	add.s64 	%rd630, %rd627, 16;
	// begin inline asm
	cvta.to.global.u64 %rd629, %rd630;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r787,%r788,%r789,%r790}, [%rd629];
	// end inline asm
	mov.b32 	%f3180, %r787;
	mov.b32 	%f3181, %r788;
	mov.b32 	%f3182, %r789;
	mov.b32 	%f3183, %r790;
	add.s64 	%rd633, %rd627, 32;
	// begin inline asm
	cvta.to.global.u64 %rd632, %rd633;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r791,%r792,%r793,%r794}, [%rd632];
	// end inline asm
	mov.b32 	%f3176, %r791;
	mov.b32 	%f3177, %r792;
	mov.b32 	%f3178, %r793;
	mov.b32 	%f3179, %r794;
	setp.leu.ftz.f32 	%p55, %f857, 0f00000000;
	@%p55 bra 	$L__BB0_112;

	mov.f32 	%f2406, 0f3F800000;
	sub.ftz.f32 	%f2407, %f2406, %f857;
	mul.lo.s64 	%rd645, %rd36, 48;
	add.s64 	%rd646, %rd600, %rd645;
	add.s64 	%rd637, %rd646, 80;
	// begin inline asm
	cvta.to.global.u64 %rd636, %rd637;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r798,%r799,%r800,%r801}, [%rd636];
	// end inline asm
	mov.b32 	%f2408, %r798;
	mov.b32 	%f2409, %r799;
	mov.b32 	%f2410, %r800;
	mov.b32 	%f2411, %r801;
	mul.ftz.f32 	%f2412, %f857, %f2408;
	mul.ftz.f32 	%f2413, %f857, %f2409;
	mul.ftz.f32 	%f2414, %f857, %f2410;
	mul.ftz.f32 	%f2415, %f857, %f2411;
	fma.rn.ftz.f32 	%f3184, %f2407, %f3184, %f2412;
	fma.rn.ftz.f32 	%f3185, %f2407, %f3185, %f2413;
	fma.rn.ftz.f32 	%f3186, %f2407, %f3186, %f2414;
	fma.rn.ftz.f32 	%f3187, %f2407, %f3187, %f2415;
	add.s64 	%rd640, %rd646, 96;
	// begin inline asm
	cvta.to.global.u64 %rd639, %rd640;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r802,%r803,%r804,%r805}, [%rd639];
	// end inline asm
	mov.b32 	%f2416, %r802;
	mov.b32 	%f2417, %r803;
	mov.b32 	%f2418, %r804;
	mov.b32 	%f2419, %r805;
	mul.ftz.f32 	%f2420, %f857, %f2416;
	mul.ftz.f32 	%f2421, %f857, %f2417;
	mul.ftz.f32 	%f2422, %f857, %f2418;
	mul.ftz.f32 	%f2423, %f857, %f2419;
	fma.rn.ftz.f32 	%f3180, %f2407, %f3180, %f2420;
	fma.rn.ftz.f32 	%f3181, %f2407, %f3181, %f2421;
	fma.rn.ftz.f32 	%f3182, %f2407, %f3182, %f2422;
	fma.rn.ftz.f32 	%f3183, %f2407, %f3183, %f2423;
	add.s64 	%rd643, %rd646, 112;
	// begin inline asm
	cvta.to.global.u64 %rd642, %rd643;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r806,%r807,%r808,%r809}, [%rd642];
	// end inline asm
	mov.b32 	%f2424, %r806;
	mov.b32 	%f2425, %r807;
	mov.b32 	%f2426, %r808;
	mov.b32 	%f2427, %r809;
	mul.ftz.f32 	%f2428, %f857, %f2424;
	mul.ftz.f32 	%f2429, %f857, %f2425;
	mul.ftz.f32 	%f2430, %f857, %f2426;
	mul.ftz.f32 	%f2431, %f857, %f2427;
	fma.rn.ftz.f32 	%f3176, %f2407, %f3176, %f2428;
	fma.rn.ftz.f32 	%f3177, %f2407, %f3177, %f2429;
	fma.rn.ftz.f32 	%f3178, %f2407, %f3178, %f2430;
	fma.rn.ftz.f32 	%f3179, %f2407, %f3179, %f2431;
	bra.uni 	$L__BB0_112;

$L__BB0_101:
	mov.f32 	%f3190, 0f3F800000;
	setp.eq.s32 	%p51, %r662, 4;
	@%p51 bra 	$L__BB0_104;

	setp.ne.s32 	%p52, %r662, 1;
	mov.f32 	%f3188, %f2259;
	mov.f32 	%f3189, %f2259;
	mov.f32 	%f3191, %f2259;
	mov.f32 	%f3192, %f2259;
	mov.f32 	%f3193, %f3190;
	mov.f32 	%f3194, %f2259;
	mov.f32 	%f3195, %f2259;
	mov.f32 	%f3196, %f3190;
	mov.f32 	%f3197, %f2259;
	mov.f32 	%f3198, %f2259;
	mov.f32 	%f3199, %f2259;
	@%p52 bra 	$L__BB0_113;

	// begin inline asm
	call (%rd530), _optix_get_static_transform_from_handle, (%rd528);
	// end inline asm
	add.s64 	%rd780, %rd530, 64;
	bra.uni 	$L__BB0_105;

$L__BB0_107:
	// begin inline asm
	call (%rd543), _optix_get_srt_motion_transform_from_handle, (%rd528);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd545, %rd543;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r676,%r677,%r678,%r679}, [%rd545];
	// end inline asm
	add.s64 	%rd549, %rd543, 16;
	// begin inline asm
	cvta.to.global.u64 %rd548, %rd549;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r680,%r681,%r682,%r683}, [%rd548];
	// end inline asm
	add.s64 	%rd552, %rd543, 32;
	// begin inline asm
	cvta.to.global.u64 %rd551, %rd552;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r684,%r685,%r686,%r687}, [%rd551];
	// end inline asm
	add.s64 	%rd555, %rd543, 48;
	// begin inline asm
	cvta.to.global.u64 %rd554, %rd555;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r688,%r689,%r690,%r691}, [%rd554];
	// end inline asm
	add.s64 	%rd558, %rd543, 64;
	// begin inline asm
	cvta.to.global.u64 %rd557, %rd558;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r692,%r693,%r694,%r695}, [%rd557];
	// end inline asm
	add.s64 	%rd561, %rd543, 80;
	// begin inline asm
	cvta.to.global.u64 %rd560, %rd561;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r696,%r697,%r698,%r699}, [%rd560];
	// end inline asm
	add.s64 	%rd564, %rd543, 96;
	// begin inline asm
	cvta.to.global.u64 %rd563, %rd564;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r700,%r701,%r702,%r703}, [%rd563];
	// end inline asm
	add.s64 	%rd567, %rd543, 112;
	// begin inline asm
	cvta.to.global.u64 %rd566, %rd567;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r704,%r705,%r706,%r707}, [%rd566];
	// end inline asm
	add.s64 	%rd570, %rd543, 128;
	// begin inline asm
	cvta.to.global.u64 %rd569, %rd570;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r708,%r709,%r710,%r711}, [%rd569];
	// end inline asm
	add.s64 	%rd573, %rd543, 144;
	// begin inline asm
	cvta.to.global.u64 %rd572, %rd573;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r712,%r713,%r714,%r715}, [%rd572];
	// end inline asm
	mov.b32 	%f2283, %r679;
	mov.b32 	%f2284, %r680;
	and.b32  	%r732, %r678, 65535;
	add.s32 	%r733, %r732, -1;
	cvt.rn.f32.s32 	%f2285, %r733;
	sub.ftz.f32 	%f2286, %f2268, %f2283;
	mul.ftz.f32 	%f2287, %f2286, %f2285;
	sub.ftz.f32 	%f2288, %f2284, %f2283;
	div.approx.ftz.f32 	%f2289, %f2287, %f2288;
	min.ftz.f32 	%f2290, %f2285, %f2289;
	mov.f32 	%f2291, 0f00000000;
	max.ftz.f32 	%f2292, %f2291, %f2290;
	cvt.rmi.ftz.f32.f32 	%f2293, %f2292;
	sub.ftz.f32 	%f796, %f2292, %f2293;
	cvt.rzi.ftz.s32.f32 	%r734, %f2293;
	mul.wide.s32 	%rd587, %r734, 64;
	add.s64 	%rd576, %rd552, %rd587;
	// begin inline asm
	cvta.to.global.u64 %rd575, %rd576;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r716,%r717,%r718,%r719}, [%rd575];
	// end inline asm
	mov.b32 	%f3160, %r716;
	mov.b32 	%f3161, %r717;
	mov.b32 	%f3162, %r718;
	mov.b32 	%f3163, %r719;
	add.s64 	%rd579, %rd576, 16;
	// begin inline asm
	cvta.to.global.u64 %rd578, %rd579;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r720,%r721,%r722,%r723}, [%rd578];
	// end inline asm
	mov.b32 	%f3164, %r720;
	mov.b32 	%f3165, %r721;
	mov.b32 	%f3166, %r722;
	mov.b32 	%f3167, %r723;
	add.s64 	%rd582, %rd576, 32;
	// begin inline asm
	cvta.to.global.u64 %rd581, %rd582;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r724,%r725,%r726,%r727}, [%rd581];
	// end inline asm
	mov.b32 	%f3168, %r724;
	mov.b32 	%f3169, %r725;
	mov.b32 	%f3170, %r726;
	mov.b32 	%f3171, %r727;
	add.s64 	%rd585, %rd576, 48;
	// begin inline asm
	cvta.to.global.u64 %rd584, %rd585;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r728,%r729,%r730,%r731}, [%rd584];
	// end inline asm
	mov.b32 	%f3172, %r728;
	mov.b32 	%f3173, %r729;
	mov.b32 	%f3174, %r730;
	mov.b32 	%f3175, %r731;
	setp.leu.ftz.f32 	%p54, %f796, 0f00000000;
	@%p54 bra 	$L__BB0_109;

	mov.f32 	%f2294, 0f3F800000;
	sub.ftz.f32 	%f2295, %f2294, %f796;
	add.s64 	%rd589, %rd576, 64;
	// begin inline asm
	cvta.to.global.u64 %rd588, %rd589;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r735,%r736,%r737,%r738}, [%rd588];
	// end inline asm
	mov.b32 	%f2296, %r735;
	mov.b32 	%f2297, %r736;
	mov.b32 	%f2298, %r737;
	mov.b32 	%f2299, %r738;
	mul.ftz.f32 	%f2300, %f796, %f2296;
	mul.ftz.f32 	%f2301, %f796, %f2297;
	mul.ftz.f32 	%f2302, %f796, %f2298;
	mul.ftz.f32 	%f2303, %f796, %f2299;
	fma.rn.ftz.f32 	%f3160, %f2295, %f3160, %f2300;
	fma.rn.ftz.f32 	%f3161, %f2295, %f3161, %f2301;
	fma.rn.ftz.f32 	%f3162, %f2295, %f3162, %f2302;
	fma.rn.ftz.f32 	%f3163, %f2295, %f3163, %f2303;
	add.s64 	%rd592, %rd576, 80;
	// begin inline asm
	cvta.to.global.u64 %rd591, %rd592;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r739,%r740,%r741,%r742}, [%rd591];
	// end inline asm
	mov.b32 	%f2304, %r739;
	mov.b32 	%f2305, %r740;
	mov.b32 	%f2306, %r741;
	mov.b32 	%f2307, %r742;
	mul.ftz.f32 	%f2308, %f796, %f2304;
	mul.ftz.f32 	%f2309, %f796, %f2305;
	mul.ftz.f32 	%f2310, %f796, %f2306;
	mul.ftz.f32 	%f2311, %f796, %f2307;
	fma.rn.ftz.f32 	%f3164, %f2295, %f3164, %f2308;
	fma.rn.ftz.f32 	%f3165, %f2295, %f3165, %f2309;
	fma.rn.ftz.f32 	%f3166, %f2295, %f3166, %f2310;
	fma.rn.ftz.f32 	%f3167, %f2295, %f3167, %f2311;
	add.s64 	%rd595, %rd576, 96;
	// begin inline asm
	cvta.to.global.u64 %rd594, %rd595;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r743,%r744,%r745,%r746}, [%rd594];
	// end inline asm
	mov.b32 	%f2312, %r743;
	mov.b32 	%f2313, %r744;
	mov.b32 	%f2314, %r745;
	mov.b32 	%f2315, %r746;
	mul.ftz.f32 	%f2316, %f796, %f2312;
	mul.ftz.f32 	%f2317, %f796, %f2313;
	mul.ftz.f32 	%f2318, %f796, %f2314;
	mul.ftz.f32 	%f2319, %f796, %f2315;
	fma.rn.ftz.f32 	%f3168, %f2295, %f3168, %f2316;
	fma.rn.ftz.f32 	%f2320, %f2295, %f3169, %f2317;
	fma.rn.ftz.f32 	%f2321, %f2295, %f3170, %f2318;
	fma.rn.ftz.f32 	%f2322, %f2295, %f3171, %f2319;
	add.s64 	%rd598, %rd576, 112;
	// begin inline asm
	cvta.to.global.u64 %rd597, %rd598;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r747,%r748,%r749,%r750}, [%rd597];
	// end inline asm
	mov.b32 	%f2323, %r747;
	mov.b32 	%f2324, %r748;
	mov.b32 	%f2325, %r749;
	mov.b32 	%f2326, %r750;
	mul.ftz.f32 	%f2327, %f796, %f2323;
	mul.ftz.f32 	%f2328, %f796, %f2324;
	mul.ftz.f32 	%f2329, %f796, %f2325;
	mul.ftz.f32 	%f2330, %f796, %f2326;
	fma.rn.ftz.f32 	%f2331, %f2295, %f3172, %f2327;
	fma.rn.ftz.f32 	%f3173, %f2295, %f3173, %f2328;
	fma.rn.ftz.f32 	%f3174, %f2295, %f3174, %f2329;
	fma.rn.ftz.f32 	%f3175, %f2295, %f3175, %f2330;
	mul.ftz.f32 	%f2332, %f2321, %f2321;
	fma.rn.ftz.f32 	%f2333, %f2320, %f2320, %f2332;
	fma.rn.ftz.f32 	%f2334, %f2322, %f2322, %f2333;
	fma.rn.ftz.f32 	%f2335, %f2331, %f2331, %f2334;
	rsqrt.approx.ftz.f32 	%f2336, %f2335;
	mul.ftz.f32 	%f3169, %f2320, %f2336;
	mul.ftz.f32 	%f3170, %f2321, %f2336;
	mul.ftz.f32 	%f3171, %f2322, %f2336;
	mul.ftz.f32 	%f3172, %f2336, %f2331;

$L__BB0_109:
	mul.ftz.f32 	%f2337, %f3170, %f3170;
	fma.rn.ftz.f32 	%f2338, %f3169, %f3169, %f2337;
	fma.rn.ftz.f32 	%f2339, %f3171, %f3171, %f2338;
	fma.rn.ftz.f32 	%f2340, %f3172, %f3172, %f2339;
	rcp.approx.ftz.f32 	%f2341, %f2340;
	mul.ftz.f32 	%f2342, %f3169, %f2341;
	mul.ftz.f32 	%f2343, %f3170, %f2341;
	mul.ftz.f32 	%f2344, %f3171, %f2341;
	mul.ftz.f32 	%f2345, %f3172, %f2341;
	mul.ftz.f32 	%f2346, %f3169, %f2342;
	mul.ftz.f32 	%f2347, %f3170, %f2343;
	mul.ftz.f32 	%f2348, %f3171, %f2344;
	mul.ftz.f32 	%f2349, %f3169, %f2343;
	mul.ftz.f32 	%f2350, %f3171, %f2345;
	mul.ftz.f32 	%f2351, %f3169, %f2344;
	mul.ftz.f32 	%f2352, %f3170, %f2345;
	mul.ftz.f32 	%f2353, %f3170, %f2344;
	mul.ftz.f32 	%f2354, %f3169, %f2345;
	sub.ftz.f32 	%f2355, %f2346, %f2347;
	sub.ftz.f32 	%f2356, %f2355, %f2348;
	fma.rn.ftz.f32 	%f2357, %f3172, %f2345, %f2356;
	sub.ftz.f32 	%f2358, %f2349, %f2350;
	add.ftz.f32 	%f2359, %f2358, %f2358;
	add.ftz.f32 	%f2360, %f2351, %f2352;
	add.ftz.f32 	%f2361, %f2360, %f2360;
	add.ftz.f32 	%f2362, %f2349, %f2350;
	add.ftz.f32 	%f2363, %f2362, %f2362;
	sub.ftz.f32 	%f2364, %f2347, %f2346;
	sub.ftz.f32 	%f2365, %f2364, %f2348;
	fma.rn.ftz.f32 	%f2366, %f3172, %f2345, %f2365;
	sub.ftz.f32 	%f2367, %f2353, %f2354;
	add.ftz.f32 	%f2368, %f2367, %f2367;
	sub.ftz.f32 	%f2369, %f2351, %f2352;
	add.ftz.f32 	%f2370, %f2369, %f2369;
	add.ftz.f32 	%f2371, %f2353, %f2354;
	add.ftz.f32 	%f2372, %f2371, %f2371;
	neg.ftz.f32 	%f2373, %f2346;
	sub.ftz.f32 	%f2374, %f2373, %f2347;
	add.ftz.f32 	%f2375, %f2348, %f2374;
	fma.rn.ftz.f32 	%f2376, %f3172, %f2345, %f2375;
	mul.ftz.f32 	%f2377, %f3163, %f2357;
	fma.rn.ftz.f32 	%f2378, %f3166, %f2359, %f2377;
	fma.rn.ftz.f32 	%f2379, %f3168, %f2361, %f2378;
	add.ftz.f32 	%f3187, %f3173, %f2379;
	mul.ftz.f32 	%f2380, %f3166, %f2366;
	fma.rn.ftz.f32 	%f2381, %f3163, %f2363, %f2380;
	fma.rn.ftz.f32 	%f2382, %f3168, %f2368, %f2381;
	add.ftz.f32 	%f3183, %f3174, %f2382;
	mul.ftz.f32 	%f2383, %f3166, %f2372;
	fma.rn.ftz.f32 	%f2384, %f3163, %f2370, %f2383;
	fma.rn.ftz.f32 	%f2385, %f3168, %f2376, %f2384;
	add.ftz.f32 	%f3179, %f3175, %f2385;
	mul.ftz.f32 	%f2386, %f3162, %f2357;
	fma.rn.ftz.f32 	%f2387, %f3165, %f2359, %f2386;
	fma.rn.ftz.f32 	%f3186, %f3167, %f2361, %f2387;
	mul.ftz.f32 	%f2388, %f3165, %f2366;
	fma.rn.ftz.f32 	%f2389, %f3162, %f2363, %f2388;
	fma.rn.ftz.f32 	%f3182, %f3167, %f2368, %f2389;
	mul.ftz.f32 	%f2390, %f3165, %f2372;
	fma.rn.ftz.f32 	%f2391, %f3162, %f2370, %f2390;
	fma.rn.ftz.f32 	%f3178, %f3167, %f2376, %f2391;
	mul.ftz.f32 	%f2392, %f3161, %f2357;
	fma.rn.ftz.f32 	%f3185, %f3164, %f2359, %f2392;
	mul.ftz.f32 	%f2393, %f3164, %f2366;
	fma.rn.ftz.f32 	%f3181, %f3161, %f2363, %f2393;
	mul.ftz.f32 	%f2394, %f3164, %f2372;
	fma.rn.ftz.f32 	%f3177, %f3161, %f2370, %f2394;
	mul.ftz.f32 	%f3184, %f3160, %f2357;
	mul.ftz.f32 	%f3180, %f3160, %f2363;
	mul.ftz.f32 	%f3176, %f3160, %f2370;

$L__BB0_112:
	mul.ftz.f32 	%f2432, %f3177, %f3182;
	mul.ftz.f32 	%f2433, %f3178, %f3181;
	sub.ftz.f32 	%f2434, %f2433, %f2432;
	mul.ftz.f32 	%f2435, %f3184, %f2434;
	mul.ftz.f32 	%f2436, %f3176, %f3182;
	mul.ftz.f32 	%f2437, %f3178, %f3180;
	sub.ftz.f32 	%f2438, %f2437, %f2436;
	mul.ftz.f32 	%f2439, %f2438, %f3185;
	sub.ftz.f32 	%f2440, %f2435, %f2439;
	mul.ftz.f32 	%f2441, %f3176, %f3181;
	mul.ftz.f32 	%f2442, %f3177, %f3180;
	sub.ftz.f32 	%f2443, %f2442, %f2441;
	fma.rn.ftz.f32 	%f2444, %f2443, %f3186, %f2440;
	rcp.approx.ftz.f32 	%f2445, %f2444;
	mul.ftz.f32 	%f3196, %f2434, %f2445;
	mul.ftz.f32 	%f2446, %f3178, %f3185;
	mul.ftz.f32 	%f2447, %f3177, %f3186;
	sub.ftz.f32 	%f2448, %f2447, %f2446;
	mul.ftz.f32 	%f3197, %f2448, %f2445;
	mul.ftz.f32 	%f2449, %f3181, %f3186;
	mul.ftz.f32 	%f2450, %f3182, %f3185;
	sub.ftz.f32 	%f2451, %f2450, %f2449;
	mul.ftz.f32 	%f3198, %f2451, %f2445;
	sub.ftz.f32 	%f2452, %f2436, %f2437;
	mul.ftz.f32 	%f3192, %f2452, %f2445;
	mul.ftz.f32 	%f2453, %f3176, %f3186;
	mul.ftz.f32 	%f2454, %f3178, %f3184;
	sub.ftz.f32 	%f2455, %f2454, %f2453;
	mul.ftz.f32 	%f3193, %f2455, %f2445;
	mul.ftz.f32 	%f2456, %f3182, %f3184;
	mul.ftz.f32 	%f2457, %f3180, %f3186;
	sub.ftz.f32 	%f2458, %f2457, %f2456;
	mul.ftz.f32 	%f3194, %f2458, %f2445;
	mul.ftz.f32 	%f3188, %f2443, %f2445;
	mul.ftz.f32 	%f2459, %f3177, %f3184;
	mul.ftz.f32 	%f2460, %f3176, %f3185;
	sub.ftz.f32 	%f2461, %f2460, %f2459;
	mul.ftz.f32 	%f3189, %f2461, %f2445;
	mul.ftz.f32 	%f2462, %f3180, %f3185;
	mul.ftz.f32 	%f2463, %f3181, %f3184;
	sub.ftz.f32 	%f2464, %f2463, %f2462;
	mul.ftz.f32 	%f3190, %f2464, %f2445;
	mul.ftz.f32 	%f2465, %f3187, %f3196;
	neg.ftz.f32 	%f2466, %f2465;
	mul.ftz.f32 	%f2467, %f3183, %f3197;
	sub.ftz.f32 	%f2468, %f2466, %f2467;
	mul.ftz.f32 	%f2469, %f3179, %f3198;
	sub.ftz.f32 	%f3199, %f2468, %f2469;
	mul.ftz.f32 	%f2470, %f3187, %f3192;
	neg.ftz.f32 	%f2471, %f2470;
	mul.ftz.f32 	%f2472, %f3183, %f3193;
	sub.ftz.f32 	%f2473, %f2471, %f2472;
	mul.ftz.f32 	%f2474, %f3179, %f3194;
	sub.ftz.f32 	%f3195, %f2473, %f2474;
	mul.ftz.f32 	%f2475, %f3187, %f3188;
	neg.ftz.f32 	%f2476, %f2475;
	mul.ftz.f32 	%f2477, %f3183, %f3189;
	sub.ftz.f32 	%f2478, %f2476, %f2477;
	mul.ftz.f32 	%f2479, %f3179, %f3190;
	sub.ftz.f32 	%f3191, %f2478, %f2479;
	bra.uni 	$L__BB0_113;

$L__BB0_104:
	// begin inline asm
	call (%rd780), _optix_get_instance_inverse_transform_from_handle, (%rd528);
	// end inline asm

$L__BB0_105:
	// begin inline asm
	cvta.to.global.u64 %rd534, %rd780;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r664,%r665,%r666,%r667}, [%rd534];
	// end inline asm
	mov.b32 	%f3196, %r664;
	mov.b32 	%f3197, %r665;
	mov.b32 	%f3198, %r666;
	mov.b32 	%f3199, %r667;
	add.s64 	%rd538, %rd780, 16;
	// begin inline asm
	cvta.to.global.u64 %rd537, %rd538;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r668,%r669,%r670,%r671}, [%rd537];
	// end inline asm
	mov.b32 	%f3192, %r668;
	mov.b32 	%f3193, %r669;
	mov.b32 	%f3194, %r670;
	mov.b32 	%f3195, %r671;
	add.s64 	%rd541, %rd780, 32;
	// begin inline asm
	cvta.to.global.u64 %rd540, %rd541;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r672,%r673,%r674,%r675}, [%rd540];
	// end inline asm
	mov.b32 	%f3188, %r672;
	mov.b32 	%f3189, %r673;
	mov.b32 	%f3190, %r674;
	mov.b32 	%f3191, %r675;

$L__BB0_113:
	setp.eq.s32 	%p56, %r995, 0;
	@%p56 bra 	$L__BB0_115;

	mul.ftz.f32 	%f2480, %f3155, %f3197;
	fma.rn.ftz.f32 	%f2481, %f3151, %f3196, %f2480;
	fma.rn.ftz.f32 	%f918, %f3159, %f3198, %f2481;
	mul.ftz.f32 	%f2482, %f3154, %f3197;
	fma.rn.ftz.f32 	%f2483, %f3150, %f3196, %f2482;
	fma.rn.ftz.f32 	%f919, %f3158, %f3198, %f2483;
	mul.ftz.f32 	%f2484, %f3153, %f3197;
	fma.rn.ftz.f32 	%f2485, %f3149, %f3196, %f2484;
	fma.rn.ftz.f32 	%f920, %f3157, %f3198, %f2485;
	mul.ftz.f32 	%f2486, %f3152, %f3197;
	fma.rn.ftz.f32 	%f2487, %f3148, %f3196, %f2486;
	fma.rn.ftz.f32 	%f2488, %f3156, %f3198, %f2487;
	add.ftz.f32 	%f3199, %f3199, %f2488;
	mul.ftz.f32 	%f2489, %f3155, %f3193;
	fma.rn.ftz.f32 	%f2490, %f3151, %f3192, %f2489;
	fma.rn.ftz.f32 	%f922, %f3159, %f3194, %f2490;
	mul.ftz.f32 	%f2491, %f3154, %f3193;
	fma.rn.ftz.f32 	%f2492, %f3150, %f3192, %f2491;
	fma.rn.ftz.f32 	%f923, %f3158, %f3194, %f2492;
	mul.ftz.f32 	%f2493, %f3153, %f3193;
	fma.rn.ftz.f32 	%f2494, %f3149, %f3192, %f2493;
	fma.rn.ftz.f32 	%f924, %f3157, %f3194, %f2494;
	mul.ftz.f32 	%f2495, %f3152, %f3193;
	fma.rn.ftz.f32 	%f2496, %f3148, %f3192, %f2495;
	fma.rn.ftz.f32 	%f2497, %f3156, %f3194, %f2496;
	add.ftz.f32 	%f3195, %f3195, %f2497;
	mul.ftz.f32 	%f2498, %f3155, %f3189;
	fma.rn.ftz.f32 	%f2499, %f3151, %f3188, %f2498;
	fma.rn.ftz.f32 	%f926, %f3159, %f3190, %f2499;
	mul.ftz.f32 	%f2500, %f3154, %f3189;
	fma.rn.ftz.f32 	%f2501, %f3150, %f3188, %f2500;
	fma.rn.ftz.f32 	%f927, %f3158, %f3190, %f2501;
	mul.ftz.f32 	%f2502, %f3153, %f3189;
	fma.rn.ftz.f32 	%f2503, %f3149, %f3188, %f2502;
	fma.rn.ftz.f32 	%f928, %f3157, %f3190, %f2503;
	mul.ftz.f32 	%f2504, %f3152, %f3189;
	fma.rn.ftz.f32 	%f2505, %f3148, %f3188, %f2504;
	fma.rn.ftz.f32 	%f2506, %f3156, %f3190, %f2505;
	add.ftz.f32 	%f3191, %f3191, %f2506;
	mov.f32 	%f3188, %f926;
	mov.f32 	%f3189, %f927;
	mov.f32 	%f3190, %f928;
	mov.f32 	%f3192, %f922;
	mov.f32 	%f3193, %f923;
	mov.f32 	%f3194, %f924;
	mov.f32 	%f3196, %f918;
	mov.f32 	%f3197, %f919;
	mov.f32 	%f3198, %f920;

$L__BB0_115:
	add.s32 	%r995, %r995, 1;
	setp.lt.u32 	%p57, %r995, %r659;
	mov.f32 	%f3148, %f3199;
	mov.f32 	%f3149, %f3198;
	mov.f32 	%f3150, %f3197;
	mov.f32 	%f3151, %f3196;
	mov.f32 	%f3152, %f3195;
	mov.f32 	%f3153, %f3194;
	mov.f32 	%f3154, %f3193;
	mov.f32 	%f3155, %f3192;
	mov.f32 	%f3156, %f3191;
	mov.f32 	%f3157, %f3190;
	mov.f32 	%f3158, %f3189;
	mov.f32 	%f3159, %f3188;
	@%p57 bra 	$L__BB0_100;

$L__BB0_116:
	mul.ftz.f32 	%f2507, %f2, %f3197;
	fma.rn.ftz.f32 	%f2508, %f1, %f3196, %f2507;
	fma.rn.ftz.f32 	%f2509, %f3, %f3198, %f2508;
	mul.ftz.f32 	%f2510, %f2, %f3193;
	fma.rn.ftz.f32 	%f2511, %f1, %f3192, %f2510;
	fma.rn.ftz.f32 	%f2512, %f3, %f3194, %f2511;
	mul.ftz.f32 	%f2513, %f2, %f3189;
	fma.rn.ftz.f32 	%f2514, %f1, %f3188, %f2513;
	fma.rn.ftz.f32 	%f2515, %f3, %f3190, %f2514;
	add.ftz.f32 	%f3226, %f3191, %f2515;
	add.ftz.f32 	%f3225, %f3195, %f2512;
	add.ftz.f32 	%f3224, %f3199, %f2509;
	bra.uni 	$L__BB0_118;

$L__BB0_50:
	// begin inline asm
	call (%rd286), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r347), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f1676, 0f00000000;
	// begin inline asm
	call (%f3290, %f3289, %f3288, %f1663,  %f1664, %f1665, %f1666, %f1667,  %f1668, %f1669, %f1670, %f1671,  %f3293, %f3292, %f3291, %f1675), _optix_get_cubic_bspline_vertex_data, (%rd286, %r998, %r347, %f1676);
	// end inline asm
	add.ftz.f32 	%f1677, %f1668, %f3290;
	add.ftz.f32 	%f1678, %f1669, %f3289;
	add.ftz.f32 	%f1679, %f1670, %f3288;
	add.ftz.f32 	%f1680, %f1671, %f1663;
	mul.ftz.f32 	%f1681, %f1677, 0f3E2AAAAB;
	mul.ftz.f32 	%f1682, %f1678, 0f3E2AAAAB;
	mul.ftz.f32 	%f1683, %f1679, 0f3E2AAAAB;
	mul.ftz.f32 	%f1684, %f1680, 0f3E2AAAAB;
	fma.rn.ftz.f32 	%f379, %f1664, 0f3F2AAAAB, %f1681;
	fma.rn.ftz.f32 	%f380, %f1665, 0f3F2AAAAB, %f1682;
	fma.rn.ftz.f32 	%f381, %f1666, 0f3F2AAAAB, %f1683;
	fma.rn.ftz.f32 	%f382, %f1667, 0f3F2AAAAB, %f1684;
	sub.ftz.f32 	%f383, %f1668, %f3290;
	sub.ftz.f32 	%f384, %f1669, %f3289;
	sub.ftz.f32 	%f385, %f1670, %f3288;
	sub.ftz.f32 	%f386, %f1671, %f1663;
	sub.ftz.f32 	%f387, %f1668, %f1664;
	sub.ftz.f32 	%f388, %f1669, %f1665;
	sub.ftz.f32 	%f389, %f1670, %f1666;
	sub.ftz.f32 	%f390, %f1671, %f1667;
	sub.ftz.f32 	%f392, %f3293, %f1664;
	sub.ftz.f32 	%f394, %f3292, %f1665;
	sub.ftz.f32 	%f396, %f3291, %f1666;
	sub.ftz.f32 	%f397, %f1675, %f1667;
	// begin inline asm
	call (%r350), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p26, %r350, 0;
	@%p26 bra 	$L__BB0_70;

	// begin inline asm
	call (%r351), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1685), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p27, %r351, 0;
	@%p27 bra 	$L__BB0_69;

	mov.u32 	%r993, 0;

$L__BB0_53:
	.pragma "nounroll";
	// begin inline asm
	call (%rd288), _optix_get_transform_list_handle, (%r993);
	// end inline asm
	// begin inline asm
	call (%r354), _optix_get_transform_type_from_handle, (%rd288);
	// end inline asm
	or.b32  	%r355, %r354, 1;
	setp.eq.s32 	%p28, %r355, 3;
	@%p28 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_54;

$L__BB0_59:
	setp.eq.s32 	%p31, %r354, 2;
	@%p31 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_60;

$L__BB0_63:
	// begin inline asm
	call (%rd360), _optix_get_matrix_motion_transform_from_handle, (%rd288);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd362, %rd360;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r443,%r444,%r445,%r446}, [%rd362];
	// end inline asm
	add.s64 	%rd366, %rd360, 16;
	// begin inline asm
	cvta.to.global.u64 %rd365, %rd366;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r447,%r448,%r449,%r450}, [%rd365];
	// end inline asm
	add.s64 	%rd369, %rd360, 32;
	// begin inline asm
	cvta.to.global.u64 %rd368, %rd369;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r451,%r452,%r453,%r454}, [%rd368];
	// end inline asm
	add.s64 	%rd372, %rd360, 48;
	// begin inline asm
	cvta.to.global.u64 %rd371, %rd372;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r455,%r456,%r457,%r458}, [%rd371];
	// end inline asm
	add.s64 	%rd375, %rd360, 64;
	// begin inline asm
	cvta.to.global.u64 %rd374, %rd375;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r459,%r460,%r461,%r462}, [%rd374];
	// end inline asm
	add.s64 	%rd378, %rd360, 80;
	// begin inline asm
	cvta.to.global.u64 %rd377, %rd378;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r463,%r464,%r465,%r466}, [%rd377];
	// end inline asm
	add.s64 	%rd381, %rd360, 96;
	// begin inline asm
	cvta.to.global.u64 %rd380, %rd381;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r467,%r468,%r469,%r470}, [%rd380];
	// end inline asm
	add.s64 	%rd384, %rd360, 112;
	// begin inline asm
	cvta.to.global.u64 %rd383, %rd384;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r471,%r472,%r473,%r474}, [%rd383];
	// end inline asm
	mov.b32 	%f1812, %r446;
	mov.b32 	%f1813, %r447;
	and.b32  	%r487, %r445, 65535;
	add.s32 	%r488, %r487, -1;
	cvt.rn.f32.s32 	%f1814, %r488;
	sub.ftz.f32 	%f1815, %f1685, %f1812;
	mul.ftz.f32 	%f1816, %f1815, %f1814;
	sub.ftz.f32 	%f1817, %f1813, %f1812;
	div.approx.ftz.f32 	%f1818, %f1816, %f1817;
	min.ftz.f32 	%f1819, %f1814, %f1818;
	mov.f32 	%f1820, 0f00000000;
	max.ftz.f32 	%f1821, %f1820, %f1819;
	cvt.rmi.ftz.f32.f32 	%f1822, %f1821;
	sub.ftz.f32 	%f484, %f1821, %f1822;
	cvt.rzi.ftz.s32.f32 	%r489, %f1822;
	cvt.s64.s32 	%rd22, %r489;
	mul.wide.s32 	%rd395, %r489, 48;
	add.s64 	%rd387, %rd369, %rd395;
	// begin inline asm
	cvta.to.global.u64 %rd386, %rd387;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r475,%r476,%r477,%r478}, [%rd386];
	// end inline asm
	mov.b32 	%f3047, %r475;
	mov.b32 	%f3048, %r476;
	mov.b32 	%f3049, %r477;
	mov.b32 	%f3050, %r478;
	add.s64 	%rd390, %rd387, 16;
	// begin inline asm
	cvta.to.global.u64 %rd389, %rd390;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r479,%r480,%r481,%r482}, [%rd389];
	// end inline asm
	mov.b32 	%f3043, %r479;
	mov.b32 	%f3044, %r480;
	mov.b32 	%f3045, %r481;
	mov.b32 	%f3046, %r482;
	add.s64 	%rd393, %rd387, 32;
	// begin inline asm
	cvta.to.global.u64 %rd392, %rd393;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r483,%r484,%r485,%r486}, [%rd392];
	// end inline asm
	mov.b32 	%f3039, %r483;
	mov.b32 	%f3040, %r484;
	mov.b32 	%f3041, %r485;
	mov.b32 	%f3042, %r486;
	setp.leu.ftz.f32 	%p33, %f484, 0f00000000;
	@%p33 bra 	$L__BB0_65;

	mov.f32 	%f1823, 0f3F800000;
	sub.ftz.f32 	%f1824, %f1823, %f484;
	mul.lo.s64 	%rd405, %rd22, 48;
	add.s64 	%rd406, %rd360, %rd405;
	add.s64 	%rd397, %rd406, 80;
	// begin inline asm
	cvta.to.global.u64 %rd396, %rd397;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r490,%r491,%r492,%r493}, [%rd396];
	// end inline asm
	mov.b32 	%f1825, %r490;
	mov.b32 	%f1826, %r491;
	mov.b32 	%f1827, %r492;
	mov.b32 	%f1828, %r493;
	mul.ftz.f32 	%f1829, %f484, %f1825;
	mul.ftz.f32 	%f1830, %f484, %f1826;
	mul.ftz.f32 	%f1831, %f484, %f1827;
	mul.ftz.f32 	%f1832, %f484, %f1828;
	fma.rn.ftz.f32 	%f3047, %f1824, %f3047, %f1829;
	fma.rn.ftz.f32 	%f3048, %f1824, %f3048, %f1830;
	fma.rn.ftz.f32 	%f3049, %f1824, %f3049, %f1831;
	fma.rn.ftz.f32 	%f3050, %f1824, %f3050, %f1832;
	add.s64 	%rd400, %rd406, 96;
	// begin inline asm
	cvta.to.global.u64 %rd399, %rd400;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r494,%r495,%r496,%r497}, [%rd399];
	// end inline asm
	mov.b32 	%f1833, %r494;
	mov.b32 	%f1834, %r495;
	mov.b32 	%f1835, %r496;
	mov.b32 	%f1836, %r497;
	mul.ftz.f32 	%f1837, %f484, %f1833;
	mul.ftz.f32 	%f1838, %f484, %f1834;
	mul.ftz.f32 	%f1839, %f484, %f1835;
	mul.ftz.f32 	%f1840, %f484, %f1836;
	fma.rn.ftz.f32 	%f3043, %f1824, %f3043, %f1837;
	fma.rn.ftz.f32 	%f3044, %f1824, %f3044, %f1838;
	fma.rn.ftz.f32 	%f3045, %f1824, %f3045, %f1839;
	fma.rn.ftz.f32 	%f3046, %f1824, %f3046, %f1840;
	add.s64 	%rd403, %rd406, 112;
	// begin inline asm
	cvta.to.global.u64 %rd402, %rd403;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r498,%r499,%r500,%r501}, [%rd402];
	// end inline asm
	mov.b32 	%f1841, %r498;
	mov.b32 	%f1842, %r499;
	mov.b32 	%f1843, %r500;
	mov.b32 	%f1844, %r501;
	mul.ftz.f32 	%f1845, %f484, %f1841;
	mul.ftz.f32 	%f1846, %f484, %f1842;
	mul.ftz.f32 	%f1847, %f484, %f1843;
	mul.ftz.f32 	%f1848, %f484, %f1844;
	fma.rn.ftz.f32 	%f3039, %f1824, %f3039, %f1845;
	fma.rn.ftz.f32 	%f3040, %f1824, %f3040, %f1846;
	fma.rn.ftz.f32 	%f3041, %f1824, %f3041, %f1847;
	fma.rn.ftz.f32 	%f3042, %f1824, %f3042, %f1848;
	bra.uni 	$L__BB0_65;

$L__BB0_54:
	mov.f32 	%f3053, 0f3F800000;
	setp.eq.s32 	%p29, %r354, 4;
	@%p29 bra 	$L__BB0_57;

	setp.ne.s32 	%p30, %r354, 1;
	mov.f32 	%f3051, %f1676;
	mov.f32 	%f3052, %f1676;
	mov.f32 	%f3054, %f1676;
	mov.f32 	%f3055, %f1676;
	mov.f32 	%f3056, %f3053;
	mov.f32 	%f3057, %f1676;
	mov.f32 	%f3058, %f1676;
	mov.f32 	%f3059, %f3053;
	mov.f32 	%f3060, %f1676;
	mov.f32 	%f3061, %f1676;
	mov.f32 	%f3062, %f1676;
	@%p30 bra 	$L__BB0_66;

	// begin inline asm
	call (%rd290), _optix_get_static_transform_from_handle, (%rd288);
	// end inline asm
	add.s64 	%rd778, %rd290, 64;
	bra.uni 	$L__BB0_58;

$L__BB0_60:
	// begin inline asm
	call (%rd303), _optix_get_srt_motion_transform_from_handle, (%rd288);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd305, %rd303;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r368,%r369,%r370,%r371}, [%rd305];
	// end inline asm
	add.s64 	%rd309, %rd303, 16;
	// begin inline asm
	cvta.to.global.u64 %rd308, %rd309;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r372,%r373,%r374,%r375}, [%rd308];
	// end inline asm
	add.s64 	%rd312, %rd303, 32;
	// begin inline asm
	cvta.to.global.u64 %rd311, %rd312;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r376,%r377,%r378,%r379}, [%rd311];
	// end inline asm
	add.s64 	%rd315, %rd303, 48;
	// begin inline asm
	cvta.to.global.u64 %rd314, %rd315;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r380,%r381,%r382,%r383}, [%rd314];
	// end inline asm
	add.s64 	%rd318, %rd303, 64;
	// begin inline asm
	cvta.to.global.u64 %rd317, %rd318;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r384,%r385,%r386,%r387}, [%rd317];
	// end inline asm
	add.s64 	%rd321, %rd303, 80;
	// begin inline asm
	cvta.to.global.u64 %rd320, %rd321;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r388,%r389,%r390,%r391}, [%rd320];
	// end inline asm
	add.s64 	%rd324, %rd303, 96;
	// begin inline asm
	cvta.to.global.u64 %rd323, %rd324;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r392,%r393,%r394,%r395}, [%rd323];
	// end inline asm
	add.s64 	%rd327, %rd303, 112;
	// begin inline asm
	cvta.to.global.u64 %rd326, %rd327;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r396,%r397,%r398,%r399}, [%rd326];
	// end inline asm
	add.s64 	%rd330, %rd303, 128;
	// begin inline asm
	cvta.to.global.u64 %rd329, %rd330;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r400,%r401,%r402,%r403}, [%rd329];
	// end inline asm
	add.s64 	%rd333, %rd303, 144;
	// begin inline asm
	cvta.to.global.u64 %rd332, %rd333;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r404,%r405,%r406,%r407}, [%rd332];
	// end inline asm
	mov.b32 	%f1700, %r371;
	mov.b32 	%f1701, %r372;
	and.b32  	%r424, %r370, 65535;
	add.s32 	%r425, %r424, -1;
	cvt.rn.f32.s32 	%f1702, %r425;
	sub.ftz.f32 	%f1703, %f1685, %f1700;
	mul.ftz.f32 	%f1704, %f1703, %f1702;
	sub.ftz.f32 	%f1705, %f1701, %f1700;
	div.approx.ftz.f32 	%f1706, %f1704, %f1705;
	min.ftz.f32 	%f1707, %f1702, %f1706;
	mov.f32 	%f1708, 0f00000000;
	max.ftz.f32 	%f1709, %f1708, %f1707;
	cvt.rmi.ftz.f32.f32 	%f1710, %f1709;
	sub.ftz.f32 	%f423, %f1709, %f1710;
	cvt.rzi.ftz.s32.f32 	%r426, %f1710;
	mul.wide.s32 	%rd347, %r426, 64;
	add.s64 	%rd336, %rd312, %rd347;
	// begin inline asm
	cvta.to.global.u64 %rd335, %rd336;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r408,%r409,%r410,%r411}, [%rd335];
	// end inline asm
	mov.b32 	%f3023, %r408;
	mov.b32 	%f3024, %r409;
	mov.b32 	%f3025, %r410;
	mov.b32 	%f3026, %r411;
	add.s64 	%rd339, %rd336, 16;
	// begin inline asm
	cvta.to.global.u64 %rd338, %rd339;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r412,%r413,%r414,%r415}, [%rd338];
	// end inline asm
	mov.b32 	%f3027, %r412;
	mov.b32 	%f3028, %r413;
	mov.b32 	%f3029, %r414;
	mov.b32 	%f3030, %r415;
	add.s64 	%rd342, %rd336, 32;
	// begin inline asm
	cvta.to.global.u64 %rd341, %rd342;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r416,%r417,%r418,%r419}, [%rd341];
	// end inline asm
	mov.b32 	%f3031, %r416;
	mov.b32 	%f3032, %r417;
	mov.b32 	%f3033, %r418;
	mov.b32 	%f3034, %r419;
	add.s64 	%rd345, %rd336, 48;
	// begin inline asm
	cvta.to.global.u64 %rd344, %rd345;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r420,%r421,%r422,%r423}, [%rd344];
	// end inline asm
	mov.b32 	%f3035, %r420;
	mov.b32 	%f3036, %r421;
	mov.b32 	%f3037, %r422;
	mov.b32 	%f3038, %r423;
	setp.leu.ftz.f32 	%p32, %f423, 0f00000000;
	@%p32 bra 	$L__BB0_62;

	mov.f32 	%f1711, 0f3F800000;
	sub.ftz.f32 	%f1712, %f1711, %f423;
	add.s64 	%rd349, %rd336, 64;
	// begin inline asm
	cvta.to.global.u64 %rd348, %rd349;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r427,%r428,%r429,%r430}, [%rd348];
	// end inline asm
	mov.b32 	%f1713, %r427;
	mov.b32 	%f1714, %r428;
	mov.b32 	%f1715, %r429;
	mov.b32 	%f1716, %r430;
	mul.ftz.f32 	%f1717, %f423, %f1713;
	mul.ftz.f32 	%f1718, %f423, %f1714;
	mul.ftz.f32 	%f1719, %f423, %f1715;
	mul.ftz.f32 	%f1720, %f423, %f1716;
	fma.rn.ftz.f32 	%f3023, %f1712, %f3023, %f1717;
	fma.rn.ftz.f32 	%f3024, %f1712, %f3024, %f1718;
	fma.rn.ftz.f32 	%f3025, %f1712, %f3025, %f1719;
	fma.rn.ftz.f32 	%f3026, %f1712, %f3026, %f1720;
	add.s64 	%rd352, %rd336, 80;
	// begin inline asm
	cvta.to.global.u64 %rd351, %rd352;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r431,%r432,%r433,%r434}, [%rd351];
	// end inline asm
	mov.b32 	%f1721, %r431;
	mov.b32 	%f1722, %r432;
	mov.b32 	%f1723, %r433;
	mov.b32 	%f1724, %r434;
	mul.ftz.f32 	%f1725, %f423, %f1721;
	mul.ftz.f32 	%f1726, %f423, %f1722;
	mul.ftz.f32 	%f1727, %f423, %f1723;
	mul.ftz.f32 	%f1728, %f423, %f1724;
	fma.rn.ftz.f32 	%f3027, %f1712, %f3027, %f1725;
	fma.rn.ftz.f32 	%f3028, %f1712, %f3028, %f1726;
	fma.rn.ftz.f32 	%f3029, %f1712, %f3029, %f1727;
	fma.rn.ftz.f32 	%f3030, %f1712, %f3030, %f1728;
	add.s64 	%rd355, %rd336, 96;
	// begin inline asm
	cvta.to.global.u64 %rd354, %rd355;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r435,%r436,%r437,%r438}, [%rd354];
	// end inline asm
	mov.b32 	%f1729, %r435;
	mov.b32 	%f1730, %r436;
	mov.b32 	%f1731, %r437;
	mov.b32 	%f1732, %r438;
	mul.ftz.f32 	%f1733, %f423, %f1729;
	mul.ftz.f32 	%f1734, %f423, %f1730;
	mul.ftz.f32 	%f1735, %f423, %f1731;
	mul.ftz.f32 	%f1736, %f423, %f1732;
	fma.rn.ftz.f32 	%f3031, %f1712, %f3031, %f1733;
	fma.rn.ftz.f32 	%f1737, %f1712, %f3032, %f1734;
	fma.rn.ftz.f32 	%f1738, %f1712, %f3033, %f1735;
	fma.rn.ftz.f32 	%f1739, %f1712, %f3034, %f1736;
	add.s64 	%rd358, %rd336, 112;
	// begin inline asm
	cvta.to.global.u64 %rd357, %rd358;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r439,%r440,%r441,%r442}, [%rd357];
	// end inline asm
	mov.b32 	%f1740, %r439;
	mov.b32 	%f1741, %r440;
	mov.b32 	%f1742, %r441;
	mov.b32 	%f1743, %r442;
	mul.ftz.f32 	%f1744, %f423, %f1740;
	mul.ftz.f32 	%f1745, %f423, %f1741;
	mul.ftz.f32 	%f1746, %f423, %f1742;
	mul.ftz.f32 	%f1747, %f423, %f1743;
	fma.rn.ftz.f32 	%f1748, %f1712, %f3035, %f1744;
	fma.rn.ftz.f32 	%f3036, %f1712, %f3036, %f1745;
	fma.rn.ftz.f32 	%f3037, %f1712, %f3037, %f1746;
	fma.rn.ftz.f32 	%f3038, %f1712, %f3038, %f1747;
	mul.ftz.f32 	%f1749, %f1738, %f1738;
	fma.rn.ftz.f32 	%f1750, %f1737, %f1737, %f1749;
	fma.rn.ftz.f32 	%f1751, %f1739, %f1739, %f1750;
	fma.rn.ftz.f32 	%f1752, %f1748, %f1748, %f1751;
	rsqrt.approx.ftz.f32 	%f1753, %f1752;
	mul.ftz.f32 	%f3032, %f1737, %f1753;
	mul.ftz.f32 	%f3033, %f1738, %f1753;
	mul.ftz.f32 	%f3034, %f1739, %f1753;
	mul.ftz.f32 	%f3035, %f1753, %f1748;

$L__BB0_62:
	mul.ftz.f32 	%f1754, %f3033, %f3033;
	fma.rn.ftz.f32 	%f1755, %f3032, %f3032, %f1754;
	fma.rn.ftz.f32 	%f1756, %f3034, %f3034, %f1755;
	fma.rn.ftz.f32 	%f1757, %f3035, %f3035, %f1756;
	rcp.approx.ftz.f32 	%f1758, %f1757;
	mul.ftz.f32 	%f1759, %f3032, %f1758;
	mul.ftz.f32 	%f1760, %f3033, %f1758;
	mul.ftz.f32 	%f1761, %f3034, %f1758;
	mul.ftz.f32 	%f1762, %f3035, %f1758;
	mul.ftz.f32 	%f1763, %f3032, %f1759;
	mul.ftz.f32 	%f1764, %f3033, %f1760;
	mul.ftz.f32 	%f1765, %f3034, %f1761;
	mul.ftz.f32 	%f1766, %f3032, %f1760;
	mul.ftz.f32 	%f1767, %f3034, %f1762;
	mul.ftz.f32 	%f1768, %f3032, %f1761;
	mul.ftz.f32 	%f1769, %f3033, %f1762;
	mul.ftz.f32 	%f1770, %f3033, %f1761;
	mul.ftz.f32 	%f1771, %f3032, %f1762;
	sub.ftz.f32 	%f1772, %f1763, %f1764;
	sub.ftz.f32 	%f1773, %f1772, %f1765;
	fma.rn.ftz.f32 	%f1774, %f3035, %f1762, %f1773;
	sub.ftz.f32 	%f1775, %f1766, %f1767;
	add.ftz.f32 	%f1776, %f1775, %f1775;
	add.ftz.f32 	%f1777, %f1768, %f1769;
	add.ftz.f32 	%f1778, %f1777, %f1777;
	add.ftz.f32 	%f1779, %f1766, %f1767;
	add.ftz.f32 	%f1780, %f1779, %f1779;
	sub.ftz.f32 	%f1781, %f1764, %f1763;
	sub.ftz.f32 	%f1782, %f1781, %f1765;
	fma.rn.ftz.f32 	%f1783, %f3035, %f1762, %f1782;
	sub.ftz.f32 	%f1784, %f1770, %f1771;
	add.ftz.f32 	%f1785, %f1784, %f1784;
	sub.ftz.f32 	%f1786, %f1768, %f1769;
	add.ftz.f32 	%f1787, %f1786, %f1786;
	add.ftz.f32 	%f1788, %f1770, %f1771;
	add.ftz.f32 	%f1789, %f1788, %f1788;
	neg.ftz.f32 	%f1790, %f1763;
	sub.ftz.f32 	%f1791, %f1790, %f1764;
	add.ftz.f32 	%f1792, %f1765, %f1791;
	fma.rn.ftz.f32 	%f1793, %f3035, %f1762, %f1792;
	mul.ftz.f32 	%f1794, %f3026, %f1774;
	fma.rn.ftz.f32 	%f1795, %f3029, %f1776, %f1794;
	fma.rn.ftz.f32 	%f1796, %f3031, %f1778, %f1795;
	add.ftz.f32 	%f3050, %f3036, %f1796;
	mul.ftz.f32 	%f1797, %f3029, %f1783;
	fma.rn.ftz.f32 	%f1798, %f3026, %f1780, %f1797;
	fma.rn.ftz.f32 	%f1799, %f3031, %f1785, %f1798;
	add.ftz.f32 	%f3046, %f3037, %f1799;
	mul.ftz.f32 	%f1800, %f3029, %f1789;
	fma.rn.ftz.f32 	%f1801, %f3026, %f1787, %f1800;
	fma.rn.ftz.f32 	%f1802, %f3031, %f1793, %f1801;
	add.ftz.f32 	%f3042, %f3038, %f1802;
	mul.ftz.f32 	%f1803, %f3025, %f1774;
	fma.rn.ftz.f32 	%f1804, %f3028, %f1776, %f1803;
	fma.rn.ftz.f32 	%f3049, %f3030, %f1778, %f1804;
	mul.ftz.f32 	%f1805, %f3028, %f1783;
	fma.rn.ftz.f32 	%f1806, %f3025, %f1780, %f1805;
	fma.rn.ftz.f32 	%f3045, %f3030, %f1785, %f1806;
	mul.ftz.f32 	%f1807, %f3028, %f1789;
	fma.rn.ftz.f32 	%f1808, %f3025, %f1787, %f1807;
	fma.rn.ftz.f32 	%f3041, %f3030, %f1793, %f1808;
	mul.ftz.f32 	%f1809, %f3024, %f1774;
	fma.rn.ftz.f32 	%f3048, %f3027, %f1776, %f1809;
	mul.ftz.f32 	%f1810, %f3027, %f1783;
	fma.rn.ftz.f32 	%f3044, %f3024, %f1780, %f1810;
	mul.ftz.f32 	%f1811, %f3027, %f1789;
	fma.rn.ftz.f32 	%f3040, %f3024, %f1787, %f1811;
	mul.ftz.f32 	%f3047, %f3023, %f1774;
	mul.ftz.f32 	%f3043, %f3023, %f1780;
	mul.ftz.f32 	%f3039, %f3023, %f1787;

$L__BB0_65:
	mul.ftz.f32 	%f1849, %f3040, %f3045;
	mul.ftz.f32 	%f1850, %f3041, %f3044;
	sub.ftz.f32 	%f1851, %f1850, %f1849;
	mul.ftz.f32 	%f1852, %f3047, %f1851;
	mul.ftz.f32 	%f1853, %f3039, %f3045;
	mul.ftz.f32 	%f1854, %f3041, %f3043;
	sub.ftz.f32 	%f1855, %f1854, %f1853;
	mul.ftz.f32 	%f1856, %f1855, %f3048;
	sub.ftz.f32 	%f1857, %f1852, %f1856;
	mul.ftz.f32 	%f1858, %f3039, %f3044;
	mul.ftz.f32 	%f1859, %f3040, %f3043;
	sub.ftz.f32 	%f1860, %f1859, %f1858;
	fma.rn.ftz.f32 	%f1861, %f1860, %f3049, %f1857;
	rcp.approx.ftz.f32 	%f1862, %f1861;
	mul.ftz.f32 	%f3059, %f1851, %f1862;
	mul.ftz.f32 	%f1863, %f3041, %f3048;
	mul.ftz.f32 	%f1864, %f3040, %f3049;
	sub.ftz.f32 	%f1865, %f1864, %f1863;
	mul.ftz.f32 	%f3060, %f1865, %f1862;
	mul.ftz.f32 	%f1866, %f3044, %f3049;
	mul.ftz.f32 	%f1867, %f3045, %f3048;
	sub.ftz.f32 	%f1868, %f1867, %f1866;
	mul.ftz.f32 	%f3061, %f1868, %f1862;
	sub.ftz.f32 	%f1869, %f1853, %f1854;
	mul.ftz.f32 	%f3055, %f1869, %f1862;
	mul.ftz.f32 	%f1870, %f3039, %f3049;
	mul.ftz.f32 	%f1871, %f3041, %f3047;
	sub.ftz.f32 	%f1872, %f1871, %f1870;
	mul.ftz.f32 	%f3056, %f1872, %f1862;
	mul.ftz.f32 	%f1873, %f3045, %f3047;
	mul.ftz.f32 	%f1874, %f3043, %f3049;
	sub.ftz.f32 	%f1875, %f1874, %f1873;
	mul.ftz.f32 	%f3057, %f1875, %f1862;
	mul.ftz.f32 	%f3051, %f1860, %f1862;
	mul.ftz.f32 	%f1876, %f3040, %f3047;
	mul.ftz.f32 	%f1877, %f3039, %f3048;
	sub.ftz.f32 	%f1878, %f1877, %f1876;
	mul.ftz.f32 	%f3052, %f1878, %f1862;
	mul.ftz.f32 	%f1879, %f3043, %f3048;
	mul.ftz.f32 	%f1880, %f3044, %f3047;
	sub.ftz.f32 	%f1881, %f1880, %f1879;
	mul.ftz.f32 	%f3053, %f1881, %f1862;
	mul.ftz.f32 	%f1882, %f3050, %f3059;
	neg.ftz.f32 	%f1883, %f1882;
	mul.ftz.f32 	%f1884, %f3046, %f3060;
	sub.ftz.f32 	%f1885, %f1883, %f1884;
	mul.ftz.f32 	%f1886, %f3042, %f3061;
	sub.ftz.f32 	%f3062, %f1885, %f1886;
	mul.ftz.f32 	%f1887, %f3050, %f3055;
	neg.ftz.f32 	%f1888, %f1887;
	mul.ftz.f32 	%f1889, %f3046, %f3056;
	sub.ftz.f32 	%f1890, %f1888, %f1889;
	mul.ftz.f32 	%f1891, %f3042, %f3057;
	sub.ftz.f32 	%f3058, %f1890, %f1891;
	mul.ftz.f32 	%f1892, %f3050, %f3051;
	neg.ftz.f32 	%f1893, %f1892;
	mul.ftz.f32 	%f1894, %f3046, %f3052;
	sub.ftz.f32 	%f1895, %f1893, %f1894;
	mul.ftz.f32 	%f1896, %f3042, %f3053;
	sub.ftz.f32 	%f3054, %f1895, %f1896;
	bra.uni 	$L__BB0_66;

$L__BB0_57:
	// begin inline asm
	call (%rd778), _optix_get_instance_inverse_transform_from_handle, (%rd288);
	// end inline asm

$L__BB0_58:
	// begin inline asm
	cvta.to.global.u64 %rd294, %rd778;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r356,%r357,%r358,%r359}, [%rd294];
	// end inline asm
	mov.b32 	%f3059, %r356;
	mov.b32 	%f3060, %r357;
	mov.b32 	%f3061, %r358;
	mov.b32 	%f3062, %r359;
	add.s64 	%rd298, %rd778, 16;
	// begin inline asm
	cvta.to.global.u64 %rd297, %rd298;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r360,%r361,%r362,%r363}, [%rd297];
	// end inline asm
	mov.b32 	%f3055, %r360;
	mov.b32 	%f3056, %r361;
	mov.b32 	%f3057, %r362;
	mov.b32 	%f3058, %r363;
	add.s64 	%rd301, %rd778, 32;
	// begin inline asm
	cvta.to.global.u64 %rd300, %rd301;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r364,%r365,%r366,%r367}, [%rd300];
	// end inline asm
	mov.b32 	%f3051, %r364;
	mov.b32 	%f3052, %r365;
	mov.b32 	%f3053, %r366;
	mov.b32 	%f3054, %r367;

$L__BB0_66:
	setp.eq.s32 	%p34, %r993, 0;
	@%p34 bra 	$L__BB0_68;

	mul.ftz.f32 	%f1897, %f3018, %f3060;
	fma.rn.ftz.f32 	%f1898, %f3014, %f3059, %f1897;
	fma.rn.ftz.f32 	%f545, %f3022, %f3061, %f1898;
	mul.ftz.f32 	%f1899, %f3017, %f3060;
	fma.rn.ftz.f32 	%f1900, %f3013, %f3059, %f1899;
	fma.rn.ftz.f32 	%f546, %f3021, %f3061, %f1900;
	mul.ftz.f32 	%f1901, %f3016, %f3060;
	fma.rn.ftz.f32 	%f1902, %f3012, %f3059, %f1901;
	fma.rn.ftz.f32 	%f547, %f3020, %f3061, %f1902;
	mul.ftz.f32 	%f1903, %f3015, %f3060;
	fma.rn.ftz.f32 	%f1904, %f3011, %f3059, %f1903;
	fma.rn.ftz.f32 	%f1905, %f3019, %f3061, %f1904;
	add.ftz.f32 	%f3062, %f3062, %f1905;
	mul.ftz.f32 	%f1906, %f3018, %f3056;
	fma.rn.ftz.f32 	%f1907, %f3014, %f3055, %f1906;
	fma.rn.ftz.f32 	%f549, %f3022, %f3057, %f1907;
	mul.ftz.f32 	%f1908, %f3017, %f3056;
	fma.rn.ftz.f32 	%f1909, %f3013, %f3055, %f1908;
	fma.rn.ftz.f32 	%f550, %f3021, %f3057, %f1909;
	mul.ftz.f32 	%f1910, %f3016, %f3056;
	fma.rn.ftz.f32 	%f1911, %f3012, %f3055, %f1910;
	fma.rn.ftz.f32 	%f551, %f3020, %f3057, %f1911;
	mul.ftz.f32 	%f1912, %f3015, %f3056;
	fma.rn.ftz.f32 	%f1913, %f3011, %f3055, %f1912;
	fma.rn.ftz.f32 	%f1914, %f3019, %f3057, %f1913;
	add.ftz.f32 	%f3058, %f3058, %f1914;
	mul.ftz.f32 	%f1915, %f3018, %f3052;
	fma.rn.ftz.f32 	%f1916, %f3014, %f3051, %f1915;
	fma.rn.ftz.f32 	%f553, %f3022, %f3053, %f1916;
	mul.ftz.f32 	%f1917, %f3017, %f3052;
	fma.rn.ftz.f32 	%f1918, %f3013, %f3051, %f1917;
	fma.rn.ftz.f32 	%f554, %f3021, %f3053, %f1918;
	mul.ftz.f32 	%f1919, %f3016, %f3052;
	fma.rn.ftz.f32 	%f1920, %f3012, %f3051, %f1919;
	fma.rn.ftz.f32 	%f555, %f3020, %f3053, %f1920;
	mul.ftz.f32 	%f1921, %f3015, %f3052;
	fma.rn.ftz.f32 	%f1922, %f3011, %f3051, %f1921;
	fma.rn.ftz.f32 	%f1923, %f3019, %f3053, %f1922;
	add.ftz.f32 	%f3054, %f3054, %f1923;
	mov.f32 	%f3051, %f553;
	mov.f32 	%f3052, %f554;
	mov.f32 	%f3053, %f555;
	mov.f32 	%f3055, %f549;
	mov.f32 	%f3056, %f550;
	mov.f32 	%f3057, %f551;
	mov.f32 	%f3059, %f545;
	mov.f32 	%f3060, %f546;
	mov.f32 	%f3061, %f547;

$L__BB0_68:
	add.s32 	%r993, %r993, 1;
	setp.lt.u32 	%p35, %r993, %r351;
	mov.f32 	%f3011, %f3062;
	mov.f32 	%f3012, %f3061;
	mov.f32 	%f3013, %f3060;
	mov.f32 	%f3014, %f3059;
	mov.f32 	%f3015, %f3058;
	mov.f32 	%f3016, %f3057;
	mov.f32 	%f3017, %f3056;
	mov.f32 	%f3018, %f3055;
	mov.f32 	%f3019, %f3054;
	mov.f32 	%f3020, %f3053;
	mov.f32 	%f3021, %f3052;
	mov.f32 	%f3022, %f3051;
	@%p35 bra 	$L__BB0_53;

$L__BB0_69:
	mul.ftz.f32 	%f1924, %f2, %f3060;
	fma.rn.ftz.f32 	%f1925, %f1, %f3059, %f1924;
	fma.rn.ftz.f32 	%f1926, %f3, %f3061, %f1925;
	mul.ftz.f32 	%f1927, %f2, %f3056;
	fma.rn.ftz.f32 	%f1928, %f1, %f3055, %f1927;
	fma.rn.ftz.f32 	%f1929, %f3, %f3057, %f1928;
	mul.ftz.f32 	%f1930, %f2, %f3052;
	fma.rn.ftz.f32 	%f1931, %f1, %f3051, %f1930;
	fma.rn.ftz.f32 	%f1932, %f3, %f3053, %f1931;
	add.ftz.f32 	%f3089, %f3054, %f1932;
	add.ftz.f32 	%f3088, %f3058, %f1929;
	add.ftz.f32 	%f3087, %f3062, %f1926;
	bra.uni 	$L__BB0_71;

$L__BB0_23:
	mov.f32 	%f210, %f1;
	mov.f32 	%f211, %f2;
	mov.f32 	%f212, %f3;

$L__BB0_24:
	// begin inline asm
	call (%r194), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f216, %r194;
	setp.eq.ftz.f32 	%p14, %f216, 0f00000000;
	@%p14 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_25;

$L__BB0_28:
	sub.ftz.f32 	%f2953, %f210, %f3290;
	sub.ftz.f32 	%f2954, %f211, %f3289;
	sub.ftz.f32 	%f2955, %f212, %f3288;
	bra.uni 	$L__BB0_29;

$L__BB0_117:
	mov.f32 	%f3224, %f1;
	mov.f32 	%f3225, %f2;
	mov.f32 	%f3226, %f3;

$L__BB0_118:
	// begin inline asm
	call (%r810), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f966, %r810;
	setp.eq.ftz.f32 	%p58, %f966, 0f00000000;
	@%p58 bra 	$L__BB0_122;
	bra.uni 	$L__BB0_119;

$L__BB0_122:
	fma.rn.ftz.f32 	%f2565, %f767, 0f00000000, %f760;
	fma.rn.ftz.f32 	%f2566, %f768, 0f00000000, %f761;
	fma.rn.ftz.f32 	%f2567, %f769, 0f00000000, %f762;
	neg.ftz.f32 	%f3227, %f2565;
	neg.ftz.f32 	%f3228, %f2566;
	neg.ftz.f32 	%f3229, %f2567;
	bra.uni 	$L__BB0_123;

$L__BB0_70:
	mov.f32 	%f3087, %f1;
	mov.f32 	%f3088, %f2;
	mov.f32 	%f3089, %f3;

$L__BB0_71:
	// begin inline asm
	call (%r502), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f593, %r502;
	setp.eq.ftz.f32 	%p36, %f593, 0f00000000;
	@%p36 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_72;

$L__BB0_75:
	mov.f32 	%f2037, 0f3F800000;
	sub.ftz.f32 	%f2038, %f2037, 0f358637BD;
	mul.ftz.f32 	%f2039, %f2038, 0f3F000000;
	mul.ftz.f32 	%f2040, %f2039, %f2038;
	add.ftz.f32 	%f2041, %f2038, %f2038;
	mul.ftz.f32 	%f2042, %f2041, 0f358637BD;
	mul.ftz.f32 	%f2043, %f387, %f2042;
	fma.rn.ftz.f32 	%f2044, %f383, %f2040, %f2043;
	mul.ftz.f32 	%f2045, %f388, %f2042;
	fma.rn.ftz.f32 	%f2046, %f384, %f2040, %f2045;
	mul.ftz.f32 	%f2047, %f389, %f2042;
	fma.rn.ftz.f32 	%f2048, %f385, %f2040, %f2047;
	fma.rn.ftz.f32 	%f2049, %f392, 0f2B0CBCCC, %f2044;
	fma.rn.ftz.f32 	%f2050, %f394, 0f2B0CBCCC, %f2046;
	fma.rn.ftz.f32 	%f2051, %f396, 0f2B0CBCCC, %f2048;
	neg.ftz.f32 	%f3090, %f2049;
	neg.ftz.f32 	%f3091, %f2050;
	neg.ftz.f32 	%f3092, %f2051;
	bra.uni 	$L__BB0_76;

$L__BB0_25:
	setp.ltu.ftz.f32 	%p15, %f216, 0f3F800000;
	@%p15 bra 	$L__BB0_27;
	bra.uni 	$L__BB0_26;

$L__BB0_27:
	sub.ftz.f32 	%f1429, %f1176, %f1172;
	fma.rn.ftz.f32 	%f1430, %f14, %f216, %f3290;
	fma.rn.ftz.f32 	%f1431, %f17, %f216, %f3289;
	fma.rn.ftz.f32 	%f1432, %f20, %f216, %f3288;
	fma.rn.ftz.f32 	%f1433, %f1429, %f216, %f1172;
	mul.ftz.f32 	%f1434, %f17, %f17;
	fma.rn.ftz.f32 	%f1435, %f14, %f14, %f1434;
	fma.rn.ftz.f32 	%f1436, %f20, %f20, %f1435;
	sub.ftz.f32 	%f1437, %f210, %f1430;
	sub.ftz.f32 	%f1438, %f211, %f1431;
	sub.ftz.f32 	%f1439, %f212, %f1432;
	mul.ftz.f32 	%f1440, %f17, %f1438;
	fma.rn.ftz.f32 	%f1441, %f14, %f1437, %f1440;
	fma.rn.ftz.f32 	%f1442, %f20, %f1439, %f1441;
	div.approx.ftz.f32 	%f1443, %f1442, %f1436;
	mul.ftz.f32 	%f1444, %f14, %f1443;
	mul.ftz.f32 	%f1445, %f17, %f1443;
	mul.ftz.f32 	%f1446, %f20, %f1443;
	sub.ftz.f32 	%f1447, %f1437, %f1444;
	sub.ftz.f32 	%f1448, %f1438, %f1445;
	sub.ftz.f32 	%f1449, %f1439, %f1446;
	mul.ftz.f32 	%f1450, %f1448, %f1448;
	fma.rn.ftz.f32 	%f1451, %f1447, %f1447, %f1450;
	fma.rn.ftz.f32 	%f1452, %f1449, %f1449, %f1451;
	sqrt.approx.ftz.f32 	%f1453, %f1452;
	div.approx.ftz.f32 	%f1454, %f1433, %f1453;
	mul.ftz.f32 	%f1455, %f1447, %f1454;
	mul.ftz.f32 	%f1456, %f1448, %f1454;
	mul.ftz.f32 	%f1457, %f1449, %f1454;
	mul.ftz.f32 	%f1458, %f1436, %f1455;
	mul.ftz.f32 	%f1459, %f1436, %f1456;
	mul.ftz.f32 	%f1460, %f1436, %f1457;
	mul.ftz.f32 	%f1461, %f1429, %f1433;
	mul.ftz.f32 	%f1462, %f14, %f1461;
	mul.ftz.f32 	%f1463, %f17, %f1461;
	mul.ftz.f32 	%f1464, %f20, %f1461;
	sub.ftz.f32 	%f2953, %f1458, %f1462;
	sub.ftz.f32 	%f2954, %f1459, %f1463;
	sub.ftz.f32 	%f2955, %f1460, %f1464;
	bra.uni 	$L__BB0_29;

$L__BB0_119:
	setp.eq.ftz.f32 	%p59, %f966, 0f3F800000;
	add.ftz.f32 	%f967, %f767, %f767;
	add.ftz.f32 	%f968, %f768, %f768;
	add.ftz.f32 	%f969, %f769, %f769;
	@%p59 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_120;

$L__BB0_121:
	add.ftz.f32 	%f3227, %f760, %f967;
	add.ftz.f32 	%f3228, %f761, %f968;
	add.ftz.f32 	%f3229, %f762, %f969;
	bra.uni 	$L__BB0_123;

$L__BB0_72:
	setp.eq.ftz.f32 	%p37, %f593, 0f3F800000;
	@%p37 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	mov.f32 	%f2025, 0f3F800000;
	sub.ftz.f32 	%f2026, %f2025, 0f3F7FFFEF;
	mul.ftz.f32 	%f2027, %f2026, 0f3F000000;
	mul.ftz.f32 	%f2028, %f2027, %f2026;
	add.ftz.f32 	%f2029, %f2026, %f2026;
	mul.ftz.f32 	%f2030, %f2029, 0f3F7FFFEF;
	mul.ftz.f32 	%f2031, %f387, %f2030;
	fma.rn.ftz.f32 	%f2032, %f383, %f2028, %f2031;
	mul.ftz.f32 	%f2033, %f388, %f2030;
	fma.rn.ftz.f32 	%f2034, %f384, %f2028, %f2033;
	mul.ftz.f32 	%f2035, %f389, %f2030;
	fma.rn.ftz.f32 	%f2036, %f385, %f2028, %f2035;
	fma.rn.ftz.f32 	%f3090, %f392, 0f3EFFFFDE, %f2032;
	fma.rn.ftz.f32 	%f3091, %f394, 0f3EFFFFDE, %f2034;
	fma.rn.ftz.f32 	%f3092, %f396, 0f3EFFFFDE, %f2036;
	bra.uni 	$L__BB0_76;

$L__BB0_26:
	add.ftz.f32 	%f1426, %f3290, %f14;
	sub.ftz.f32 	%f2953, %f210, %f1426;
	add.ftz.f32 	%f1427, %f3289, %f17;
	sub.ftz.f32 	%f2954, %f211, %f1427;
	add.ftz.f32 	%f1428, %f3288, %f20;
	sub.ftz.f32 	%f2955, %f212, %f1428;

$L__BB0_29:
	mul.ftz.f32 	%f1465, %f2954, %f2954;
	fma.rn.ftz.f32 	%f1466, %f2953, %f2953, %f1465;
	fma.rn.ftz.f32 	%f1467, %f2955, %f2955, %f1466;
	rsqrt.approx.ftz.f32 	%f1468, %f1467;
	mul.ftz.f32 	%f3296, %f2953, %f1468;
	mul.ftz.f32 	%f3295, %f2954, %f1468;
	mul.ftz.f32 	%f231, %f2955, %f1468;
	// begin inline asm
	call (%r195), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p16, %r195, 0;
	@%p16 bra 	$L__BB0_49;

	// begin inline asm
	call (%r196), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1469), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p17, %r196, 0;
	@%p17 bra 	$L__BB0_48;

	mov.u32 	%r992, 0;

$L__BB0_32:
	.pragma "nounroll";
	// begin inline asm
	call (%rd167), _optix_get_transform_list_handle, (%r992);
	// end inline asm
	// begin inline asm
	call (%r199), _optix_get_transform_type_from_handle, (%rd167);
	// end inline asm
	or.b32  	%r200, %r199, 1;
	setp.eq.s32 	%p18, %r200, 3;
	@%p18 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_33;

$L__BB0_38:
	setp.eq.s32 	%p21, %r199, 2;
	@%p21 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_39;

$L__BB0_42:
	// begin inline asm
	call (%rd239), _optix_get_matrix_motion_transform_from_handle, (%rd167);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r288,%r289,%r290,%r291}, [%rd241];
	// end inline asm
	add.s64 	%rd245, %rd239, 16;
	// begin inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r292,%r293,%r294,%r295}, [%rd244];
	// end inline asm
	add.s64 	%rd248, %rd239, 32;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r296,%r297,%r298,%r299}, [%rd247];
	// end inline asm
	add.s64 	%rd251, %rd239, 48;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r300,%r301,%r302,%r303}, [%rd250];
	// end inline asm
	add.s64 	%rd254, %rd239, 64;
	// begin inline asm
	cvta.to.global.u64 %rd253, %rd254;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r304,%r305,%r306,%r307}, [%rd253];
	// end inline asm
	add.s64 	%rd257, %rd239, 80;
	// begin inline asm
	cvta.to.global.u64 %rd256, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r308,%r309,%r310,%r311}, [%rd256];
	// end inline asm
	add.s64 	%rd260, %rd239, 96;
	// begin inline asm
	cvta.to.global.u64 %rd259, %rd260;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r312,%r313,%r314,%r315}, [%rd259];
	// end inline asm
	add.s64 	%rd263, %rd239, 112;
	// begin inline asm
	cvta.to.global.u64 %rd262, %rd263;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r316,%r317,%r318,%r319}, [%rd262];
	// end inline asm
	mov.b32 	%f1572, %r291;
	mov.b32 	%f1573, %r292;
	and.b32  	%r332, %r290, 65535;
	add.s32 	%r333, %r332, -1;
	cvt.rn.f32.s32 	%f1574, %r333;
	sub.ftz.f32 	%f1575, %f1469, %f1572;
	mul.ftz.f32 	%f1576, %f1575, %f1574;
	sub.ftz.f32 	%f1577, %f1573, %f1572;
	div.approx.ftz.f32 	%f1578, %f1576, %f1577;
	min.ftz.f32 	%f1579, %f1574, %f1578;
	mov.f32 	%f1580, 0f00000000;
	max.ftz.f32 	%f1581, %f1580, %f1579;
	cvt.rmi.ftz.f32.f32 	%f1582, %f1581;
	sub.ftz.f32 	%f291, %f1581, %f1582;
	cvt.rzi.ftz.s32.f32 	%r334, %f1582;
	cvt.s64.s32 	%rd15, %r334;
	mul.wide.s32 	%rd274, %r334, 48;
	add.s64 	%rd266, %rd248, %rd274;
	// begin inline asm
	cvta.to.global.u64 %rd265, %rd266;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r320,%r321,%r322,%r323}, [%rd265];
	// end inline asm
	mov.b32 	%f2981, %r320;
	mov.b32 	%f2982, %r321;
	mov.b32 	%f2983, %r322;
	add.s64 	%rd269, %rd266, 16;
	// begin inline asm
	cvta.to.global.u64 %rd268, %rd269;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r324,%r325,%r326,%r327}, [%rd268];
	// end inline asm
	mov.b32 	%f2978, %r324;
	mov.b32 	%f2979, %r325;
	mov.b32 	%f2980, %r326;
	add.s64 	%rd272, %rd266, 32;
	// begin inline asm
	cvta.to.global.u64 %rd271, %rd272;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r328,%r329,%r330,%r331}, [%rd271];
	// end inline asm
	mov.b32 	%f2975, %r328;
	mov.b32 	%f2976, %r329;
	mov.b32 	%f2977, %r330;
	setp.leu.ftz.f32 	%p23, %f291, 0f00000000;
	@%p23 bra 	$L__BB0_44;

	mov.f32 	%f1583, 0f3F800000;
	sub.ftz.f32 	%f1584, %f1583, %f291;
	mul.lo.s64 	%rd284, %rd15, 48;
	add.s64 	%rd285, %rd239, %rd284;
	add.s64 	%rd276, %rd285, 80;
	// begin inline asm
	cvta.to.global.u64 %rd275, %rd276;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r335,%r336,%r337,%r338}, [%rd275];
	// end inline asm
	mov.b32 	%f1585, %r335;
	mov.b32 	%f1586, %r336;
	mov.b32 	%f1587, %r337;
	mul.ftz.f32 	%f1588, %f291, %f1585;
	mul.ftz.f32 	%f1589, %f291, %f1586;
	mul.ftz.f32 	%f1590, %f291, %f1587;
	fma.rn.ftz.f32 	%f2981, %f1584, %f2981, %f1588;
	fma.rn.ftz.f32 	%f2982, %f1584, %f2982, %f1589;
	fma.rn.ftz.f32 	%f2983, %f1584, %f2983, %f1590;
	add.s64 	%rd279, %rd285, 96;
	// begin inline asm
	cvta.to.global.u64 %rd278, %rd279;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r339,%r340,%r341,%r342}, [%rd278];
	// end inline asm
	mov.b32 	%f1591, %r339;
	mov.b32 	%f1592, %r340;
	mov.b32 	%f1593, %r341;
	mul.ftz.f32 	%f1594, %f291, %f1591;
	mul.ftz.f32 	%f1595, %f291, %f1592;
	mul.ftz.f32 	%f1596, %f291, %f1593;
	fma.rn.ftz.f32 	%f2978, %f1584, %f2978, %f1594;
	fma.rn.ftz.f32 	%f2979, %f1584, %f2979, %f1595;
	fma.rn.ftz.f32 	%f2980, %f1584, %f2980, %f1596;
	add.s64 	%rd282, %rd285, 112;
	// begin inline asm
	cvta.to.global.u64 %rd281, %rd282;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r343,%r344,%r345,%r346}, [%rd281];
	// end inline asm
	mov.b32 	%f1597, %r343;
	mov.b32 	%f1598, %r344;
	mov.b32 	%f1599, %r345;
	mul.ftz.f32 	%f1600, %f291, %f1597;
	mul.ftz.f32 	%f1601, %f291, %f1598;
	mul.ftz.f32 	%f1602, %f291, %f1599;
	fma.rn.ftz.f32 	%f2975, %f1584, %f2975, %f1600;
	fma.rn.ftz.f32 	%f2976, %f1584, %f2976, %f1601;
	fma.rn.ftz.f32 	%f2977, %f1584, %f2977, %f1602;
	bra.uni 	$L__BB0_44;

$L__BB0_33:
	mov.f32 	%f2984, 0f00000000;
	mov.f32 	%f2986, 0f3F800000;
	setp.eq.s32 	%p19, %r199, 4;
	@%p19 bra 	$L__BB0_36;

	setp.ne.s32 	%p20, %r199, 1;
	mov.f32 	%f2985, %f2984;
	mov.f32 	%f2987, %f2984;
	mov.f32 	%f2988, %f2986;
	mov.f32 	%f2989, %f2984;
	mov.f32 	%f2990, %f2986;
	mov.f32 	%f2991, %f2984;
	mov.f32 	%f2992, %f2984;
	@%p20 bra 	$L__BB0_45;

	// begin inline asm
	call (%rd169), _optix_get_static_transform_from_handle, (%rd167);
	// end inline asm
	add.s64 	%rd777, %rd169, 64;
	bra.uni 	$L__BB0_37;

$L__BB0_39:
	// begin inline asm
	call (%rd182), _optix_get_srt_motion_transform_from_handle, (%rd167);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r213,%r214,%r215,%r216}, [%rd184];
	// end inline asm
	add.s64 	%rd188, %rd182, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r217,%r218,%r219,%r220}, [%rd187];
	// end inline asm
	add.s64 	%rd191, %rd182, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r221,%r222,%r223,%r224}, [%rd190];
	// end inline asm
	add.s64 	%rd194, %rd182, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r225,%r226,%r227,%r228}, [%rd193];
	// end inline asm
	add.s64 	%rd197, %rd182, 64;
	// begin inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r229,%r230,%r231,%r232}, [%rd196];
	// end inline asm
	add.s64 	%rd200, %rd182, 80;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r233,%r234,%r235,%r236}, [%rd199];
	// end inline asm
	add.s64 	%rd203, %rd182, 96;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r237,%r238,%r239,%r240}, [%rd202];
	// end inline asm
	add.s64 	%rd206, %rd182, 112;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r241,%r242,%r243,%r244}, [%rd205];
	// end inline asm
	add.s64 	%rd209, %rd182, 128;
	// begin inline asm
	cvta.to.global.u64 %rd208, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r245,%r246,%r247,%r248}, [%rd208];
	// end inline asm
	add.s64 	%rd212, %rd182, 144;
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd212;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r249,%r250,%r251,%r252}, [%rd211];
	// end inline asm
	mov.b32 	%f1481, %r216;
	mov.b32 	%f1482, %r217;
	and.b32  	%r269, %r215, 65535;
	add.s32 	%r270, %r269, -1;
	cvt.rn.f32.s32 	%f1483, %r270;
	sub.ftz.f32 	%f1484, %f1469, %f1481;
	mul.ftz.f32 	%f1485, %f1484, %f1483;
	sub.ftz.f32 	%f1486, %f1482, %f1481;
	div.approx.ftz.f32 	%f1487, %f1485, %f1486;
	min.ftz.f32 	%f1488, %f1483, %f1487;
	mov.f32 	%f1489, 0f00000000;
	max.ftz.f32 	%f1490, %f1489, %f1488;
	cvt.rmi.ftz.f32.f32 	%f1491, %f1490;
	sub.ftz.f32 	%f251, %f1490, %f1491;
	cvt.rzi.ftz.s32.f32 	%r271, %f1491;
	mul.wide.s32 	%rd226, %r271, 64;
	add.s64 	%rd215, %rd191, %rd226;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r253,%r254,%r255,%r256}, [%rd214];
	// end inline asm
	mov.b32 	%f2965, %r253;
	mov.b32 	%f2966, %r254;
	mov.b32 	%f2967, %r255;
	add.s64 	%rd218, %rd215, 16;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r257,%r258,%r259,%r260}, [%rd217];
	// end inline asm
	mov.b32 	%f2968, %r257;
	mov.b32 	%f2969, %r258;
	mov.b32 	%f2970, %r260;
	add.s64 	%rd221, %rd215, 32;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r261,%r262,%r263,%r264}, [%rd220];
	// end inline asm
	mov.b32 	%f2971, %r262;
	mov.b32 	%f2972, %r263;
	mov.b32 	%f2973, %r264;
	add.s64 	%rd224, %rd215, 48;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r265,%r266,%r267,%r268}, [%rd223];
	// end inline asm
	mov.b32 	%f2974, %r265;
	setp.leu.ftz.f32 	%p22, %f251, 0f00000000;
	@%p22 bra 	$L__BB0_41;

	mov.f32 	%f1492, 0f3F800000;
	sub.ftz.f32 	%f1493, %f1492, %f251;
	add.s64 	%rd228, %rd215, 64;
	// begin inline asm
	cvta.to.global.u64 %rd227, %rd228;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r272,%r273,%r274,%r275}, [%rd227];
	// end inline asm
	mov.b32 	%f1494, %r272;
	mov.b32 	%f1495, %r273;
	mov.b32 	%f1496, %r274;
	mul.ftz.f32 	%f1497, %f251, %f1494;
	mul.ftz.f32 	%f1498, %f251, %f1495;
	mul.ftz.f32 	%f1499, %f251, %f1496;
	fma.rn.ftz.f32 	%f2965, %f1493, %f2965, %f1497;
	fma.rn.ftz.f32 	%f2966, %f1493, %f2966, %f1498;
	fma.rn.ftz.f32 	%f2967, %f1493, %f2967, %f1499;
	add.s64 	%rd231, %rd215, 80;
	// begin inline asm
	cvta.to.global.u64 %rd230, %rd231;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r276,%r277,%r278,%r279}, [%rd230];
	// end inline asm
	mov.b32 	%f1500, %r276;
	mov.b32 	%f1501, %r277;
	mov.b32 	%f1502, %r279;
	mul.ftz.f32 	%f1503, %f251, %f1500;
	mul.ftz.f32 	%f1504, %f251, %f1501;
	mul.ftz.f32 	%f1505, %f251, %f1502;
	fma.rn.ftz.f32 	%f2968, %f1493, %f2968, %f1503;
	fma.rn.ftz.f32 	%f2969, %f1493, %f2969, %f1504;
	fma.rn.ftz.f32 	%f2970, %f1493, %f2970, %f1505;
	add.s64 	%rd234, %rd215, 96;
	// begin inline asm
	cvta.to.global.u64 %rd233, %rd234;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r280,%r281,%r282,%r283}, [%rd233];
	// end inline asm
	mov.b32 	%f1506, %r281;
	mov.b32 	%f1507, %r282;
	mov.b32 	%f1508, %r283;
	mul.ftz.f32 	%f1509, %f251, %f1506;
	mul.ftz.f32 	%f1510, %f251, %f1507;
	mul.ftz.f32 	%f1511, %f251, %f1508;
	fma.rn.ftz.f32 	%f1512, %f1493, %f2971, %f1509;
	fma.rn.ftz.f32 	%f1513, %f1493, %f2972, %f1510;
	fma.rn.ftz.f32 	%f1514, %f1493, %f2973, %f1511;
	add.s64 	%rd237, %rd215, 112;
	// begin inline asm
	cvta.to.global.u64 %rd236, %rd237;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r284,%r285,%r286,%r287}, [%rd236];
	// end inline asm
	mov.b32 	%f1515, %r284;
	mul.ftz.f32 	%f1516, %f251, %f1515;
	fma.rn.ftz.f32 	%f1517, %f1493, %f2974, %f1516;
	mul.ftz.f32 	%f1518, %f1513, %f1513;
	fma.rn.ftz.f32 	%f1519, %f1512, %f1512, %f1518;
	fma.rn.ftz.f32 	%f1520, %f1514, %f1514, %f1519;
	fma.rn.ftz.f32 	%f1521, %f1517, %f1517, %f1520;
	rsqrt.approx.ftz.f32 	%f1522, %f1521;
	mul.ftz.f32 	%f2971, %f1512, %f1522;
	mul.ftz.f32 	%f2972, %f1513, %f1522;
	mul.ftz.f32 	%f2973, %f1514, %f1522;
	mul.ftz.f32 	%f2974, %f1522, %f1517;

$L__BB0_41:
	mul.ftz.f32 	%f1523, %f2972, %f2972;
	fma.rn.ftz.f32 	%f1524, %f2971, %f2971, %f1523;
	fma.rn.ftz.f32 	%f1525, %f2973, %f2973, %f1524;
	fma.rn.ftz.f32 	%f1526, %f2974, %f2974, %f1525;
	rcp.approx.ftz.f32 	%f1527, %f1526;
	mul.ftz.f32 	%f1528, %f2971, %f1527;
	mul.ftz.f32 	%f1529, %f2972, %f1527;
	mul.ftz.f32 	%f1530, %f2973, %f1527;
	mul.ftz.f32 	%f1531, %f2974, %f1527;
	mul.ftz.f32 	%f1532, %f2971, %f1528;
	mul.ftz.f32 	%f1533, %f2972, %f1529;
	mul.ftz.f32 	%f1534, %f2973, %f1530;
	mul.ftz.f32 	%f1535, %f2971, %f1529;
	mul.ftz.f32 	%f1536, %f2973, %f1531;
	mul.ftz.f32 	%f1537, %f2971, %f1530;
	mul.ftz.f32 	%f1538, %f2972, %f1531;
	mul.ftz.f32 	%f1539, %f2972, %f1530;
	mul.ftz.f32 	%f1540, %f2971, %f1531;
	sub.ftz.f32 	%f1541, %f1532, %f1533;
	sub.ftz.f32 	%f1542, %f1541, %f1534;
	fma.rn.ftz.f32 	%f1543, %f2974, %f1531, %f1542;
	sub.ftz.f32 	%f1544, %f1535, %f1536;
	add.ftz.f32 	%f1545, %f1544, %f1544;
	add.ftz.f32 	%f1546, %f1537, %f1538;
	add.ftz.f32 	%f1547, %f1546, %f1546;
	add.ftz.f32 	%f1548, %f1535, %f1536;
	add.ftz.f32 	%f1549, %f1548, %f1548;
	sub.ftz.f32 	%f1550, %f1533, %f1532;
	sub.ftz.f32 	%f1551, %f1550, %f1534;
	fma.rn.ftz.f32 	%f1552, %f2974, %f1531, %f1551;
	sub.ftz.f32 	%f1553, %f1539, %f1540;
	add.ftz.f32 	%f1554, %f1553, %f1553;
	sub.ftz.f32 	%f1555, %f1537, %f1538;
	add.ftz.f32 	%f1556, %f1555, %f1555;
	add.ftz.f32 	%f1557, %f1539, %f1540;
	add.ftz.f32 	%f1558, %f1557, %f1557;
	neg.ftz.f32 	%f1559, %f1532;
	sub.ftz.f32 	%f1560, %f1559, %f1533;
	add.ftz.f32 	%f1561, %f1534, %f1560;
	fma.rn.ftz.f32 	%f1562, %f2974, %f1531, %f1561;
	mul.ftz.f32 	%f1563, %f2967, %f1543;
	fma.rn.ftz.f32 	%f1564, %f2969, %f1545, %f1563;
	fma.rn.ftz.f32 	%f2983, %f2970, %f1547, %f1564;
	mul.ftz.f32 	%f1565, %f2969, %f1552;
	fma.rn.ftz.f32 	%f1566, %f2967, %f1549, %f1565;
	fma.rn.ftz.f32 	%f2980, %f2970, %f1554, %f1566;
	mul.ftz.f32 	%f1567, %f2969, %f1558;
	fma.rn.ftz.f32 	%f1568, %f2967, %f1556, %f1567;
	fma.rn.ftz.f32 	%f2977, %f2970, %f1562, %f1568;
	mul.ftz.f32 	%f1569, %f2966, %f1543;
	fma.rn.ftz.f32 	%f2982, %f2968, %f1545, %f1569;
	mul.ftz.f32 	%f1570, %f2968, %f1552;
	fma.rn.ftz.f32 	%f2979, %f2966, %f1549, %f1570;
	mul.ftz.f32 	%f1571, %f2968, %f1558;
	fma.rn.ftz.f32 	%f2976, %f2966, %f1556, %f1571;
	mul.ftz.f32 	%f2981, %f2965, %f1543;
	mul.ftz.f32 	%f2978, %f2965, %f1549;
	mul.ftz.f32 	%f2975, %f2965, %f1556;

$L__BB0_44:
	mul.ftz.f32 	%f1603, %f2976, %f2980;
	mul.ftz.f32 	%f1604, %f2977, %f2979;
	sub.ftz.f32 	%f1605, %f1604, %f1603;
	mul.ftz.f32 	%f1606, %f2981, %f1605;
	mul.ftz.f32 	%f1607, %f2975, %f2980;
	mul.ftz.f32 	%f1608, %f2977, %f2978;
	sub.ftz.f32 	%f1609, %f1608, %f1607;
	mul.ftz.f32 	%f1610, %f1609, %f2982;
	sub.ftz.f32 	%f1611, %f1606, %f1610;
	mul.ftz.f32 	%f1612, %f2975, %f2979;
	mul.ftz.f32 	%f1613, %f2976, %f2978;
	sub.ftz.f32 	%f1614, %f1613, %f1612;
	fma.rn.ftz.f32 	%f1615, %f1614, %f2983, %f1611;
	rcp.approx.ftz.f32 	%f1616, %f1615;
	mul.ftz.f32 	%f2990, %f1605, %f1616;
	mul.ftz.f32 	%f1617, %f2977, %f2982;
	mul.ftz.f32 	%f1618, %f2976, %f2983;
	sub.ftz.f32 	%f1619, %f1618, %f1617;
	mul.ftz.f32 	%f2991, %f1619, %f1616;
	mul.ftz.f32 	%f1620, %f2979, %f2983;
	mul.ftz.f32 	%f1621, %f2980, %f2982;
	sub.ftz.f32 	%f1622, %f1621, %f1620;
	mul.ftz.f32 	%f2992, %f1622, %f1616;
	sub.ftz.f32 	%f1623, %f1607, %f1608;
	mul.ftz.f32 	%f2987, %f1623, %f1616;
	mul.ftz.f32 	%f1624, %f2975, %f2983;
	mul.ftz.f32 	%f1625, %f2977, %f2981;
	sub.ftz.f32 	%f1626, %f1625, %f1624;
	mul.ftz.f32 	%f2988, %f1626, %f1616;
	mul.ftz.f32 	%f1627, %f2980, %f2981;
	mul.ftz.f32 	%f1628, %f2978, %f2983;
	sub.ftz.f32 	%f1629, %f1628, %f1627;
	mul.ftz.f32 	%f2989, %f1629, %f1616;
	mul.ftz.f32 	%f2984, %f1614, %f1616;
	mul.ftz.f32 	%f1630, %f2976, %f2981;
	mul.ftz.f32 	%f1631, %f2975, %f2982;
	sub.ftz.f32 	%f1632, %f1631, %f1630;
	mul.ftz.f32 	%f2985, %f1632, %f1616;
	mul.ftz.f32 	%f1633, %f2978, %f2982;
	mul.ftz.f32 	%f1634, %f2979, %f2981;
	sub.ftz.f32 	%f1635, %f1634, %f1633;
	mul.ftz.f32 	%f2986, %f1635, %f1616;
	bra.uni 	$L__BB0_45;

$L__BB0_36:
	// begin inline asm
	call (%rd777), _optix_get_instance_inverse_transform_from_handle, (%rd167);
	// end inline asm

$L__BB0_37:
	// begin inline asm
	cvta.to.global.u64 %rd173, %rd777;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r201,%r202,%r203,%r204}, [%rd173];
	// end inline asm
	mov.b32 	%f2990, %r201;
	mov.b32 	%f2991, %r202;
	mov.b32 	%f2992, %r203;
	add.s64 	%rd177, %rd777, 16;
	// begin inline asm
	cvta.to.global.u64 %rd176, %rd177;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r205,%r206,%r207,%r208}, [%rd176];
	// end inline asm
	mov.b32 	%f2987, %r205;
	mov.b32 	%f2988, %r206;
	mov.b32 	%f2989, %r207;
	add.s64 	%rd180, %rd777, 32;
	// begin inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r209,%r210,%r211,%r212}, [%rd179];
	// end inline asm
	mov.b32 	%f2984, %r209;
	mov.b32 	%f2985, %r210;
	mov.b32 	%f2986, %r211;

$L__BB0_45:
	setp.eq.s32 	%p24, %r992, 0;
	@%p24 bra 	$L__BB0_47;

	mul.ftz.f32 	%f1636, %f2961, %f2991;
	fma.rn.ftz.f32 	%f1637, %f2958, %f2990, %f1636;
	fma.rn.ftz.f32 	%f337, %f2964, %f2992, %f1637;
	mul.ftz.f32 	%f1638, %f2960, %f2991;
	fma.rn.ftz.f32 	%f1639, %f2957, %f2990, %f1638;
	fma.rn.ftz.f32 	%f338, %f2963, %f2992, %f1639;
	mul.ftz.f32 	%f1640, %f2959, %f2991;
	fma.rn.ftz.f32 	%f1641, %f2956, %f2990, %f1640;
	fma.rn.ftz.f32 	%f2992, %f2962, %f2992, %f1641;
	mul.ftz.f32 	%f1642, %f2961, %f2988;
	fma.rn.ftz.f32 	%f1643, %f2958, %f2987, %f1642;
	fma.rn.ftz.f32 	%f340, %f2964, %f2989, %f1643;
	mul.ftz.f32 	%f1644, %f2960, %f2988;
	fma.rn.ftz.f32 	%f1645, %f2957, %f2987, %f1644;
	fma.rn.ftz.f32 	%f341, %f2963, %f2989, %f1645;
	mul.ftz.f32 	%f1646, %f2959, %f2988;
	fma.rn.ftz.f32 	%f1647, %f2956, %f2987, %f1646;
	fma.rn.ftz.f32 	%f2989, %f2962, %f2989, %f1647;
	mul.ftz.f32 	%f1648, %f2961, %f2985;
	fma.rn.ftz.f32 	%f1649, %f2958, %f2984, %f1648;
	fma.rn.ftz.f32 	%f343, %f2964, %f2986, %f1649;
	mul.ftz.f32 	%f1650, %f2960, %f2985;
	fma.rn.ftz.f32 	%f1651, %f2957, %f2984, %f1650;
	fma.rn.ftz.f32 	%f344, %f2963, %f2986, %f1651;
	mul.ftz.f32 	%f1652, %f2959, %f2985;
	fma.rn.ftz.f32 	%f1653, %f2956, %f2984, %f1652;
	fma.rn.ftz.f32 	%f2986, %f2962, %f2986, %f1653;
	mov.f32 	%f2984, %f343;
	mov.f32 	%f2985, %f344;
	mov.f32 	%f2987, %f340;
	mov.f32 	%f2988, %f341;
	mov.f32 	%f2990, %f337;
	mov.f32 	%f2991, %f338;

$L__BB0_47:
	add.s32 	%r992, %r992, 1;
	setp.lt.u32 	%p25, %r992, %r196;
	mov.f32 	%f2956, %f2992;
	mov.f32 	%f2957, %f2991;
	mov.f32 	%f2958, %f2990;
	mov.f32 	%f2959, %f2989;
	mov.f32 	%f2960, %f2988;
	mov.f32 	%f2961, %f2987;
	mov.f32 	%f2962, %f2986;
	mov.f32 	%f2963, %f2985;
	mov.f32 	%f2964, %f2984;
	@%p25 bra 	$L__BB0_32;

$L__BB0_48:
	mul.ftz.f32 	%f1654, %f3296, %f2990;
	fma.rn.ftz.f32 	%f1655, %f3295, %f2987, %f1654;
	mul.ftz.f32 	%f1656, %f3296, %f2991;
	fma.rn.ftz.f32 	%f1657, %f3295, %f2988, %f1656;
	mul.ftz.f32 	%f1658, %f3296, %f2992;
	fma.rn.ftz.f32 	%f1659, %f3295, %f2989, %f1658;
	fma.rn.ftz.f32 	%f3294, %f231, %f2986, %f1659;
	fma.rn.ftz.f32 	%f3295, %f231, %f2985, %f1657;
	fma.rn.ftz.f32 	%f3296, %f231, %f2984, %f1655;
	bra.uni 	$L__BB0_144;

$L__BB0_49:
	mov.f32 	%f3294, %f231;
	bra.uni 	$L__BB0_144;

$L__BB0_120:
	fma.rn.ftz.f32 	%f2516, %f760, %f966, %f756;
	fma.rn.ftz.f32 	%f2517, %f761, %f966, %f757;
	fma.rn.ftz.f32 	%f2518, %f762, %f966, %f758;
	fma.rn.ftz.f32 	%f2519, %f763, %f966, %f759;
	mul.ftz.f32 	%f2520, %f966, %f966;
	fma.rn.ftz.f32 	%f2521, %f767, %f2520, %f2516;
	fma.rn.ftz.f32 	%f2522, %f768, %f2520, %f2517;
	fma.rn.ftz.f32 	%f2523, %f769, %f2520, %f2518;
	fma.rn.ftz.f32 	%f2524, %f770, %f2520, %f2519;
	add.ftz.f32 	%f2525, %f966, %f966;
	fma.rn.ftz.f32 	%f2526, %f767, %f2525, %f760;
	fma.rn.ftz.f32 	%f2527, %f768, %f2525, %f761;
	fma.rn.ftz.f32 	%f2528, %f769, %f2525, %f762;
	fma.rn.ftz.f32 	%f2529, %f770, %f2525, %f763;
	mul.ftz.f32 	%f2530, %f2527, %f2527;
	fma.rn.ftz.f32 	%f2531, %f2526, %f2526, %f2530;
	fma.rn.ftz.f32 	%f2532, %f2528, %f2528, %f2531;
	sub.ftz.f32 	%f2533, %f3224, %f2521;
	sub.ftz.f32 	%f2534, %f3225, %f2522;
	sub.ftz.f32 	%f2535, %f3226, %f2523;
	mul.ftz.f32 	%f2536, %f2527, %f2534;
	fma.rn.ftz.f32 	%f2537, %f2526, %f2533, %f2536;
	fma.rn.ftz.f32 	%f2538, %f2528, %f2535, %f2537;
	div.approx.ftz.f32 	%f2539, %f2538, %f2532;
	mul.ftz.f32 	%f2540, %f2526, %f2539;
	mul.ftz.f32 	%f2541, %f2527, %f2539;
	mul.ftz.f32 	%f2542, %f2528, %f2539;
	sub.ftz.f32 	%f2543, %f2533, %f2540;
	sub.ftz.f32 	%f2544, %f2534, %f2541;
	sub.ftz.f32 	%f2545, %f2535, %f2542;
	mul.ftz.f32 	%f2546, %f2544, %f2544;
	fma.rn.ftz.f32 	%f2547, %f2543, %f2543, %f2546;
	fma.rn.ftz.f32 	%f2548, %f2545, %f2545, %f2547;
	sqrt.approx.ftz.f32 	%f2549, %f2548;
	div.approx.ftz.f32 	%f2550, %f2524, %f2549;
	mul.ftz.f32 	%f2551, %f2543, %f2550;
	mul.ftz.f32 	%f2552, %f2544, %f2550;
	mul.ftz.f32 	%f2553, %f2545, %f2550;
	mul.ftz.f32 	%f2554, %f968, %f2552;
	fma.rn.ftz.f32 	%f2555, %f967, %f2551, %f2554;
	fma.rn.ftz.f32 	%f2556, %f969, %f2553, %f2555;
	sub.ftz.f32 	%f2557, %f2532, %f2556;
	mul.ftz.f32 	%f2558, %f2551, %f2557;
	mul.ftz.f32 	%f2559, %f2552, %f2557;
	mul.ftz.f32 	%f2560, %f2553, %f2557;
	mul.ftz.f32 	%f2561, %f2529, %f2524;
	mul.ftz.f32 	%f2562, %f2526, %f2561;
	mul.ftz.f32 	%f2563, %f2527, %f2561;
	mul.ftz.f32 	%f2564, %f2528, %f2561;
	sub.ftz.f32 	%f3227, %f2558, %f2562;
	sub.ftz.f32 	%f3228, %f2559, %f2563;
	sub.ftz.f32 	%f3229, %f2560, %f2564;

$L__BB0_123:
	mul.ftz.f32 	%f2568, %f3228, %f3228;
	fma.rn.ftz.f32 	%f2569, %f3227, %f3227, %f2568;
	fma.rn.ftz.f32 	%f2570, %f3229, %f3229, %f2569;
	rsqrt.approx.ftz.f32 	%f2571, %f2570;
	mul.ftz.f32 	%f3296, %f3227, %f2571;
	mul.ftz.f32 	%f3295, %f3228, %f2571;
	mul.ftz.f32 	%f984, %f3229, %f2571;
	// begin inline asm
	call (%r811), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p60, %r811, 0;
	@%p60 bra 	$L__BB0_143;

	// begin inline asm
	call (%r812), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2572), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p61, %r812, 0;
	@%p61 bra 	$L__BB0_142;

	mov.u32 	%r996, 0;

$L__BB0_126:
	.pragma "nounroll";
	// begin inline asm
	call (%rd647), _optix_get_transform_list_handle, (%r996);
	// end inline asm
	// begin inline asm
	call (%r815), _optix_get_transform_type_from_handle, (%rd647);
	// end inline asm
	or.b32  	%r816, %r815, 1;
	setp.eq.s32 	%p62, %r816, 3;
	@%p62 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_127;

$L__BB0_132:
	setp.eq.s32 	%p65, %r815, 2;
	@%p65 bra 	$L__BB0_136;
	bra.uni 	$L__BB0_133;

$L__BB0_136:
	// begin inline asm
	call (%rd719), _optix_get_matrix_motion_transform_from_handle, (%rd647);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd721, %rd719;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r904,%r905,%r906,%r907}, [%rd721];
	// end inline asm
	add.s64 	%rd725, %rd719, 16;
	// begin inline asm
	cvta.to.global.u64 %rd724, %rd725;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r908,%r909,%r910,%r911}, [%rd724];
	// end inline asm
	add.s64 	%rd728, %rd719, 32;
	// begin inline asm
	cvta.to.global.u64 %rd727, %rd728;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r912,%r913,%r914,%r915}, [%rd727];
	// end inline asm
	add.s64 	%rd731, %rd719, 48;
	// begin inline asm
	cvta.to.global.u64 %rd730, %rd731;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r916,%r917,%r918,%r919}, [%rd730];
	// end inline asm
	add.s64 	%rd734, %rd719, 64;
	// begin inline asm
	cvta.to.global.u64 %rd733, %rd734;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r920,%r921,%r922,%r923}, [%rd733];
	// end inline asm
	add.s64 	%rd737, %rd719, 80;
	// begin inline asm
	cvta.to.global.u64 %rd736, %rd737;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r924,%r925,%r926,%r927}, [%rd736];
	// end inline asm
	add.s64 	%rd740, %rd719, 96;
	// begin inline asm
	cvta.to.global.u64 %rd739, %rd740;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r928,%r929,%r930,%r931}, [%rd739];
	// end inline asm
	add.s64 	%rd743, %rd719, 112;
	// begin inline asm
	cvta.to.global.u64 %rd742, %rd743;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r932,%r933,%r934,%r935}, [%rd742];
	// end inline asm
	mov.b32 	%f2675, %r907;
	mov.b32 	%f2676, %r908;
	and.b32  	%r948, %r906, 65535;
	add.s32 	%r949, %r948, -1;
	cvt.rn.f32.s32 	%f2677, %r949;
	sub.ftz.f32 	%f2678, %f2572, %f2675;
	mul.ftz.f32 	%f2679, %f2678, %f2677;
	sub.ftz.f32 	%f2680, %f2676, %f2675;
	div.approx.ftz.f32 	%f2681, %f2679, %f2680;
	min.ftz.f32 	%f2682, %f2677, %f2681;
	mov.f32 	%f2683, 0f00000000;
	max.ftz.f32 	%f2684, %f2683, %f2682;
	cvt.rmi.ftz.f32.f32 	%f2685, %f2684;
	sub.ftz.f32 	%f1044, %f2684, %f2685;
	cvt.rzi.ftz.s32.f32 	%r950, %f2685;
	cvt.s64.s32 	%rd43, %r950;
	mul.wide.s32 	%rd754, %r950, 48;
	add.s64 	%rd746, %rd728, %rd754;
	// begin inline asm
	cvta.to.global.u64 %rd745, %rd746;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r936,%r937,%r938,%r939}, [%rd745];
	// end inline asm
	mov.b32 	%f3255, %r936;
	mov.b32 	%f3256, %r937;
	mov.b32 	%f3257, %r938;
	add.s64 	%rd749, %rd746, 16;
	// begin inline asm
	cvta.to.global.u64 %rd748, %rd749;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r940,%r941,%r942,%r943}, [%rd748];
	// end inline asm
	mov.b32 	%f3252, %r940;
	mov.b32 	%f3253, %r941;
	mov.b32 	%f3254, %r942;
	add.s64 	%rd752, %rd746, 32;
	// begin inline asm
	cvta.to.global.u64 %rd751, %rd752;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r944,%r945,%r946,%r947}, [%rd751];
	// end inline asm
	mov.b32 	%f3249, %r944;
	mov.b32 	%f3250, %r945;
	mov.b32 	%f3251, %r946;
	setp.leu.ftz.f32 	%p67, %f1044, 0f00000000;
	@%p67 bra 	$L__BB0_138;

	mov.f32 	%f2686, 0f3F800000;
	sub.ftz.f32 	%f2687, %f2686, %f1044;
	mul.lo.s64 	%rd764, %rd43, 48;
	add.s64 	%rd765, %rd719, %rd764;
	add.s64 	%rd756, %rd765, 80;
	// begin inline asm
	cvta.to.global.u64 %rd755, %rd756;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r951,%r952,%r953,%r954}, [%rd755];
	// end inline asm
	mov.b32 	%f2688, %r951;
	mov.b32 	%f2689, %r952;
	mov.b32 	%f2690, %r953;
	mul.ftz.f32 	%f2691, %f1044, %f2688;
	mul.ftz.f32 	%f2692, %f1044, %f2689;
	mul.ftz.f32 	%f2693, %f1044, %f2690;
	fma.rn.ftz.f32 	%f3255, %f2687, %f3255, %f2691;
	fma.rn.ftz.f32 	%f3256, %f2687, %f3256, %f2692;
	fma.rn.ftz.f32 	%f3257, %f2687, %f3257, %f2693;
	add.s64 	%rd759, %rd765, 96;
	// begin inline asm
	cvta.to.global.u64 %rd758, %rd759;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r955,%r956,%r957,%r958}, [%rd758];
	// end inline asm
	mov.b32 	%f2694, %r955;
	mov.b32 	%f2695, %r956;
	mov.b32 	%f2696, %r957;
	mul.ftz.f32 	%f2697, %f1044, %f2694;
	mul.ftz.f32 	%f2698, %f1044, %f2695;
	mul.ftz.f32 	%f2699, %f1044, %f2696;
	fma.rn.ftz.f32 	%f3252, %f2687, %f3252, %f2697;
	fma.rn.ftz.f32 	%f3253, %f2687, %f3253, %f2698;
	fma.rn.ftz.f32 	%f3254, %f2687, %f3254, %f2699;
	add.s64 	%rd762, %rd765, 112;
	// begin inline asm
	cvta.to.global.u64 %rd761, %rd762;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r959,%r960,%r961,%r962}, [%rd761];
	// end inline asm
	mov.b32 	%f2700, %r959;
	mov.b32 	%f2701, %r960;
	mov.b32 	%f2702, %r961;
	mul.ftz.f32 	%f2703, %f1044, %f2700;
	mul.ftz.f32 	%f2704, %f1044, %f2701;
	mul.ftz.f32 	%f2705, %f1044, %f2702;
	fma.rn.ftz.f32 	%f3249, %f2687, %f3249, %f2703;
	fma.rn.ftz.f32 	%f3250, %f2687, %f3250, %f2704;
	fma.rn.ftz.f32 	%f3251, %f2687, %f3251, %f2705;
	bra.uni 	$L__BB0_138;

$L__BB0_127:
	mov.f32 	%f3258, 0f00000000;
	mov.f32 	%f3260, 0f3F800000;
	setp.eq.s32 	%p63, %r815, 4;
	@%p63 bra 	$L__BB0_130;

	setp.ne.s32 	%p64, %r815, 1;
	mov.f32 	%f3259, %f3258;
	mov.f32 	%f3261, %f3258;
	mov.f32 	%f3262, %f3260;
	mov.f32 	%f3263, %f3258;
	mov.f32 	%f3264, %f3260;
	mov.f32 	%f3265, %f3258;
	mov.f32 	%f3266, %f3258;
	@%p64 bra 	$L__BB0_139;

	// begin inline asm
	call (%rd649), _optix_get_static_transform_from_handle, (%rd647);
	// end inline asm
	add.s64 	%rd781, %rd649, 64;
	bra.uni 	$L__BB0_131;

$L__BB0_133:
	// begin inline asm
	call (%rd662), _optix_get_srt_motion_transform_from_handle, (%rd647);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd664, %rd662;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r829,%r830,%r831,%r832}, [%rd664];
	// end inline asm
	add.s64 	%rd668, %rd662, 16;
	// begin inline asm
	cvta.to.global.u64 %rd667, %rd668;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r833,%r834,%r835,%r836}, [%rd667];
	// end inline asm
	add.s64 	%rd671, %rd662, 32;
	// begin inline asm
	cvta.to.global.u64 %rd670, %rd671;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r837,%r838,%r839,%r840}, [%rd670];
	// end inline asm
	add.s64 	%rd674, %rd662, 48;
	// begin inline asm
	cvta.to.global.u64 %rd673, %rd674;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r841,%r842,%r843,%r844}, [%rd673];
	// end inline asm
	add.s64 	%rd677, %rd662, 64;
	// begin inline asm
	cvta.to.global.u64 %rd676, %rd677;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r845,%r846,%r847,%r848}, [%rd676];
	// end inline asm
	add.s64 	%rd680, %rd662, 80;
	// begin inline asm
	cvta.to.global.u64 %rd679, %rd680;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r849,%r850,%r851,%r852}, [%rd679];
	// end inline asm
	add.s64 	%rd683, %rd662, 96;
	// begin inline asm
	cvta.to.global.u64 %rd682, %rd683;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r853,%r854,%r855,%r856}, [%rd682];
	// end inline asm
	add.s64 	%rd686, %rd662, 112;
	// begin inline asm
	cvta.to.global.u64 %rd685, %rd686;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r857,%r858,%r859,%r860}, [%rd685];
	// end inline asm
	add.s64 	%rd689, %rd662, 128;
	// begin inline asm
	cvta.to.global.u64 %rd688, %rd689;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r861,%r862,%r863,%r864}, [%rd688];
	// end inline asm
	add.s64 	%rd692, %rd662, 144;
	// begin inline asm
	cvta.to.global.u64 %rd691, %rd692;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r865,%r866,%r867,%r868}, [%rd691];
	// end inline asm
	mov.b32 	%f2584, %r832;
	mov.b32 	%f2585, %r833;
	and.b32  	%r885, %r831, 65535;
	add.s32 	%r886, %r885, -1;
	cvt.rn.f32.s32 	%f2586, %r886;
	sub.ftz.f32 	%f2587, %f2572, %f2584;
	mul.ftz.f32 	%f2588, %f2587, %f2586;
	sub.ftz.f32 	%f2589, %f2585, %f2584;
	div.approx.ftz.f32 	%f2590, %f2588, %f2589;
	min.ftz.f32 	%f2591, %f2586, %f2590;
	mov.f32 	%f2592, 0f00000000;
	max.ftz.f32 	%f2593, %f2592, %f2591;
	cvt.rmi.ftz.f32.f32 	%f2594, %f2593;
	sub.ftz.f32 	%f1004, %f2593, %f2594;
	cvt.rzi.ftz.s32.f32 	%r887, %f2594;
	mul.wide.s32 	%rd706, %r887, 64;
	add.s64 	%rd695, %rd671, %rd706;
	// begin inline asm
	cvta.to.global.u64 %rd694, %rd695;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r869,%r870,%r871,%r872}, [%rd694];
	// end inline asm
	mov.b32 	%f3239, %r869;
	mov.b32 	%f3240, %r870;
	mov.b32 	%f3241, %r871;
	add.s64 	%rd698, %rd695, 16;
	// begin inline asm
	cvta.to.global.u64 %rd697, %rd698;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r873,%r874,%r875,%r876}, [%rd697];
	// end inline asm
	mov.b32 	%f3242, %r873;
	mov.b32 	%f3243, %r874;
	mov.b32 	%f3244, %r876;
	add.s64 	%rd701, %rd695, 32;
	// begin inline asm
	cvta.to.global.u64 %rd700, %rd701;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r877,%r878,%r879,%r880}, [%rd700];
	// end inline asm
	mov.b32 	%f3245, %r878;
	mov.b32 	%f3246, %r879;
	mov.b32 	%f3247, %r880;
	add.s64 	%rd704, %rd695, 48;
	// begin inline asm
	cvta.to.global.u64 %rd703, %rd704;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r881,%r882,%r883,%r884}, [%rd703];
	// end inline asm
	mov.b32 	%f3248, %r881;
	setp.leu.ftz.f32 	%p66, %f1004, 0f00000000;
	@%p66 bra 	$L__BB0_135;

	mov.f32 	%f2595, 0f3F800000;
	sub.ftz.f32 	%f2596, %f2595, %f1004;
	add.s64 	%rd708, %rd695, 64;
	// begin inline asm
	cvta.to.global.u64 %rd707, %rd708;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r888,%r889,%r890,%r891}, [%rd707];
	// end inline asm
	mov.b32 	%f2597, %r888;
	mov.b32 	%f2598, %r889;
	mov.b32 	%f2599, %r890;
	mul.ftz.f32 	%f2600, %f1004, %f2597;
	mul.ftz.f32 	%f2601, %f1004, %f2598;
	mul.ftz.f32 	%f2602, %f1004, %f2599;
	fma.rn.ftz.f32 	%f3239, %f2596, %f3239, %f2600;
	fma.rn.ftz.f32 	%f3240, %f2596, %f3240, %f2601;
	fma.rn.ftz.f32 	%f3241, %f2596, %f3241, %f2602;
	add.s64 	%rd711, %rd695, 80;
	// begin inline asm
	cvta.to.global.u64 %rd710, %rd711;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r892,%r893,%r894,%r895}, [%rd710];
	// end inline asm
	mov.b32 	%f2603, %r892;
	mov.b32 	%f2604, %r893;
	mov.b32 	%f2605, %r895;
	mul.ftz.f32 	%f2606, %f1004, %f2603;
	mul.ftz.f32 	%f2607, %f1004, %f2604;
	mul.ftz.f32 	%f2608, %f1004, %f2605;
	fma.rn.ftz.f32 	%f3242, %f2596, %f3242, %f2606;
	fma.rn.ftz.f32 	%f3243, %f2596, %f3243, %f2607;
	fma.rn.ftz.f32 	%f3244, %f2596, %f3244, %f2608;
	add.s64 	%rd714, %rd695, 96;
	// begin inline asm
	cvta.to.global.u64 %rd713, %rd714;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r896,%r897,%r898,%r899}, [%rd713];
	// end inline asm
	mov.b32 	%f2609, %r897;
	mov.b32 	%f2610, %r898;
	mov.b32 	%f2611, %r899;
	mul.ftz.f32 	%f2612, %f1004, %f2609;
	mul.ftz.f32 	%f2613, %f1004, %f2610;
	mul.ftz.f32 	%f2614, %f1004, %f2611;
	fma.rn.ftz.f32 	%f2615, %f2596, %f3245, %f2612;
	fma.rn.ftz.f32 	%f2616, %f2596, %f3246, %f2613;
	fma.rn.ftz.f32 	%f2617, %f2596, %f3247, %f2614;
	add.s64 	%rd717, %rd695, 112;
	// begin inline asm
	cvta.to.global.u64 %rd716, %rd717;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r900,%r901,%r902,%r903}, [%rd716];
	// end inline asm
	mov.b32 	%f2618, %r900;
	mul.ftz.f32 	%f2619, %f1004, %f2618;
	fma.rn.ftz.f32 	%f2620, %f2596, %f3248, %f2619;
	mul.ftz.f32 	%f2621, %f2616, %f2616;
	fma.rn.ftz.f32 	%f2622, %f2615, %f2615, %f2621;
	fma.rn.ftz.f32 	%f2623, %f2617, %f2617, %f2622;
	fma.rn.ftz.f32 	%f2624, %f2620, %f2620, %f2623;
	rsqrt.approx.ftz.f32 	%f2625, %f2624;
	mul.ftz.f32 	%f3245, %f2615, %f2625;
	mul.ftz.f32 	%f3246, %f2616, %f2625;
	mul.ftz.f32 	%f3247, %f2617, %f2625;
	mul.ftz.f32 	%f3248, %f2625, %f2620;

$L__BB0_135:
	mul.ftz.f32 	%f2626, %f3246, %f3246;
	fma.rn.ftz.f32 	%f2627, %f3245, %f3245, %f2626;
	fma.rn.ftz.f32 	%f2628, %f3247, %f3247, %f2627;
	fma.rn.ftz.f32 	%f2629, %f3248, %f3248, %f2628;
	rcp.approx.ftz.f32 	%f2630, %f2629;
	mul.ftz.f32 	%f2631, %f3245, %f2630;
	mul.ftz.f32 	%f2632, %f3246, %f2630;
	mul.ftz.f32 	%f2633, %f3247, %f2630;
	mul.ftz.f32 	%f2634, %f3248, %f2630;
	mul.ftz.f32 	%f2635, %f3245, %f2631;
	mul.ftz.f32 	%f2636, %f3246, %f2632;
	mul.ftz.f32 	%f2637, %f3247, %f2633;
	mul.ftz.f32 	%f2638, %f3245, %f2632;
	mul.ftz.f32 	%f2639, %f3247, %f2634;
	mul.ftz.f32 	%f2640, %f3245, %f2633;
	mul.ftz.f32 	%f2641, %f3246, %f2634;
	mul.ftz.f32 	%f2642, %f3246, %f2633;
	mul.ftz.f32 	%f2643, %f3245, %f2634;
	sub.ftz.f32 	%f2644, %f2635, %f2636;
	sub.ftz.f32 	%f2645, %f2644, %f2637;
	fma.rn.ftz.f32 	%f2646, %f3248, %f2634, %f2645;
	sub.ftz.f32 	%f2647, %f2638, %f2639;
	add.ftz.f32 	%f2648, %f2647, %f2647;
	add.ftz.f32 	%f2649, %f2640, %f2641;
	add.ftz.f32 	%f2650, %f2649, %f2649;
	add.ftz.f32 	%f2651, %f2638, %f2639;
	add.ftz.f32 	%f2652, %f2651, %f2651;
	sub.ftz.f32 	%f2653, %f2636, %f2635;
	sub.ftz.f32 	%f2654, %f2653, %f2637;
	fma.rn.ftz.f32 	%f2655, %f3248, %f2634, %f2654;
	sub.ftz.f32 	%f2656, %f2642, %f2643;
	add.ftz.f32 	%f2657, %f2656, %f2656;
	sub.ftz.f32 	%f2658, %f2640, %f2641;
	add.ftz.f32 	%f2659, %f2658, %f2658;
	add.ftz.f32 	%f2660, %f2642, %f2643;
	add.ftz.f32 	%f2661, %f2660, %f2660;
	neg.ftz.f32 	%f2662, %f2635;
	sub.ftz.f32 	%f2663, %f2662, %f2636;
	add.ftz.f32 	%f2664, %f2637, %f2663;
	fma.rn.ftz.f32 	%f2665, %f3248, %f2634, %f2664;
	mul.ftz.f32 	%f2666, %f3241, %f2646;
	fma.rn.ftz.f32 	%f2667, %f3243, %f2648, %f2666;
	fma.rn.ftz.f32 	%f3257, %f3244, %f2650, %f2667;
	mul.ftz.f32 	%f2668, %f3243, %f2655;
	fma.rn.ftz.f32 	%f2669, %f3241, %f2652, %f2668;
	fma.rn.ftz.f32 	%f3254, %f3244, %f2657, %f2669;
	mul.ftz.f32 	%f2670, %f3243, %f2661;
	fma.rn.ftz.f32 	%f2671, %f3241, %f2659, %f2670;
	fma.rn.ftz.f32 	%f3251, %f3244, %f2665, %f2671;
	mul.ftz.f32 	%f2672, %f3240, %f2646;
	fma.rn.ftz.f32 	%f3256, %f3242, %f2648, %f2672;
	mul.ftz.f32 	%f2673, %f3242, %f2655;
	fma.rn.ftz.f32 	%f3253, %f3240, %f2652, %f2673;
	mul.ftz.f32 	%f2674, %f3242, %f2661;
	fma.rn.ftz.f32 	%f3250, %f3240, %f2659, %f2674;
	mul.ftz.f32 	%f3255, %f3239, %f2646;
	mul.ftz.f32 	%f3252, %f3239, %f2652;
	mul.ftz.f32 	%f3249, %f3239, %f2659;

$L__BB0_138:
	mul.ftz.f32 	%f2706, %f3250, %f3254;
	mul.ftz.f32 	%f2707, %f3251, %f3253;
	sub.ftz.f32 	%f2708, %f2707, %f2706;
	mul.ftz.f32 	%f2709, %f3255, %f2708;
	mul.ftz.f32 	%f2710, %f3249, %f3254;
	mul.ftz.f32 	%f2711, %f3251, %f3252;
	sub.ftz.f32 	%f2712, %f2711, %f2710;
	mul.ftz.f32 	%f2713, %f2712, %f3256;
	sub.ftz.f32 	%f2714, %f2709, %f2713;
	mul.ftz.f32 	%f2715, %f3249, %f3253;
	mul.ftz.f32 	%f2716, %f3250, %f3252;
	sub.ftz.f32 	%f2717, %f2716, %f2715;
	fma.rn.ftz.f32 	%f2718, %f2717, %f3257, %f2714;
	rcp.approx.ftz.f32 	%f2719, %f2718;
	mul.ftz.f32 	%f3264, %f2708, %f2719;
	mul.ftz.f32 	%f2720, %f3251, %f3256;
	mul.ftz.f32 	%f2721, %f3250, %f3257;
	sub.ftz.f32 	%f2722, %f2721, %f2720;
	mul.ftz.f32 	%f3265, %f2722, %f2719;
	mul.ftz.f32 	%f2723, %f3253, %f3257;
	mul.ftz.f32 	%f2724, %f3254, %f3256;
	sub.ftz.f32 	%f2725, %f2724, %f2723;
	mul.ftz.f32 	%f3266, %f2725, %f2719;
	sub.ftz.f32 	%f2726, %f2710, %f2711;
	mul.ftz.f32 	%f3261, %f2726, %f2719;
	mul.ftz.f32 	%f2727, %f3249, %f3257;
	mul.ftz.f32 	%f2728, %f3251, %f3255;
	sub.ftz.f32 	%f2729, %f2728, %f2727;
	mul.ftz.f32 	%f3262, %f2729, %f2719;
	mul.ftz.f32 	%f2730, %f3254, %f3255;
	mul.ftz.f32 	%f2731, %f3252, %f3257;
	sub.ftz.f32 	%f2732, %f2731, %f2730;
	mul.ftz.f32 	%f3263, %f2732, %f2719;
	mul.ftz.f32 	%f3258, %f2717, %f2719;
	mul.ftz.f32 	%f2733, %f3250, %f3255;
	mul.ftz.f32 	%f2734, %f3249, %f3256;
	sub.ftz.f32 	%f2735, %f2734, %f2733;
	mul.ftz.f32 	%f3259, %f2735, %f2719;
	mul.ftz.f32 	%f2736, %f3252, %f3256;
	mul.ftz.f32 	%f2737, %f3253, %f3255;
	sub.ftz.f32 	%f2738, %f2737, %f2736;
	mul.ftz.f32 	%f3260, %f2738, %f2719;
	bra.uni 	$L__BB0_139;

$L__BB0_130:
	// begin inline asm
	call (%rd781), _optix_get_instance_inverse_transform_from_handle, (%rd647);
	// end inline asm

$L__BB0_131:
	// begin inline asm
	cvta.to.global.u64 %rd653, %rd781;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r817,%r818,%r819,%r820}, [%rd653];
	// end inline asm
	mov.b32 	%f3264, %r817;
	mov.b32 	%f3265, %r818;
	mov.b32 	%f3266, %r819;
	add.s64 	%rd657, %rd781, 16;
	// begin inline asm
	cvta.to.global.u64 %rd656, %rd657;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r821,%r822,%r823,%r824}, [%rd656];
	// end inline asm
	mov.b32 	%f3261, %r821;
	mov.b32 	%f3262, %r822;
	mov.b32 	%f3263, %r823;
	add.s64 	%rd660, %rd781, 32;
	// begin inline asm
	cvta.to.global.u64 %rd659, %rd660;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r825,%r826,%r827,%r828}, [%rd659];
	// end inline asm
	mov.b32 	%f3258, %r825;
	mov.b32 	%f3259, %r826;
	mov.b32 	%f3260, %r827;

$L__BB0_139:
	setp.eq.s32 	%p68, %r996, 0;
	@%p68 bra 	$L__BB0_141;

	mul.ftz.f32 	%f2739, %f3235, %f3265;
	fma.rn.ftz.f32 	%f2740, %f3232, %f3264, %f2739;
	fma.rn.ftz.f32 	%f1090, %f3238, %f3266, %f2740;
	mul.ftz.f32 	%f2741, %f3234, %f3265;
	fma.rn.ftz.f32 	%f2742, %f3231, %f3264, %f2741;
	fma.rn.ftz.f32 	%f1091, %f3237, %f3266, %f2742;
	mul.ftz.f32 	%f2743, %f3233, %f3265;
	fma.rn.ftz.f32 	%f2744, %f3230, %f3264, %f2743;
	fma.rn.ftz.f32 	%f3266, %f3236, %f3266, %f2744;
	mul.ftz.f32 	%f2745, %f3235, %f3262;
	fma.rn.ftz.f32 	%f2746, %f3232, %f3261, %f2745;
	fma.rn.ftz.f32 	%f1093, %f3238, %f3263, %f2746;
	mul.ftz.f32 	%f2747, %f3234, %f3262;
	fma.rn.ftz.f32 	%f2748, %f3231, %f3261, %f2747;
	fma.rn.ftz.f32 	%f1094, %f3237, %f3263, %f2748;
	mul.ftz.f32 	%f2749, %f3233, %f3262;
	fma.rn.ftz.f32 	%f2750, %f3230, %f3261, %f2749;
	fma.rn.ftz.f32 	%f3263, %f3236, %f3263, %f2750;
	mul.ftz.f32 	%f2751, %f3235, %f3259;
	fma.rn.ftz.f32 	%f2752, %f3232, %f3258, %f2751;
	fma.rn.ftz.f32 	%f1096, %f3238, %f3260, %f2752;
	mul.ftz.f32 	%f2753, %f3234, %f3259;
	fma.rn.ftz.f32 	%f2754, %f3231, %f3258, %f2753;
	fma.rn.ftz.f32 	%f1097, %f3237, %f3260, %f2754;
	mul.ftz.f32 	%f2755, %f3233, %f3259;
	fma.rn.ftz.f32 	%f2756, %f3230, %f3258, %f2755;
	fma.rn.ftz.f32 	%f3260, %f3236, %f3260, %f2756;
	mov.f32 	%f3258, %f1096;
	mov.f32 	%f3259, %f1097;
	mov.f32 	%f3261, %f1093;
	mov.f32 	%f3262, %f1094;
	mov.f32 	%f3264, %f1090;
	mov.f32 	%f3265, %f1091;

$L__BB0_141:
	add.s32 	%r996, %r996, 1;
	setp.lt.u32 	%p69, %r996, %r812;
	mov.f32 	%f3230, %f3266;
	mov.f32 	%f3231, %f3265;
	mov.f32 	%f3232, %f3264;
	mov.f32 	%f3233, %f3263;
	mov.f32 	%f3234, %f3262;
	mov.f32 	%f3235, %f3261;
	mov.f32 	%f3236, %f3260;
	mov.f32 	%f3237, %f3259;
	mov.f32 	%f3238, %f3258;
	@%p69 bra 	$L__BB0_126;

$L__BB0_142:
	mul.ftz.f32 	%f2757, %f3296, %f3264;
	fma.rn.ftz.f32 	%f2758, %f3295, %f3261, %f2757;
	mul.ftz.f32 	%f2759, %f3296, %f3265;
	fma.rn.ftz.f32 	%f2760, %f3295, %f3262, %f2759;
	mul.ftz.f32 	%f2761, %f3296, %f3266;
	fma.rn.ftz.f32 	%f2762, %f3295, %f3263, %f2761;
	fma.rn.ftz.f32 	%f3294, %f984, %f3260, %f2762;
	fma.rn.ftz.f32 	%f3295, %f984, %f3259, %f2760;
	fma.rn.ftz.f32 	%f3296, %f984, %f3258, %f2758;
	bra.uni 	$L__BB0_144;

$L__BB0_143:
	mov.f32 	%f3294, %f984;
	bra.uni 	$L__BB0_144;

$L__BB0_73:
	mul.ftz.f32 	%f1933, %f593, %f593;
	mul.ftz.f32 	%f1934, %f1933, 0f3E2AAAAB;
	mul.ftz.f32 	%f1935, %f1934, %f593;
	sub.ftz.f32 	%f1936, %f593, %f1933;
	fma.rn.ftz.f32 	%f1937, %f1936, 0f3F000000, %f1935;
	mul.ftz.f32 	%f1938, %f1935, 0f40800000;
	sub.ftz.f32 	%f1939, %f1933, %f1938;
	fma.rn.ftz.f32 	%f1940, %f383, %f1937, %f379;
	fma.rn.ftz.f32 	%f1941, %f384, %f1937, %f380;
	fma.rn.ftz.f32 	%f1942, %f385, %f1937, %f381;
	fma.rn.ftz.f32 	%f1943, %f386, %f1937, %f382;
	fma.rn.ftz.f32 	%f1944, %f387, %f1939, %f1940;
	fma.rn.ftz.f32 	%f1945, %f388, %f1939, %f1941;
	fma.rn.ftz.f32 	%f1946, %f389, %f1939, %f1942;
	fma.rn.ftz.f32 	%f1947, %f390, %f1939, %f1943;
	fma.rn.ftz.f32 	%f1948, %f392, %f1935, %f1944;
	fma.rn.ftz.f32 	%f1949, %f394, %f1935, %f1945;
	fma.rn.ftz.f32 	%f1950, %f396, %f1935, %f1946;
	fma.rn.ftz.f32 	%f1951, %f397, %f1935, %f1947;
	mov.f32 	%f1952, 0f3F800000;
	sub.ftz.f32 	%f1953, %f1952, %f593;
	mul.ftz.f32 	%f1954, %f1953, 0f3F000000;
	mul.ftz.f32 	%f1955, %f1953, %f1954;
	add.ftz.f32 	%f1956, %f1953, %f1953;
	mul.ftz.f32 	%f1957, %f1956, %f593;
	mul.ftz.f32 	%f1958, %f387, %f1957;
	mul.ftz.f32 	%f1959, %f388, %f1957;
	mul.ftz.f32 	%f1960, %f389, %f1957;
	mul.ftz.f32 	%f1961, %f390, %f1957;
	fma.rn.ftz.f32 	%f1962, %f383, %f1955, %f1958;
	fma.rn.ftz.f32 	%f1963, %f384, %f1955, %f1959;
	fma.rn.ftz.f32 	%f1964, %f385, %f1955, %f1960;
	fma.rn.ftz.f32 	%f1965, %f386, %f1955, %f1961;
	mul.ftz.f32 	%f1966, %f593, 0f3F000000;
	mul.ftz.f32 	%f1967, %f1966, %f593;
	fma.rn.ftz.f32 	%f1968, %f392, %f1967, %f1962;
	fma.rn.ftz.f32 	%f1969, %f394, %f1967, %f1963;
	fma.rn.ftz.f32 	%f1970, %f396, %f1967, %f1964;
	fma.rn.ftz.f32 	%f1971, %f397, %f1967, %f1965;
	mul.ftz.f32 	%f1972, %f1969, %f1969;
	fma.rn.ftz.f32 	%f1973, %f1968, %f1968, %f1972;
	fma.rn.ftz.f32 	%f1974, %f1970, %f1970, %f1973;
	sub.ftz.f32 	%f1975, %f3087, %f1948;
	sub.ftz.f32 	%f1976, %f3088, %f1949;
	sub.ftz.f32 	%f1977, %f3089, %f1950;
	mul.ftz.f32 	%f1978, %f1969, %f1976;
	fma.rn.ftz.f32 	%f1979, %f1968, %f1975, %f1978;
	fma.rn.ftz.f32 	%f1980, %f1970, %f1977, %f1979;
	div.approx.ftz.f32 	%f1981, %f1980, %f1974;
	mul.ftz.f32 	%f1982, %f1968, %f1981;
	mul.ftz.f32 	%f1983, %f1969, %f1981;
	mul.ftz.f32 	%f1984, %f1970, %f1981;
	sub.ftz.f32 	%f1985, %f1975, %f1982;
	sub.ftz.f32 	%f1986, %f1976, %f1983;
	sub.ftz.f32 	%f1987, %f1977, %f1984;
	mul.ftz.f32 	%f1988, %f1986, %f1986;
	fma.rn.ftz.f32 	%f1989, %f1985, %f1985, %f1988;
	fma.rn.ftz.f32 	%f1990, %f1987, %f1987, %f1989;
	sqrt.approx.ftz.f32 	%f1991, %f1990;
	div.approx.ftz.f32 	%f1992, %f1951, %f1991;
	mul.ftz.f32 	%f1993, %f1985, %f1992;
	mul.ftz.f32 	%f1994, %f1986, %f1992;
	mul.ftz.f32 	%f1995, %f1987, %f1992;
	add.ftz.f32 	%f1996, %f387, %f387;
	sub.ftz.f32 	%f1997, %f1996, %f383;
	add.ftz.f32 	%f1998, %f388, %f388;
	sub.ftz.f32 	%f1999, %f1998, %f384;
	add.ftz.f32 	%f2000, %f389, %f389;
	sub.ftz.f32 	%f2001, %f2000, %f385;
	mul.ftz.f32 	%f2002, %f387, 0f40800000;
	sub.ftz.f32 	%f2003, %f383, %f2002;
	mul.ftz.f32 	%f2004, %f388, 0f40800000;
	sub.ftz.f32 	%f2005, %f384, %f2004;
	mul.ftz.f32 	%f2006, %f389, 0f40800000;
	sub.ftz.f32 	%f2007, %f385, %f2006;
	add.ftz.f32 	%f2008, %f392, %f2003;
	add.ftz.f32 	%f2009, %f394, %f2005;
	add.ftz.f32 	%f2010, %f396, %f2007;
	fma.rn.ftz.f32 	%f2011, %f2008, %f593, %f1997;
	fma.rn.ftz.f32 	%f2012, %f2009, %f593, %f1999;
	fma.rn.ftz.f32 	%f2013, %f2010, %f593, %f2001;
	mul.ftz.f32 	%f2014, %f2012, %f1994;
	fma.rn.ftz.f32 	%f2015, %f2011, %f1993, %f2014;
	fma.rn.ftz.f32 	%f2016, %f2013, %f1995, %f2015;
	sub.ftz.f32 	%f2017, %f1974, %f2016;
	mul.ftz.f32 	%f2018, %f1993, %f2017;
	mul.ftz.f32 	%f2019, %f1994, %f2017;
	mul.ftz.f32 	%f2020, %f1995, %f2017;
	mul.ftz.f32 	%f2021, %f1971, %f1951;
	mul.ftz.f32 	%f2022, %f1968, %f2021;
	mul.ftz.f32 	%f2023, %f1969, %f2021;
	mul.ftz.f32 	%f2024, %f1970, %f2021;
	sub.ftz.f32 	%f3090, %f2018, %f2022;
	sub.ftz.f32 	%f3091, %f2019, %f2023;
	sub.ftz.f32 	%f3092, %f2020, %f2024;

$L__BB0_76:
	mul.ftz.f32 	%f2052, %f3091, %f3091;
	fma.rn.ftz.f32 	%f2053, %f3090, %f3090, %f2052;
	fma.rn.ftz.f32 	%f2054, %f3092, %f3092, %f2053;
	rsqrt.approx.ftz.f32 	%f2055, %f2054;
	mul.ftz.f32 	%f3296, %f3090, %f2055;
	mul.ftz.f32 	%f3295, %f3091, %f2055;
	mul.ftz.f32 	%f608, %f3092, %f2055;
	// begin inline asm
	call (%r503), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p38, %r503, 0;
	@%p38 bra 	$L__BB0_96;

	// begin inline asm
	call (%r504), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2056), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p39, %r504, 0;
	@%p39 bra 	$L__BB0_95;

	mov.u32 	%r994, 0;

$L__BB0_79:
	.pragma "nounroll";
	// begin inline asm
	call (%rd407), _optix_get_transform_list_handle, (%r994);
	// end inline asm
	// begin inline asm
	call (%r507), _optix_get_transform_type_from_handle, (%rd407);
	// end inline asm
	or.b32  	%r508, %r507, 1;
	setp.eq.s32 	%p40, %r508, 3;
	@%p40 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_80;

$L__BB0_85:
	setp.eq.s32 	%p43, %r507, 2;
	@%p43 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_86;

$L__BB0_89:
	// begin inline asm
	call (%rd479), _optix_get_matrix_motion_transform_from_handle, (%rd407);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd481, %rd479;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r596,%r597,%r598,%r599}, [%rd481];
	// end inline asm
	add.s64 	%rd485, %rd479, 16;
	// begin inline asm
	cvta.to.global.u64 %rd484, %rd485;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r600,%r601,%r602,%r603}, [%rd484];
	// end inline asm
	add.s64 	%rd488, %rd479, 32;
	// begin inline asm
	cvta.to.global.u64 %rd487, %rd488;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r604,%r605,%r606,%r607}, [%rd487];
	// end inline asm
	add.s64 	%rd491, %rd479, 48;
	// begin inline asm
	cvta.to.global.u64 %rd490, %rd491;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r608,%r609,%r610,%r611}, [%rd490];
	// end inline asm
	add.s64 	%rd494, %rd479, 64;
	// begin inline asm
	cvta.to.global.u64 %rd493, %rd494;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r612,%r613,%r614,%r615}, [%rd493];
	// end inline asm
	add.s64 	%rd497, %rd479, 80;
	// begin inline asm
	cvta.to.global.u64 %rd496, %rd497;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r616,%r617,%r618,%r619}, [%rd496];
	// end inline asm
	add.s64 	%rd500, %rd479, 96;
	// begin inline asm
	cvta.to.global.u64 %rd499, %rd500;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r620,%r621,%r622,%r623}, [%rd499];
	// end inline asm
	add.s64 	%rd503, %rd479, 112;
	// begin inline asm
	cvta.to.global.u64 %rd502, %rd503;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r624,%r625,%r626,%r627}, [%rd502];
	// end inline asm
	mov.b32 	%f2159, %r599;
	mov.b32 	%f2160, %r600;
	and.b32  	%r640, %r598, 65535;
	add.s32 	%r641, %r640, -1;
	cvt.rn.f32.s32 	%f2161, %r641;
	sub.ftz.f32 	%f2162, %f2056, %f2159;
	mul.ftz.f32 	%f2163, %f2162, %f2161;
	sub.ftz.f32 	%f2164, %f2160, %f2159;
	div.approx.ftz.f32 	%f2165, %f2163, %f2164;
	min.ftz.f32 	%f2166, %f2161, %f2165;
	mov.f32 	%f2167, 0f00000000;
	max.ftz.f32 	%f2168, %f2167, %f2166;
	cvt.rmi.ftz.f32.f32 	%f2169, %f2168;
	sub.ftz.f32 	%f668, %f2168, %f2169;
	cvt.rzi.ftz.s32.f32 	%r642, %f2169;
	cvt.s64.s32 	%rd29, %r642;
	mul.wide.s32 	%rd514, %r642, 48;
	add.s64 	%rd506, %rd488, %rd514;
	// begin inline asm
	cvta.to.global.u64 %rd505, %rd506;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r628,%r629,%r630,%r631}, [%rd505];
	// end inline asm
	mov.b32 	%f3118, %r628;
	mov.b32 	%f3119, %r629;
	mov.b32 	%f3120, %r630;
	add.s64 	%rd509, %rd506, 16;
	// begin inline asm
	cvta.to.global.u64 %rd508, %rd509;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r632,%r633,%r634,%r635}, [%rd508];
	// end inline asm
	mov.b32 	%f3115, %r632;
	mov.b32 	%f3116, %r633;
	mov.b32 	%f3117, %r634;
	add.s64 	%rd512, %rd506, 32;
	// begin inline asm
	cvta.to.global.u64 %rd511, %rd512;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r636,%r637,%r638,%r639}, [%rd511];
	// end inline asm
	mov.b32 	%f3112, %r636;
	mov.b32 	%f3113, %r637;
	mov.b32 	%f3114, %r638;
	setp.leu.ftz.f32 	%p45, %f668, 0f00000000;
	@%p45 bra 	$L__BB0_91;

	mov.f32 	%f2170, 0f3F800000;
	sub.ftz.f32 	%f2171, %f2170, %f668;
	mul.lo.s64 	%rd524, %rd29, 48;
	add.s64 	%rd525, %rd479, %rd524;
	add.s64 	%rd516, %rd525, 80;
	// begin inline asm
	cvta.to.global.u64 %rd515, %rd516;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r643,%r644,%r645,%r646}, [%rd515];
	// end inline asm
	mov.b32 	%f2172, %r643;
	mov.b32 	%f2173, %r644;
	mov.b32 	%f2174, %r645;
	mul.ftz.f32 	%f2175, %f668, %f2172;
	mul.ftz.f32 	%f2176, %f668, %f2173;
	mul.ftz.f32 	%f2177, %f668, %f2174;
	fma.rn.ftz.f32 	%f3118, %f2171, %f3118, %f2175;
	fma.rn.ftz.f32 	%f3119, %f2171, %f3119, %f2176;
	fma.rn.ftz.f32 	%f3120, %f2171, %f3120, %f2177;
	add.s64 	%rd519, %rd525, 96;
	// begin inline asm
	cvta.to.global.u64 %rd518, %rd519;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r647,%r648,%r649,%r650}, [%rd518];
	// end inline asm
	mov.b32 	%f2178, %r647;
	mov.b32 	%f2179, %r648;
	mov.b32 	%f2180, %r649;
	mul.ftz.f32 	%f2181, %f668, %f2178;
	mul.ftz.f32 	%f2182, %f668, %f2179;
	mul.ftz.f32 	%f2183, %f668, %f2180;
	fma.rn.ftz.f32 	%f3115, %f2171, %f3115, %f2181;
	fma.rn.ftz.f32 	%f3116, %f2171, %f3116, %f2182;
	fma.rn.ftz.f32 	%f3117, %f2171, %f3117, %f2183;
	add.s64 	%rd522, %rd525, 112;
	// begin inline asm
	cvta.to.global.u64 %rd521, %rd522;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r651,%r652,%r653,%r654}, [%rd521];
	// end inline asm
	mov.b32 	%f2184, %r651;
	mov.b32 	%f2185, %r652;
	mov.b32 	%f2186, %r653;
	mul.ftz.f32 	%f2187, %f668, %f2184;
	mul.ftz.f32 	%f2188, %f668, %f2185;
	mul.ftz.f32 	%f2189, %f668, %f2186;
	fma.rn.ftz.f32 	%f3112, %f2171, %f3112, %f2187;
	fma.rn.ftz.f32 	%f3113, %f2171, %f3113, %f2188;
	fma.rn.ftz.f32 	%f3114, %f2171, %f3114, %f2189;
	bra.uni 	$L__BB0_91;

$L__BB0_80:
	mov.f32 	%f3121, 0f00000000;
	mov.f32 	%f3123, 0f3F800000;
	setp.eq.s32 	%p41, %r507, 4;
	@%p41 bra 	$L__BB0_83;

	setp.ne.s32 	%p42, %r507, 1;
	mov.f32 	%f3122, %f3121;
	mov.f32 	%f3124, %f3121;
	mov.f32 	%f3125, %f3123;
	mov.f32 	%f3126, %f3121;
	mov.f32 	%f3127, %f3123;
	mov.f32 	%f3128, %f3121;
	mov.f32 	%f3129, %f3121;
	@%p42 bra 	$L__BB0_92;

	// begin inline asm
	call (%rd409), _optix_get_static_transform_from_handle, (%rd407);
	// end inline asm
	add.s64 	%rd779, %rd409, 64;
	bra.uni 	$L__BB0_84;

$L__BB0_86:
	// begin inline asm
	call (%rd422), _optix_get_srt_motion_transform_from_handle, (%rd407);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd424, %rd422;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r521,%r522,%r523,%r524}, [%rd424];
	// end inline asm
	add.s64 	%rd428, %rd422, 16;
	// begin inline asm
	cvta.to.global.u64 %rd427, %rd428;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r525,%r526,%r527,%r528}, [%rd427];
	// end inline asm
	add.s64 	%rd431, %rd422, 32;
	// begin inline asm
	cvta.to.global.u64 %rd430, %rd431;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r529,%r530,%r531,%r532}, [%rd430];
	// end inline asm
	add.s64 	%rd434, %rd422, 48;
	// begin inline asm
	cvta.to.global.u64 %rd433, %rd434;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r533,%r534,%r535,%r536}, [%rd433];
	// end inline asm
	add.s64 	%rd437, %rd422, 64;
	// begin inline asm
	cvta.to.global.u64 %rd436, %rd437;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r537,%r538,%r539,%r540}, [%rd436];
	// end inline asm
	add.s64 	%rd440, %rd422, 80;
	// begin inline asm
	cvta.to.global.u64 %rd439, %rd440;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r541,%r542,%r543,%r544}, [%rd439];
	// end inline asm
	add.s64 	%rd443, %rd422, 96;
	// begin inline asm
	cvta.to.global.u64 %rd442, %rd443;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r545,%r546,%r547,%r548}, [%rd442];
	// end inline asm
	add.s64 	%rd446, %rd422, 112;
	// begin inline asm
	cvta.to.global.u64 %rd445, %rd446;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r549,%r550,%r551,%r552}, [%rd445];
	// end inline asm
	add.s64 	%rd449, %rd422, 128;
	// begin inline asm
	cvta.to.global.u64 %rd448, %rd449;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r553,%r554,%r555,%r556}, [%rd448];
	// end inline asm
	add.s64 	%rd452, %rd422, 144;
	// begin inline asm
	cvta.to.global.u64 %rd451, %rd452;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r557,%r558,%r559,%r560}, [%rd451];
	// end inline asm
	mov.b32 	%f2068, %r524;
	mov.b32 	%f2069, %r525;
	and.b32  	%r577, %r523, 65535;
	add.s32 	%r578, %r577, -1;
	cvt.rn.f32.s32 	%f2070, %r578;
	sub.ftz.f32 	%f2071, %f2056, %f2068;
	mul.ftz.f32 	%f2072, %f2071, %f2070;
	sub.ftz.f32 	%f2073, %f2069, %f2068;
	div.approx.ftz.f32 	%f2074, %f2072, %f2073;
	min.ftz.f32 	%f2075, %f2070, %f2074;
	mov.f32 	%f2076, 0f00000000;
	max.ftz.f32 	%f2077, %f2076, %f2075;
	cvt.rmi.ftz.f32.f32 	%f2078, %f2077;
	sub.ftz.f32 	%f628, %f2077, %f2078;
	cvt.rzi.ftz.s32.f32 	%r579, %f2078;
	mul.wide.s32 	%rd466, %r579, 64;
	add.s64 	%rd455, %rd431, %rd466;
	// begin inline asm
	cvta.to.global.u64 %rd454, %rd455;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r561,%r562,%r563,%r564}, [%rd454];
	// end inline asm
	mov.b32 	%f3102, %r561;
	mov.b32 	%f3103, %r562;
	mov.b32 	%f3104, %r563;
	add.s64 	%rd458, %rd455, 16;
	// begin inline asm
	cvta.to.global.u64 %rd457, %rd458;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r565,%r566,%r567,%r568}, [%rd457];
	// end inline asm
	mov.b32 	%f3105, %r565;
	mov.b32 	%f3106, %r566;
	mov.b32 	%f3107, %r568;
	add.s64 	%rd461, %rd455, 32;
	// begin inline asm
	cvta.to.global.u64 %rd460, %rd461;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r569,%r570,%r571,%r572}, [%rd460];
	// end inline asm
	mov.b32 	%f3108, %r570;
	mov.b32 	%f3109, %r571;
	mov.b32 	%f3110, %r572;
	add.s64 	%rd464, %rd455, 48;
	// begin inline asm
	cvta.to.global.u64 %rd463, %rd464;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r573,%r574,%r575,%r576}, [%rd463];
	// end inline asm
	mov.b32 	%f3111, %r573;
	setp.leu.ftz.f32 	%p44, %f628, 0f00000000;
	@%p44 bra 	$L__BB0_88;

	mov.f32 	%f2079, 0f3F800000;
	sub.ftz.f32 	%f2080, %f2079, %f628;
	add.s64 	%rd468, %rd455, 64;
	// begin inline asm
	cvta.to.global.u64 %rd467, %rd468;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r580,%r581,%r582,%r583}, [%rd467];
	// end inline asm
	mov.b32 	%f2081, %r580;
	mov.b32 	%f2082, %r581;
	mov.b32 	%f2083, %r582;
	mul.ftz.f32 	%f2084, %f628, %f2081;
	mul.ftz.f32 	%f2085, %f628, %f2082;
	mul.ftz.f32 	%f2086, %f628, %f2083;
	fma.rn.ftz.f32 	%f3102, %f2080, %f3102, %f2084;
	fma.rn.ftz.f32 	%f3103, %f2080, %f3103, %f2085;
	fma.rn.ftz.f32 	%f3104, %f2080, %f3104, %f2086;
	add.s64 	%rd471, %rd455, 80;
	// begin inline asm
	cvta.to.global.u64 %rd470, %rd471;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r584,%r585,%r586,%r587}, [%rd470];
	// end inline asm
	mov.b32 	%f2087, %r584;
	mov.b32 	%f2088, %r585;
	mov.b32 	%f2089, %r587;
	mul.ftz.f32 	%f2090, %f628, %f2087;
	mul.ftz.f32 	%f2091, %f628, %f2088;
	mul.ftz.f32 	%f2092, %f628, %f2089;
	fma.rn.ftz.f32 	%f3105, %f2080, %f3105, %f2090;
	fma.rn.ftz.f32 	%f3106, %f2080, %f3106, %f2091;
	fma.rn.ftz.f32 	%f3107, %f2080, %f3107, %f2092;
	add.s64 	%rd474, %rd455, 96;
	// begin inline asm
	cvta.to.global.u64 %rd473, %rd474;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r588,%r589,%r590,%r591}, [%rd473];
	// end inline asm
	mov.b32 	%f2093, %r589;
	mov.b32 	%f2094, %r590;
	mov.b32 	%f2095, %r591;
	mul.ftz.f32 	%f2096, %f628, %f2093;
	mul.ftz.f32 	%f2097, %f628, %f2094;
	mul.ftz.f32 	%f2098, %f628, %f2095;
	fma.rn.ftz.f32 	%f2099, %f2080, %f3108, %f2096;
	fma.rn.ftz.f32 	%f2100, %f2080, %f3109, %f2097;
	fma.rn.ftz.f32 	%f2101, %f2080, %f3110, %f2098;
	add.s64 	%rd477, %rd455, 112;
	// begin inline asm
	cvta.to.global.u64 %rd476, %rd477;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r592,%r593,%r594,%r595}, [%rd476];
	// end inline asm
	mov.b32 	%f2102, %r592;
	mul.ftz.f32 	%f2103, %f628, %f2102;
	fma.rn.ftz.f32 	%f2104, %f2080, %f3111, %f2103;
	mul.ftz.f32 	%f2105, %f2100, %f2100;
	fma.rn.ftz.f32 	%f2106, %f2099, %f2099, %f2105;
	fma.rn.ftz.f32 	%f2107, %f2101, %f2101, %f2106;
	fma.rn.ftz.f32 	%f2108, %f2104, %f2104, %f2107;
	rsqrt.approx.ftz.f32 	%f2109, %f2108;
	mul.ftz.f32 	%f3108, %f2099, %f2109;
	mul.ftz.f32 	%f3109, %f2100, %f2109;
	mul.ftz.f32 	%f3110, %f2101, %f2109;
	mul.ftz.f32 	%f3111, %f2109, %f2104;

$L__BB0_88:
	mul.ftz.f32 	%f2110, %f3109, %f3109;
	fma.rn.ftz.f32 	%f2111, %f3108, %f3108, %f2110;
	fma.rn.ftz.f32 	%f2112, %f3110, %f3110, %f2111;
	fma.rn.ftz.f32 	%f2113, %f3111, %f3111, %f2112;
	rcp.approx.ftz.f32 	%f2114, %f2113;
	mul.ftz.f32 	%f2115, %f3108, %f2114;
	mul.ftz.f32 	%f2116, %f3109, %f2114;
	mul.ftz.f32 	%f2117, %f3110, %f2114;
	mul.ftz.f32 	%f2118, %f3111, %f2114;
	mul.ftz.f32 	%f2119, %f3108, %f2115;
	mul.ftz.f32 	%f2120, %f3109, %f2116;
	mul.ftz.f32 	%f2121, %f3110, %f2117;
	mul.ftz.f32 	%f2122, %f3108, %f2116;
	mul.ftz.f32 	%f2123, %f3110, %f2118;
	mul.ftz.f32 	%f2124, %f3108, %f2117;
	mul.ftz.f32 	%f2125, %f3109, %f2118;
	mul.ftz.f32 	%f2126, %f3109, %f2117;
	mul.ftz.f32 	%f2127, %f3108, %f2118;
	sub.ftz.f32 	%f2128, %f2119, %f2120;
	sub.ftz.f32 	%f2129, %f2128, %f2121;
	fma.rn.ftz.f32 	%f2130, %f3111, %f2118, %f2129;
	sub.ftz.f32 	%f2131, %f2122, %f2123;
	add.ftz.f32 	%f2132, %f2131, %f2131;
	add.ftz.f32 	%f2133, %f2124, %f2125;
	add.ftz.f32 	%f2134, %f2133, %f2133;
	add.ftz.f32 	%f2135, %f2122, %f2123;
	add.ftz.f32 	%f2136, %f2135, %f2135;
	sub.ftz.f32 	%f2137, %f2120, %f2119;
	sub.ftz.f32 	%f2138, %f2137, %f2121;
	fma.rn.ftz.f32 	%f2139, %f3111, %f2118, %f2138;
	sub.ftz.f32 	%f2140, %f2126, %f2127;
	add.ftz.f32 	%f2141, %f2140, %f2140;
	sub.ftz.f32 	%f2142, %f2124, %f2125;
	add.ftz.f32 	%f2143, %f2142, %f2142;
	add.ftz.f32 	%f2144, %f2126, %f2127;
	add.ftz.f32 	%f2145, %f2144, %f2144;
	neg.ftz.f32 	%f2146, %f2119;
	sub.ftz.f32 	%f2147, %f2146, %f2120;
	add.ftz.f32 	%f2148, %f2121, %f2147;
	fma.rn.ftz.f32 	%f2149, %f3111, %f2118, %f2148;
	mul.ftz.f32 	%f2150, %f3104, %f2130;
	fma.rn.ftz.f32 	%f2151, %f3106, %f2132, %f2150;
	fma.rn.ftz.f32 	%f3120, %f3107, %f2134, %f2151;
	mul.ftz.f32 	%f2152, %f3106, %f2139;
	fma.rn.ftz.f32 	%f2153, %f3104, %f2136, %f2152;
	fma.rn.ftz.f32 	%f3117, %f3107, %f2141, %f2153;
	mul.ftz.f32 	%f2154, %f3106, %f2145;
	fma.rn.ftz.f32 	%f2155, %f3104, %f2143, %f2154;
	fma.rn.ftz.f32 	%f3114, %f3107, %f2149, %f2155;
	mul.ftz.f32 	%f2156, %f3103, %f2130;
	fma.rn.ftz.f32 	%f3119, %f3105, %f2132, %f2156;
	mul.ftz.f32 	%f2157, %f3105, %f2139;
	fma.rn.ftz.f32 	%f3116, %f3103, %f2136, %f2157;
	mul.ftz.f32 	%f2158, %f3105, %f2145;
	fma.rn.ftz.f32 	%f3113, %f3103, %f2143, %f2158;
	mul.ftz.f32 	%f3118, %f3102, %f2130;
	mul.ftz.f32 	%f3115, %f3102, %f2136;
	mul.ftz.f32 	%f3112, %f3102, %f2143;

$L__BB0_91:
	mul.ftz.f32 	%f2190, %f3113, %f3117;
	mul.ftz.f32 	%f2191, %f3114, %f3116;
	sub.ftz.f32 	%f2192, %f2191, %f2190;
	mul.ftz.f32 	%f2193, %f3118, %f2192;
	mul.ftz.f32 	%f2194, %f3112, %f3117;
	mul.ftz.f32 	%f2195, %f3114, %f3115;
	sub.ftz.f32 	%f2196, %f2195, %f2194;
	mul.ftz.f32 	%f2197, %f2196, %f3119;
	sub.ftz.f32 	%f2198, %f2193, %f2197;
	mul.ftz.f32 	%f2199, %f3112, %f3116;
	mul.ftz.f32 	%f2200, %f3113, %f3115;
	sub.ftz.f32 	%f2201, %f2200, %f2199;
	fma.rn.ftz.f32 	%f2202, %f2201, %f3120, %f2198;
	rcp.approx.ftz.f32 	%f2203, %f2202;
	mul.ftz.f32 	%f3127, %f2192, %f2203;
	mul.ftz.f32 	%f2204, %f3114, %f3119;
	mul.ftz.f32 	%f2205, %f3113, %f3120;
	sub.ftz.f32 	%f2206, %f2205, %f2204;
	mul.ftz.f32 	%f3128, %f2206, %f2203;
	mul.ftz.f32 	%f2207, %f3116, %f3120;
	mul.ftz.f32 	%f2208, %f3117, %f3119;
	sub.ftz.f32 	%f2209, %f2208, %f2207;
	mul.ftz.f32 	%f3129, %f2209, %f2203;
	sub.ftz.f32 	%f2210, %f2194, %f2195;
	mul.ftz.f32 	%f3124, %f2210, %f2203;
	mul.ftz.f32 	%f2211, %f3112, %f3120;
	mul.ftz.f32 	%f2212, %f3114, %f3118;
	sub.ftz.f32 	%f2213, %f2212, %f2211;
	mul.ftz.f32 	%f3125, %f2213, %f2203;
	mul.ftz.f32 	%f2214, %f3117, %f3118;
	mul.ftz.f32 	%f2215, %f3115, %f3120;
	sub.ftz.f32 	%f2216, %f2215, %f2214;
	mul.ftz.f32 	%f3126, %f2216, %f2203;
	mul.ftz.f32 	%f3121, %f2201, %f2203;
	mul.ftz.f32 	%f2217, %f3113, %f3118;
	mul.ftz.f32 	%f2218, %f3112, %f3119;
	sub.ftz.f32 	%f2219, %f2218, %f2217;
	mul.ftz.f32 	%f3122, %f2219, %f2203;
	mul.ftz.f32 	%f2220, %f3115, %f3119;
	mul.ftz.f32 	%f2221, %f3116, %f3118;
	sub.ftz.f32 	%f2222, %f2221, %f2220;
	mul.ftz.f32 	%f3123, %f2222, %f2203;
	bra.uni 	$L__BB0_92;

$L__BB0_83:
	// begin inline asm
	call (%rd779), _optix_get_instance_inverse_transform_from_handle, (%rd407);
	// end inline asm

$L__BB0_84:
	// begin inline asm
	cvta.to.global.u64 %rd413, %rd779;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r509,%r510,%r511,%r512}, [%rd413];
	// end inline asm
	mov.b32 	%f3127, %r509;
	mov.b32 	%f3128, %r510;
	mov.b32 	%f3129, %r511;
	add.s64 	%rd417, %rd779, 16;
	// begin inline asm
	cvta.to.global.u64 %rd416, %rd417;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r513,%r514,%r515,%r516}, [%rd416];
	// end inline asm
	mov.b32 	%f3124, %r513;
	mov.b32 	%f3125, %r514;
	mov.b32 	%f3126, %r515;
	add.s64 	%rd420, %rd779, 32;
	// begin inline asm
	cvta.to.global.u64 %rd419, %rd420;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r517,%r518,%r519,%r520}, [%rd419];
	// end inline asm
	mov.b32 	%f3121, %r517;
	mov.b32 	%f3122, %r518;
	mov.b32 	%f3123, %r519;

$L__BB0_92:
	setp.eq.s32 	%p46, %r994, 0;
	@%p46 bra 	$L__BB0_94;

	mul.ftz.f32 	%f2223, %f3098, %f3128;
	fma.rn.ftz.f32 	%f2224, %f3095, %f3127, %f2223;
	fma.rn.ftz.f32 	%f714, %f3101, %f3129, %f2224;
	mul.ftz.f32 	%f2225, %f3097, %f3128;
	fma.rn.ftz.f32 	%f2226, %f3094, %f3127, %f2225;
	fma.rn.ftz.f32 	%f715, %f3100, %f3129, %f2226;
	mul.ftz.f32 	%f2227, %f3096, %f3128;
	fma.rn.ftz.f32 	%f2228, %f3093, %f3127, %f2227;
	fma.rn.ftz.f32 	%f3129, %f3099, %f3129, %f2228;
	mul.ftz.f32 	%f2229, %f3098, %f3125;
	fma.rn.ftz.f32 	%f2230, %f3095, %f3124, %f2229;
	fma.rn.ftz.f32 	%f717, %f3101, %f3126, %f2230;
	mul.ftz.f32 	%f2231, %f3097, %f3125;
	fma.rn.ftz.f32 	%f2232, %f3094, %f3124, %f2231;
	fma.rn.ftz.f32 	%f718, %f3100, %f3126, %f2232;
	mul.ftz.f32 	%f2233, %f3096, %f3125;
	fma.rn.ftz.f32 	%f2234, %f3093, %f3124, %f2233;
	fma.rn.ftz.f32 	%f3126, %f3099, %f3126, %f2234;
	mul.ftz.f32 	%f2235, %f3098, %f3122;
	fma.rn.ftz.f32 	%f2236, %f3095, %f3121, %f2235;
	fma.rn.ftz.f32 	%f720, %f3101, %f3123, %f2236;
	mul.ftz.f32 	%f2237, %f3097, %f3122;
	fma.rn.ftz.f32 	%f2238, %f3094, %f3121, %f2237;
	fma.rn.ftz.f32 	%f721, %f3100, %f3123, %f2238;
	mul.ftz.f32 	%f2239, %f3096, %f3122;
	fma.rn.ftz.f32 	%f2240, %f3093, %f3121, %f2239;
	fma.rn.ftz.f32 	%f3123, %f3099, %f3123, %f2240;
	mov.f32 	%f3121, %f720;
	mov.f32 	%f3122, %f721;
	mov.f32 	%f3124, %f717;
	mov.f32 	%f3125, %f718;
	mov.f32 	%f3127, %f714;
	mov.f32 	%f3128, %f715;

$L__BB0_94:
	add.s32 	%r994, %r994, 1;
	setp.lt.u32 	%p47, %r994, %r504;
	mov.f32 	%f3093, %f3129;
	mov.f32 	%f3094, %f3128;
	mov.f32 	%f3095, %f3127;
	mov.f32 	%f3096, %f3126;
	mov.f32 	%f3097, %f3125;
	mov.f32 	%f3098, %f3124;
	mov.f32 	%f3099, %f3123;
	mov.f32 	%f3100, %f3122;
	mov.f32 	%f3101, %f3121;
	@%p47 bra 	$L__BB0_79;

$L__BB0_95:
	mul.ftz.f32 	%f2241, %f3296, %f3127;
	fma.rn.ftz.f32 	%f2242, %f3295, %f3124, %f2241;
	mul.ftz.f32 	%f2243, %f3296, %f3128;
	fma.rn.ftz.f32 	%f2244, %f3295, %f3125, %f2243;
	mul.ftz.f32 	%f2245, %f3296, %f3129;
	fma.rn.ftz.f32 	%f2246, %f3295, %f3126, %f2245;
	fma.rn.ftz.f32 	%f3294, %f608, %f3123, %f2246;
	fma.rn.ftz.f32 	%f3295, %f608, %f3122, %f2244;
	fma.rn.ftz.f32 	%f3296, %f608, %f3121, %f2242;
	bra.uni 	$L__BB0_144;

$L__BB0_96:
	mov.f32 	%f3294, %f608;

$L__BB0_144:
	sub.ftz.f32 	%f2763, %f3293, %f3290;
	mul.ftz.f32 	%f2764, %f2763, %f2763;
	sub.ftz.f32 	%f2765, %f3292, %f3289;
	fma.rn.ftz.f32 	%f2766, %f2765, %f2765, %f2764;
	sub.ftz.f32 	%f2767, %f3291, %f3288;
	fma.rn.ftz.f32 	%f2768, %f2767, %f2767, %f2766;
	rsqrt.approx.ftz.f32 	%f2769, %f2768;
	mul.ftz.f32 	%f1138, %f2763, %f2769;
	mul.ftz.f32 	%f1139, %f2765, %f2769;
	mul.ftz.f32 	%f1140, %f2767, %f2769;
	// begin inline asm
	call (%r963), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f1141, %r963;
	fma.rn.ftz.f32 	%f1142, %f2763, %f1141, %f3290;
	fma.rn.ftz.f32 	%f1143, %f2765, %f1141, %f3289;
	fma.rn.ftz.f32 	%f1144, %f2767, %f1141, %f3288;
	ld.u32 	%r964, [%rd45+100];
	setp.eq.s32 	%p70, %r964, 14;
	@%p70 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	ld.u64 	%rd766, [%rd45+24];
	mul.wide.u32 	%rd767, %r998, 8;
	add.s64 	%rd768, %rd766, %rd767;
	ld.v2.u32 	{%r998, %r997}, [%rd768];
	bra.uni 	$L__BB0_147;

$L__BB0_145:
	add.s32 	%r997, %r998, 1;

$L__BB0_147:
	ld.u32 	%r969, [%rd45+96];
	and.b32  	%r970, %r969, 1073741823;
	or.b32  	%r971, %r970, 1073741824;
	setp.lt.ftz.f32 	%p71, %f1141, 0f3F000000;
	selp.b32 	%r968, %r971, %r970, %p71;
	mov.u32 	%r967, 2;
	// begin inline asm
	call _optix_set_payload, (%r967, %r968);
	// end inline asm
	ld.v4.f32 	{%f2770, %f2771, %f2772, %f2773}, [%rd45+112];
	ld.f32 	%f3299, [%rd45+80];
	setp.lt.ftz.f32 	%p72, %f3299, 0f00000000;
	@%p72 bra 	$L__BB0_149;
	bra.uni 	$L__BB0_148;

$L__BB0_149:
	ld.u64 	%rd769, [%rd45+8];
	mul.wide.s32 	%rd770, %r997, 12;
	add.s64 	%rd771, %rd769, %rd770;
	mul.wide.s32 	%rd772, %r998, 12;
	add.s64 	%rd773, %rd769, %rd772;
	ld.f32 	%f2774, [%rd773];
	ld.f32 	%f2775, [%rd771];
	sub.ftz.f32 	%f2776, %f2775, %f2774;
	ld.f32 	%f2777, [%rd773+4];
	ld.f32 	%f2778, [%rd771+4];
	sub.ftz.f32 	%f2779, %f2778, %f2777;
	ld.f32 	%f2780, [%rd773+8];
	ld.f32 	%f2781, [%rd771+8];
	sub.ftz.f32 	%f2782, %f2781, %f2780;
	fma.rn.ftz.f32 	%f3299, %f2776, %f1141, %f2774;
	fma.rn.ftz.f32 	%f3298, %f2779, %f1141, %f2777;
	fma.rn.ftz.f32 	%f3297, %f2782, %f1141, %f2780;
	bra.uni 	$L__BB0_150;

$L__BB0_148:
	ld.f32 	%f3298, [%rd45+84];
	ld.f32 	%f3297, [%rd45+88];

$L__BB0_150:
	mov.u32 	%r973, 0;
	// begin inline asm
	call (%r972), _optix_get_payload, (%r973);
	// end inline asm
	mov.u32 	%r975, 1;
	// begin inline asm
	call (%r974), _optix_get_payload, (%r975);
	// end inline asm
	cvt.u64.u32 	%rd774, %r972;
	cvt.u64.u32 	%rd775, %r974;
	bfi.b64 	%rd44, %rd774, %rd775, 32, 32;
	mov.f32 	%f2784, 0f3F800000;
	st.v4.f32 	[%rd44+48], {%f2784, %f2784, %f2784, %f2784};
	// begin inline asm
	call (%f2783), _optix_get_ray_tmax, ();
	// end inline asm
	st.f32 	[%rd44+108], %f2783;
	mul.ftz.f32 	%f2785, %f2770, %f3299;
	mul.ftz.f32 	%f2786, %f2771, %f3298;
	st.v2.f32 	[%rd44], {%f2785, %f2786};
	mul.ftz.f32 	%f2787, %f2772, %f3297;
	st.f32 	[%rd44+8], %f2787;
	st.v2.f32 	[%rd44+96], {%f1, %f2};
	st.f32 	[%rd44+104], %f3;
	ld.u32 	%r976, [%rd44+12];
	or.b32  	%r31, %r976, -2147483648;
	st.u32 	[%rd44+12], %r31;
	and.b32  	%r977, %r976, 16777216;
	setp.eq.s32 	%p73, %r977, 0;
	@%p73 bra 	$L__BB0_152;

	ld.f32 	%f2788, [%rd44+16];
	ld.f32 	%f2789, [%rd44];
	mul.ftz.f32 	%f2790, %f2789, %f2788;
	st.f32 	[%rd44+16], %f2790;
	ld.f32 	%f2791, [%rd44+20];
	ld.f32 	%f2792, [%rd44+4];
	mul.ftz.f32 	%f2793, %f2792, %f2791;
	st.f32 	[%rd44+20], %f2793;
	ld.f32 	%f2794, [%rd44+24];
	ld.f32 	%f2795, [%rd44+8];
	mul.ftz.f32 	%f2796, %f2795, %f2794;
	st.f32 	[%rd44+24], %f2796;

$L__BB0_152:
	ld.f32 	%f2797, [%rd44+112];
	ld.f32 	%f2798, [%rd44+116];
	mul.ftz.f32 	%f2799, %f3295, %f2798;
	fma.rn.ftz.f32 	%f2800, %f3296, %f2797, %f2799;
	ld.f32 	%f2801, [%rd44+120];
	fma.rn.ftz.f32 	%f2802, %f3294, %f2801, %f2800;
	setp.ge.ftz.f32 	%p74, %f2802, 0f00000000;
	selp.b32 	%r978, 16, 0, %p74;
	or.b32  	%r979, %r978, %r31;
	st.u32 	[%rd44+12], %r979;
	and.b32  	%r980, %r979, 16;
	setp.eq.s32 	%p75, %r980, 0;
	@%p75 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_153;

$L__BB0_155:
	mov.u32 	%r990, 3;
	mov.u32 	%r989, 1065353216;
	st.v2.f32 	[%rd44+32], {%f2784, %f2784};
	st.u32 	[%rd44+40], %r989;
	st.v2.f32 	[%rd44+128], {%f2784, %f2784};
	st.u32 	[%rd44+136], %r989;
	mov.u32 	%r988, -1;
	// begin inline asm
	call _optix_set_payload, (%r967, %r988);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r990, %r988);
	// end inline asm
	bra.uni 	$L__BB0_156;

$L__BB0_153:
	ld.f32 	%f2803, [%rd44+128];
	ld.f32 	%f2804, [%rd44+132];
	mul.ftz.f32 	%f2805, %f2804, %f2804;
	fma.rn.ftz.f32 	%f2806, %f2803, %f2803, %f2805;
	ld.f32 	%f2807, [%rd44+136];
	fma.rn.ftz.f32 	%f2808, %f2807, %f2807, %f2806;
	rsqrt.approx.ftz.f32 	%f2809, %f2808;
	mul.ftz.f32 	%f2810, %f2803, %f2809;
	mul.ftz.f32 	%f2811, %f2809, %f2804;
	mul.ftz.f32 	%f2812, %f2809, %f2807;
	mul.ftz.f32 	%f2813, %f1139, %f2811;
	fma.rn.ftz.f32 	%f2814, %f1138, %f2810, %f2813;
	fma.rn.ftz.f32 	%f2815, %f1140, %f2812, %f2814;
	mul.ftz.f32 	%f2816, %f1138, %f2815;
	mul.ftz.f32 	%f2817, %f1139, %f2815;
	mul.ftz.f32 	%f2818, %f1140, %f2815;
	sub.ftz.f32 	%f2819, %f2810, %f2816;
	sub.ftz.f32 	%f2820, %f2811, %f2817;
	sub.ftz.f32 	%f2821, %f2812, %f2818;
	mul.ftz.f32 	%f2822, %f1139, %f2821;
	mul.ftz.f32 	%f2823, %f1140, %f2820;
	sub.ftz.f32 	%f2824, %f2822, %f2823;
	mul.ftz.f32 	%f2825, %f1140, %f2819;
	mul.ftz.f32 	%f2826, %f1138, %f2821;
	sub.ftz.f32 	%f2827, %f2825, %f2826;
	mul.ftz.f32 	%f2828, %f1138, %f2820;
	mul.ftz.f32 	%f2829, %f1139, %f2819;
	sub.ftz.f32 	%f2830, %f2828, %f2829;
	ld.u32 	%r981, [%rd44+28];
	mad.lo.s32 	%r982, %r981, 1664525, 1013904223;
	st.u32 	[%rd44+28], %r982;
	and.b32  	%r983, %r982, 16777215;
	cvt.rn.f32.u32 	%f2831, %r983;
	mov.f32 	%f2832, 0f4B800000;
	div.approx.ftz.f32 	%f2833, %f2831, %f2832;
	add.ftz.f32 	%f2834, %f2833, %f2833;
	mul.ftz.f32 	%f2835, %f2834, 0f40490FDB;
	cos.approx.ftz.f32 	%f2836, %f2835;
	sin.approx.ftz.f32 	%f2837, %f2835;
	mul.ftz.f32 	%f2838, %f2837, %f2824;
	mul.ftz.f32 	%f2839, %f2837, %f2827;
	mul.ftz.f32 	%f2840, %f2837, %f2830;
	fma.rn.ftz.f32 	%f2841, %f2836, %f2819, %f2838;
	fma.rn.ftz.f32 	%f2842, %f2836, %f2820, %f2839;
	fma.rn.ftz.f32 	%f2843, %f2836, %f2821, %f2840;
	add.ftz.f32 	%f1158, %f2818, %f2843;
	add.ftz.f32 	%f1160, %f2817, %f2842;
	add.ftz.f32 	%f1159, %f2816, %f2841;
	st.v2.f32 	[%rd44+128], {%f1159, %f1160};
	st.f32 	[%rd44+136], %f1158;
	sub.ftz.f32 	%f2844, %f1, %f1142;
	sub.ftz.f32 	%f2845, %f2, %f1143;
	mul.ftz.f32 	%f2846, %f2845, %f2845;
	fma.rn.ftz.f32 	%f2847, %f2844, %f2844, %f2846;
	sub.ftz.f32 	%f2848, %f3, %f1144;
	fma.rn.ftz.f32 	%f2849, %f2848, %f2848, %f2847;
	sqrt.approx.ftz.f32 	%f2850, %f2849;
	mul.ftz.f32 	%f2851, %f2842, %f2842;
	fma.rn.ftz.f32 	%f2852, %f2841, %f2841, %f2851;
	fma.rn.ftz.f32 	%f2853, %f2843, %f2843, %f2852;
	rsqrt.approx.ftz.f32 	%f2854, %f2853;
	mul.ftz.f32 	%f2855, %f2841, %f2854;
	mul.ftz.f32 	%f2856, %f2842, %f2854;
	mul.ftz.f32 	%f2857, %f2843, %f2854;
	fma.rn.ftz.f32 	%f2858, %f2850, %f2857, %f1144;
	fma.rn.ftz.f32 	%f2859, %f2850, %f2856, %f1143;
	fma.rn.ftz.f32 	%f2860, %f2850, %f2855, %f1142;
	st.v2.f32 	[%rd44+96], {%f2860, %f2859};
	st.f32 	[%rd44+104], %f2858;
	ld.u32 	%r984, [%rd44+44];
	setp.ne.s32 	%p76, %r984, 0;
	@%p76 bra 	$L__BB0_156;

	st.v2.f32 	[%rd44+32], {%f1159, %f1160};
	st.f32 	[%rd44+40], %f1158;

$L__BB0_156:
	ret;

}

