//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28540450
// Cuda compilation tools, release 11.0, V11.0.194
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_50
.address_size 64

	// .globl	__closesthit__occlusion_transparency
.const .align 8 .b8 params[288];

.visible .entry __closesthit__occlusion_transparency(

)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%rd3), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd3+112];
	ld.u32 	%r1, [%rd3+224];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_3;

	// inline asm
	call (%r2), _optix_get_attribute_5, ();
	// inline asm
	rem.u32 	%r3, %r2, %r1;
	ld.u64 	%rd4, [%rd3+192];
	mul.wide.s32 	%rd5, %r3, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.u64 	%rd2, [%rd6];
	setp.eq.s64	%p2, %rd2, 0;
	@%p2 bra 	BB0_3;

	// inline asm
	call (%r4), _optix_get_attribute_3, ();
	// inline asm
	mov.b32 	 %f24, %r4;
	// inline asm
	call (%r5), _optix_get_attribute_4, ();
	// inline asm
	mov.b32 	 %f25, %r5;
	tex.2d.v4.f32.f32	{%f26, %f27, %f28, %f29}, [%rd2, {%f24, %f25}];
	mul.ftz.f32 	%f41, %f41, %f26;
	mul.ftz.f32 	%f42, %f42, %f27;
	mul.ftz.f32 	%f43, %f43, %f28;
	mul.ftz.f32 	%f44, %f44, %f29;

BB0_3:
	mov.f32 	%f33, 0f3F800000;
	sub.ftz.f32 	%f13, %f33, %f44;
	mov.f32 	%f45, 0f00000000;
	setp.leu.ftz.f32	%p3, %f13, 0f00000000;
	mov.f32 	%f46, %f45;
	mov.f32 	%f47, %f45;
	@%p3 bra 	BB0_5;

	// inline asm
	call (%r6), _optix_get_payload_0, ();
	// inline asm
	mov.b32 	 %f34, %r6;
	mul.ftz.f32 	%f45, %f41, %f34;
	// inline asm
	call (%r7), _optix_get_payload_1, ();
	// inline asm
	mov.b32 	 %f35, %r7;
	mul.ftz.f32 	%f46, %f42, %f35;
	// inline asm
	call (%r8), _optix_get_payload_2, ();
	// inline asm
	mov.b32 	 %f36, %r8;
	mul.ftz.f32 	%f47, %f43, %f36;

BB0_5:
	mul.ftz.f32 	%f38, %f13, %f45;
	mov.b32 	 %r9, %f38;
	// inline asm
	call _optix_set_payload_0, (%r9);
	// inline asm
	mul.ftz.f32 	%f39, %f13, %f46;
	mov.b32 	 %r10, %f39;
	// inline asm
	call _optix_set_payload_1, (%r10);
	// inline asm
	mul.ftz.f32 	%f40, %f13, %f47;
	mov.b32 	 %r11, %f40;
	// inline asm
	call _optix_set_payload_2, (%r11);
	// inline asm
	// inline asm
	call (%f37), _optix_get_ray_tmax, ();
	// inline asm
	mov.b32 	 %r12, %f37;
	// inline asm
	call _optix_set_payload_3, (%r12);
	// inline asm
	ret;
}


