//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__occlusion_transparency
.const .align 8 .b8 params[288];

.visible .entry __closesthit__occlusion_transparency()
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<7>;


	// begin inline asm
	call (%rd3), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd3+112];
	ld.u32 	%r1, [%rd3+224];
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB0_3;

	// begin inline asm
	call (%r2), _optix_get_attribute_5, ();
	// end inline asm
	rem.u32 	%r3, %r2, %r1;
	ld.u64 	%rd4, [%rd3+192];
	mul.wide.s32 	%rd5, %r3, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.u64 	%rd2, [%rd6];
	setp.eq.s64 	%p2, %rd2, 0;
	@%p2 bra 	$L__BB0_3;

	// begin inline asm
	call (%r4), _optix_get_attribute_3, ();
	// end inline asm
	mov.b32 	%f24, %r4;
	// begin inline asm
	call (%r5), _optix_get_attribute_4, ();
	// end inline asm
	mov.b32 	%f25, %r5;
	tex.2d.v4.f32.f32 	{%f26, %f27, %f28, %f29}, [%rd2, {%f24, %f25}];
	mul.ftz.f32 	%f41, %f41, %f26;
	mul.ftz.f32 	%f42, %f42, %f27;
	mul.ftz.f32 	%f43, %f43, %f28;
	mul.ftz.f32 	%f44, %f44, %f29;

$L__BB0_3:
	mov.f32 	%f33, 0f3F800000;
	sub.ftz.f32 	%f13, %f33, %f44;
	setp.leu.ftz.f32 	%p3, %f13, 0f00000000;
	mov.f32 	%f45, 0f00000000;
	mov.f32 	%f46, %f45;
	mov.f32 	%f47, %f45;
	@%p3 bra 	$L__BB0_5;

	mov.u32 	%r7, 0;
	// begin inline asm
	call (%r6), _optix_get_payload, (%r7);
	// end inline asm
	mov.b32 	%f34, %r6;
	mul.ftz.f32 	%f46, %f41, %f34;
	mov.u32 	%r9, 1;
	// begin inline asm
	call (%r8), _optix_get_payload, (%r9);
	// end inline asm
	mov.b32 	%f35, %r8;
	mul.ftz.f32 	%f45, %f42, %f35;
	mov.u32 	%r11, 2;
	// begin inline asm
	call (%r10), _optix_get_payload, (%r11);
	// end inline asm
	mov.b32 	%f36, %r10;
	mul.ftz.f32 	%f47, %f43, %f36;

$L__BB0_5:
	mul.ftz.f32 	%f38, %f13, %f46;
	mov.b32 	%r13, %f38;
	mov.u32 	%r12, 0;
	// begin inline asm
	call _optix_set_payload, (%r12, %r13);
	// end inline asm
	mul.ftz.f32 	%f39, %f13, %f45;
	mov.b32 	%r15, %f39;
	mov.u32 	%r14, 1;
	// begin inline asm
	call _optix_set_payload, (%r14, %r15);
	// end inline asm
	mul.ftz.f32 	%f40, %f13, %f47;
	mov.b32 	%r17, %f40;
	mov.u32 	%r16, 2;
	// begin inline asm
	call _optix_set_payload, (%r16, %r17);
	// end inline asm
	// begin inline asm
	call (%f37), _optix_get_ray_tmax, ();
	// end inline asm
	mov.b32 	%r19, %f37;
	mov.u32 	%r18, 3;
	// begin inline asm
	call _optix_set_payload, (%r18, %r19);
	// end inline asm
	ret;

}

