//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__miss__radiance_ambient
.const .align 8 .b8 params[288];

.visible .entry __miss__radiance_ambient()
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r2, 0;
	// begin inline asm
	call (%r1), _optix_get_payload, (%r2);
	// end inline asm
	mov.u32 	%r4, 1;
	// begin inline asm
	call (%r3), _optix_get_payload, (%r4);
	// end inline asm
	cvt.u64.u32 	%rd2, %r1;
	cvt.u64.u32 	%rd3, %r3;
	bfi.b64 	%rd1, %rd2, %rd3, 32, 32;
	ld.f32 	%f3, [%rd1+128];
	ld.f32 	%f4, [%rd1+132];
	ld.f32 	%f5, [%rd1+136];
	ld.f32 	%f6, [%rd1+96];
	fma.rn.ftz.f32 	%f7, %f3, 0f5A0E1BCA, %f6;
	st.f32 	[%rd1+96], %f7;
	ld.f32 	%f8, [%rd1+100];
	fma.rn.ftz.f32 	%f9, %f4, 0f5A0E1BCA, %f8;
	st.f32 	[%rd1+100], %f9;
	ld.f32 	%f10, [%rd1+104];
	fma.rn.ftz.f32 	%f11, %f5, 0f5A0E1BCA, %f10;
	st.f32 	[%rd1+104], %f11;
	ld.u32 	%r5, [%rd1+44];
	setp.eq.s32 	%p1, %r5, 0;
	ld.const.f32 	%f12, [params+232];
	ld.const.f32 	%f13, [params+268];
	selp.f32 	%f14, %f13, %f12, %p1;
	ld.f32 	%f15, [%rd1];
	add.ftz.f32 	%f16, %f15, %f14;
	st.f32 	[%rd1], %f16;
	ld.const.f32 	%f17, [params+236];
	ld.const.f32 	%f18, [params+272];
	selp.f32 	%f19, %f18, %f17, %p1;
	ld.f32 	%f20, [%rd1+4];
	add.ftz.f32 	%f1, %f20, %f19;
	st.f32 	[%rd1+4], %f1;
	ld.const.f32 	%f21, [params+240];
	ld.const.f32 	%f22, [params+276];
	selp.f32 	%f23, %f22, %f21, %p1;
	ld.f32 	%f24, [%rd1+8];
	add.ftz.f32 	%f2, %f24, %f23;
	st.f32 	[%rd1+8], %f2;
	ld.u32 	%r6, [%rd1+12];
	or.b32  	%r7, %r6, -2147483648;
	st.u32 	[%rd1+12], %r7;
	and.b32  	%r8, %r6, 16777216;
	setp.eq.s32 	%p2, %r8, 0;
	@%p2 bra 	$L__BB0_2;

	ld.f32 	%f25, [%rd1+16];
	ld.f32 	%f26, [%rd1];
	mul.ftz.f32 	%f27, %f26, %f25;
	st.f32 	[%rd1+16], %f27;
	ld.f32 	%f28, [%rd1+20];
	mul.ftz.f32 	%f29, %f1, %f28;
	st.f32 	[%rd1+20], %f29;
	ld.f32 	%f30, [%rd1+24];
	mul.ftz.f32 	%f31, %f2, %f30;
	st.f32 	[%rd1+24], %f31;

$L__BB0_2:
	ret;

}

