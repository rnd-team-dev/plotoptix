//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__intersection__parallelograms_front
.const .align 8 .b8 params[288];

.visible .entry __intersection__parallelograms_front()
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<14>;


	// begin inline asm
	call (%f17), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f18), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f19), _optix_get_object_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%rd3), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.v2.u64 	{%rd4, %rd5}, [%rd3+16];
	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	cvt.u64.u32 	%rd2, %r1;
	mul.wide.u32 	%rd8, %r1, 12;
	add.s64 	%rd9, %rd4, %rd8;
	add.s64 	%rd10, %rd5, %rd8;
	ld.f32 	%f4, [%rd10+8];
	ld.f32 	%f5, [%rd9+4];
	mul.ftz.f32 	%f20, %f5, %f4;
	ld.f32 	%f6, [%rd10+4];
	ld.f32 	%f7, [%rd9+8];
	mul.ftz.f32 	%f21, %f7, %f6;
	sub.ftz.f32 	%f8, %f20, %f21;
	ld.f32 	%f9, [%rd10];
	mul.ftz.f32 	%f22, %f7, %f9;
	ld.f32 	%f10, [%rd9];
	mul.ftz.f32 	%f23, %f10, %f4;
	sub.ftz.f32 	%f11, %f22, %f23;
	mul.ftz.f32 	%f24, %f10, %f6;
	mul.ftz.f32 	%f25, %f5, %f9;
	sub.ftz.f32 	%f12, %f24, %f25;
	mul.ftz.f32 	%f26, %f18, %f11;
	fma.rn.ftz.f32 	%f27, %f17, %f8, %f26;
	fma.rn.ftz.f32 	%f13, %f19, %f12, %f27;
	setp.ge.ftz.f32 	%p1, %f13, 0f00000000;
	@%p1 bra 	$L__BB0_3;

	ld.u64 	%rd11, [%rd3];
	mul.lo.s64 	%rd12, %rd2, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.f32 	%f33, [%rd13];
	ld.f32 	%f34, [%rd13+4];
	ld.f32 	%f35, [%rd13+8];
	// begin inline asm
	call (%f28), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f29), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f30), _optix_get_object_ray_origin_z, ();
	// end inline asm
	sub.ftz.f32 	%f36, %f33, %f28;
	sub.ftz.f32 	%f37, %f34, %f29;
	sub.ftz.f32 	%f38, %f35, %f30;
	rcp.approx.ftz.f32 	%f39, %f13;
	mul.ftz.f32 	%f40, %f39, %f36;
	mul.ftz.f32 	%f41, %f39, %f37;
	mul.ftz.f32 	%f42, %f39, %f38;
	mul.ftz.f32 	%f43, %f18, %f42;
	mul.ftz.f32 	%f44, %f19, %f41;
	sub.ftz.f32 	%f45, %f43, %f44;
	mul.ftz.f32 	%f46, %f19, %f40;
	mul.ftz.f32 	%f47, %f17, %f42;
	sub.ftz.f32 	%f48, %f46, %f47;
	mul.ftz.f32 	%f49, %f17, %f41;
	mul.ftz.f32 	%f50, %f18, %f40;
	sub.ftz.f32 	%f51, %f49, %f50;
	mul.ftz.f32 	%f52, %f6, %f48;
	fma.rn.ftz.f32 	%f53, %f9, %f45, %f52;
	fma.rn.ftz.f32 	%f14, %f4, %f51, %f53;
	mul.ftz.f32 	%f54, %f5, %f48;
	fma.rn.ftz.f32 	%f55, %f10, %f45, %f54;
	fma.rn.ftz.f32 	%f15, %f7, %f51, %f55;
	mul.ftz.f32 	%f56, %f11, %f41;
	fma.rn.ftz.f32 	%f57, %f8, %f40, %f56;
	fma.rn.ftz.f32 	%f16, %f12, %f42, %f57;
	// begin inline asm
	call (%f31), _optix_get_ray_tmax, ();
	// end inline asm
	setp.geu.ftz.f32 	%p2, %f16, %f31;
	// begin inline asm
	call (%f32), _optix_get_ray_tmin, ();
	// end inline asm
	setp.leu.ftz.f32 	%p3, %f16, %f32;
	or.pred  	%p4, %p2, %p3;
	setp.gtu.ftz.f32 	%p5, %f14, 0f80000000;
	or.pred  	%p6, %p4, %p5;
	setp.ltu.ftz.f32 	%p7, %f15, 0f00000000;
	or.pred  	%p8, %p7, %p6;
	setp.ltu.ftz.f32 	%p9, %f14, 0fBF800000;
	or.pred  	%p10, %p9, %p8;
	setp.gtu.ftz.f32 	%p11, %f15, 0f3F800000;
	or.pred  	%p12, %p11, %p10;
	@%p12 bra 	$L__BB0_3;

	neg.ftz.f32 	%f59, %f14;
	mov.b32 	%r7, %f59;
	mov.f32 	%f60, 0f3F800000;
	sub.ftz.f32 	%f61, %f60, %f15;
	mov.b32 	%r8, %f61;
	mov.b32 	%r6, %f12;
	mov.b32 	%r5, %f11;
	mov.b32 	%r4, %f8;
	mov.u32 	%r3, 7;
	mov.u32 	%r9, 0;
	// begin inline asm
	call (%r2), _optix_report_intersection_6, (%f16, %r3, %r4, %r5, %r6, %r7, %r8, %r9);
	// end inline asm

$L__BB0_3:
	ret;

}

