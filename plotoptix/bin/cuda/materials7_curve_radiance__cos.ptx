//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__curve_radiance__cos
.const .align 8 .b8 params[288];

.visible .entry __closesthit__curve_radiance__cos()
{
	.reg .pred 	%p<76>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<3244>;
	.reg .b32 	%r<987>;
	.reg .b64 	%rd<784>;


	// begin inline asm
	call (%rd46), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r31), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r32, 3;
	// begin inline asm
	call _optix_set_payload, (%r32, %r31);
	// end inline asm
	// begin inline asm
	call (%f1137), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f1138), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f1139), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f1140), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f1141), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1142), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f1143), _optix_get_world_ray_direction_z, ();
	// end inline asm
	fma.rn.ftz.f32 	%f1, %f1140, %f1141, %f1137;
	fma.rn.ftz.f32 	%f2, %f1140, %f1142, %f1138;
	fma.rn.ftz.f32 	%f3, %f1140, %f1143, %f1139;
	// begin inline asm
	call (%r34), _optix_get_hit_kind, ();
	// end inline asm
	// begin inline asm
	call (%r35), _optix_get_primitive_type_from_hit_kind, (%r34);
	// end inline asm
	setp.eq.s32 	%p1, %r35, 9473;
	@%p1 bra 	$L__BB0_97;

	setp.eq.s32 	%p2, %r35, 9474;
	@%p2 bra 	$L__BB0_50;

	setp.ne.s32 	%p3, %r35, 9475;
	@%p3 bra 	$L__BB0_144;

	// begin inline asm
	call (%rd47), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r38), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f1153, 0f00000000;
	// begin inline asm
	call (%f1145, %f1146, %f1147, %f1148,  %f1149, %f1150, %f1151, %f1152), _optix_get_linear_curve_vertex_data, (%rd47, %r31, %r38, %f1153);
	// end inline asm
	sub.ftz.f32 	%f13, %f1149, %f1145;
	sub.ftz.f32 	%f15, %f1150, %f1146;
	sub.ftz.f32 	%f17, %f1151, %f1147;
	// begin inline asm
	call (%r41), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p4, %r41, 0;
	@%p4 bra 	$L__BB0_23;

	// begin inline asm
	call (%r42), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1154), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p5, %r42, 0;
	@%p5 bra 	$L__BB0_22;

	mov.u32 	%r979, 0;

$L__BB0_6:
	.pragma "nounroll";
	// begin inline asm
	call (%rd49), _optix_get_transform_list_handle, (%r979);
	// end inline asm
	// begin inline asm
	call (%r45), _optix_get_transform_type_from_handle, (%rd49);
	// end inline asm
	or.b32  	%r46, %r45, 1;
	setp.eq.s32 	%p6, %r46, 3;
	@%p6 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_7;

$L__BB0_12:
	setp.eq.s32 	%p9, %r45, 2;
	@%p9 bra 	$L__BB0_16;
	bra.uni 	$L__BB0_13;

$L__BB0_16:
	// begin inline asm
	call (%rd121), _optix_get_matrix_motion_transform_from_handle, (%rd49);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd123, %rd121;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd123];
	// end inline asm
	add.s64 	%rd127, %rd121, 16;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd126];
	// end inline asm
	add.s64 	%rd130, %rd121, 32;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd129];
	// end inline asm
	add.s64 	%rd133, %rd121, 48;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r146,%r147,%r148,%r149}, [%rd132];
	// end inline asm
	add.s64 	%rd136, %rd121, 64;
	// begin inline asm
	cvta.to.global.u64 %rd135, %rd136;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r150,%r151,%r152,%r153}, [%rd135];
	// end inline asm
	add.s64 	%rd139, %rd121, 80;
	// begin inline asm
	cvta.to.global.u64 %rd138, %rd139;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r154,%r155,%r156,%r157}, [%rd138];
	// end inline asm
	add.s64 	%rd142, %rd121, 96;
	// begin inline asm
	cvta.to.global.u64 %rd141, %rd142;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r158,%r159,%r160,%r161}, [%rd141];
	// end inline asm
	add.s64 	%rd145, %rd121, 112;
	// begin inline asm
	cvta.to.global.u64 %rd144, %rd145;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r162,%r163,%r164,%r165}, [%rd144];
	// end inline asm
	mov.b32 	%f1281, %r137;
	mov.b32 	%f1282, %r138;
	and.b32  	%r178, %r136, 65535;
	add.s32 	%r179, %r178, -1;
	cvt.rn.f32.s32 	%f1283, %r179;
	sub.ftz.f32 	%f1284, %f1154, %f1281;
	mul.ftz.f32 	%f1285, %f1284, %f1283;
	sub.ftz.f32 	%f1286, %f1282, %f1281;
	div.approx.ftz.f32 	%f1287, %f1285, %f1286;
	min.ftz.f32 	%f1288, %f1283, %f1287;
	mov.f32 	%f1289, 0f00000000;
	max.ftz.f32 	%f1290, %f1289, %f1288;
	cvt.rmi.ftz.f32.f32 	%f1291, %f1290;
	sub.ftz.f32 	%f104, %f1290, %f1291;
	cvt.rzi.ftz.s32.f32 	%r180, %f1291;
	cvt.s64.s32 	%rd8, %r180;
	mul.wide.s32 	%rd156, %r180, 48;
	add.s64 	%rd148, %rd130, %rd156;
	// begin inline asm
	cvta.to.global.u64 %rd147, %rd148;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r166,%r167,%r168,%r169}, [%rd147];
	// end inline asm
	mov.b32 	%f2855, %r166;
	mov.b32 	%f2854, %r167;
	mov.b32 	%f2853, %r168;
	mov.b32 	%f2852, %r169;
	add.s64 	%rd151, %rd148, 16;
	// begin inline asm
	cvta.to.global.u64 %rd150, %rd151;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r170,%r171,%r172,%r173}, [%rd150];
	// end inline asm
	mov.b32 	%f2859, %r170;
	mov.b32 	%f2858, %r171;
	mov.b32 	%f2857, %r172;
	mov.b32 	%f2856, %r173;
	add.s64 	%rd154, %rd148, 32;
	// begin inline asm
	cvta.to.global.u64 %rd153, %rd154;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r174,%r175,%r176,%r177}, [%rd153];
	// end inline asm
	mov.b32 	%f2863, %r174;
	mov.b32 	%f2862, %r175;
	mov.b32 	%f2861, %r176;
	mov.b32 	%f2860, %r177;
	setp.leu.ftz.f32 	%p11, %f104, 0f00000000;
	@%p11 bra 	$L__BB0_18;

	mov.f32 	%f1292, 0f3F800000;
	sub.ftz.f32 	%f1293, %f1292, %f104;
	mul.lo.s64 	%rd166, %rd8, 48;
	add.s64 	%rd167, %rd121, %rd166;
	add.s64 	%rd158, %rd167, 80;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r181,%r182,%r183,%r184}, [%rd157];
	// end inline asm
	mov.b32 	%f1294, %r181;
	mov.b32 	%f1295, %r182;
	mov.b32 	%f1296, %r183;
	mov.b32 	%f1297, %r184;
	mul.ftz.f32 	%f1298, %f104, %f1294;
	mul.ftz.f32 	%f1299, %f104, %f1295;
	mul.ftz.f32 	%f1300, %f104, %f1296;
	mul.ftz.f32 	%f1301, %f104, %f1297;
	fma.rn.ftz.f32 	%f2855, %f1293, %f2855, %f1298;
	fma.rn.ftz.f32 	%f2854, %f1293, %f2854, %f1299;
	fma.rn.ftz.f32 	%f2853, %f1293, %f2853, %f1300;
	fma.rn.ftz.f32 	%f2852, %f1293, %f2852, %f1301;
	add.s64 	%rd161, %rd167, 96;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r185,%r186,%r187,%r188}, [%rd160];
	// end inline asm
	mov.b32 	%f1302, %r185;
	mov.b32 	%f1303, %r186;
	mov.b32 	%f1304, %r187;
	mov.b32 	%f1305, %r188;
	mul.ftz.f32 	%f1306, %f104, %f1302;
	mul.ftz.f32 	%f1307, %f104, %f1303;
	mul.ftz.f32 	%f1308, %f104, %f1304;
	mul.ftz.f32 	%f1309, %f104, %f1305;
	fma.rn.ftz.f32 	%f2859, %f1293, %f2859, %f1306;
	fma.rn.ftz.f32 	%f2858, %f1293, %f2858, %f1307;
	fma.rn.ftz.f32 	%f2857, %f1293, %f2857, %f1308;
	fma.rn.ftz.f32 	%f2856, %f1293, %f2856, %f1309;
	add.s64 	%rd164, %rd167, 112;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r189,%r190,%r191,%r192}, [%rd163];
	// end inline asm
	mov.b32 	%f1310, %r189;
	mov.b32 	%f1311, %r190;
	mov.b32 	%f1312, %r191;
	mov.b32 	%f1313, %r192;
	mul.ftz.f32 	%f1314, %f104, %f1310;
	mul.ftz.f32 	%f1315, %f104, %f1311;
	mul.ftz.f32 	%f1316, %f104, %f1312;
	mul.ftz.f32 	%f1317, %f104, %f1313;
	fma.rn.ftz.f32 	%f2863, %f1293, %f2863, %f1314;
	fma.rn.ftz.f32 	%f2862, %f1293, %f2862, %f1315;
	fma.rn.ftz.f32 	%f2861, %f1293, %f2861, %f1316;
	fma.rn.ftz.f32 	%f2860, %f1293, %f2860, %f1317;
	bra.uni 	$L__BB0_18;

$L__BB0_7:
	mov.f32 	%f2867, 0f3F800000;
	setp.eq.s32 	%p7, %r45, 4;
	@%p7 bra 	$L__BB0_10;

	setp.ne.s32 	%p8, %r45, 1;
	mov.f32 	%f2864, %f1153;
	mov.f32 	%f2865, %f1153;
	mov.f32 	%f2866, %f1153;
	mov.f32 	%f2868, %f1153;
	mov.f32 	%f2869, %f1153;
	mov.f32 	%f2870, %f2867;
	mov.f32 	%f2871, %f1153;
	mov.f32 	%f2872, %f1153;
	mov.f32 	%f2873, %f2867;
	mov.f32 	%f2874, %f1153;
	mov.f32 	%f2875, %f1153;
	@%p8 bra 	$L__BB0_19;

	// begin inline asm
	call (%rd51), _optix_get_static_transform_from_handle, (%rd49);
	// end inline asm
	add.s64 	%rd778, %rd51, 64;
	bra.uni 	$L__BB0_11;

$L__BB0_13:
	// begin inline asm
	call (%rd64), _optix_get_srt_motion_transform_from_handle, (%rd49);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd66, %rd64;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd66];
	// end inline asm
	add.s64 	%rd70, %rd64, 16;
	// begin inline asm
	cvta.to.global.u64 %rd69, %rd70;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd69];
	// end inline asm
	add.s64 	%rd73, %rd64, 32;
	// begin inline asm
	cvta.to.global.u64 %rd72, %rd73;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd72];
	// end inline asm
	add.s64 	%rd76, %rd64, 48;
	// begin inline asm
	cvta.to.global.u64 %rd75, %rd76;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd75];
	// end inline asm
	add.s64 	%rd79, %rd64, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd78];
	// end inline asm
	add.s64 	%rd82, %rd64, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd81];
	// end inline asm
	add.s64 	%rd85, %rd64, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r83,%r84,%r85,%r86}, [%rd84];
	// end inline asm
	add.s64 	%rd88, %rd64, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r87,%r88,%r89,%r90}, [%rd87];
	// end inline asm
	add.s64 	%rd91, %rd64, 128;
	// begin inline asm
	cvta.to.global.u64 %rd90, %rd91;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r91,%r92,%r93,%r94}, [%rd90];
	// end inline asm
	add.s64 	%rd94, %rd64, 144;
	// begin inline asm
	cvta.to.global.u64 %rd93, %rd94;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r95,%r96,%r97,%r98}, [%rd93];
	// end inline asm
	mov.b32 	%f1169, %r62;
	mov.b32 	%f1170, %r63;
	and.b32  	%r115, %r61, 65535;
	add.s32 	%r116, %r115, -1;
	cvt.rn.f32.s32 	%f1171, %r116;
	sub.ftz.f32 	%f1172, %f1154, %f1169;
	mul.ftz.f32 	%f1173, %f1172, %f1171;
	sub.ftz.f32 	%f1174, %f1170, %f1169;
	div.approx.ftz.f32 	%f1175, %f1173, %f1174;
	min.ftz.f32 	%f1176, %f1171, %f1175;
	mov.f32 	%f1177, 0f00000000;
	max.ftz.f32 	%f1178, %f1177, %f1176;
	cvt.rmi.ftz.f32.f32 	%f1179, %f1178;
	sub.ftz.f32 	%f43, %f1178, %f1179;
	cvt.rzi.ftz.s32.f32 	%r117, %f1179;
	mul.wide.s32 	%rd108, %r117, 64;
	add.s64 	%rd97, %rd73, %rd108;
	// begin inline asm
	cvta.to.global.u64 %rd96, %rd97;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r99,%r100,%r101,%r102}, [%rd96];
	// end inline asm
	mov.b32 	%f2836, %r99;
	mov.b32 	%f2837, %r100;
	mov.b32 	%f2838, %r101;
	mov.b32 	%f2839, %r102;
	add.s64 	%rd100, %rd97, 16;
	// begin inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r103,%r104,%r105,%r106}, [%rd99];
	// end inline asm
	mov.b32 	%f2840, %r103;
	mov.b32 	%f2841, %r104;
	mov.b32 	%f2842, %r105;
	mov.b32 	%f2843, %r106;
	add.s64 	%rd103, %rd97, 32;
	// begin inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r107,%r108,%r109,%r110}, [%rd102];
	// end inline asm
	mov.b32 	%f2844, %r107;
	mov.b32 	%f2845, %r108;
	mov.b32 	%f2846, %r109;
	mov.b32 	%f2847, %r110;
	add.s64 	%rd106, %rd97, 48;
	// begin inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r111,%r112,%r113,%r114}, [%rd105];
	// end inline asm
	mov.b32 	%f2848, %r111;
	mov.b32 	%f2849, %r112;
	mov.b32 	%f2850, %r113;
	mov.b32 	%f2851, %r114;
	setp.leu.ftz.f32 	%p10, %f43, 0f00000000;
	@%p10 bra 	$L__BB0_15;

	mov.f32 	%f1180, 0f3F800000;
	sub.ftz.f32 	%f1181, %f1180, %f43;
	add.s64 	%rd110, %rd97, 64;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd109];
	// end inline asm
	mov.b32 	%f1182, %r118;
	mov.b32 	%f1183, %r119;
	mov.b32 	%f1184, %r120;
	mov.b32 	%f1185, %r121;
	mul.ftz.f32 	%f1186, %f43, %f1182;
	mul.ftz.f32 	%f1187, %f43, %f1183;
	mul.ftz.f32 	%f1188, %f43, %f1184;
	mul.ftz.f32 	%f1189, %f43, %f1185;
	fma.rn.ftz.f32 	%f2836, %f1181, %f2836, %f1186;
	fma.rn.ftz.f32 	%f2837, %f1181, %f2837, %f1187;
	fma.rn.ftz.f32 	%f2838, %f1181, %f2838, %f1188;
	fma.rn.ftz.f32 	%f2839, %f1181, %f2839, %f1189;
	add.s64 	%rd113, %rd97, 80;
	// begin inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd112];
	// end inline asm
	mov.b32 	%f1190, %r122;
	mov.b32 	%f1191, %r123;
	mov.b32 	%f1192, %r124;
	mov.b32 	%f1193, %r125;
	mul.ftz.f32 	%f1194, %f43, %f1190;
	mul.ftz.f32 	%f1195, %f43, %f1191;
	mul.ftz.f32 	%f1196, %f43, %f1192;
	mul.ftz.f32 	%f1197, %f43, %f1193;
	fma.rn.ftz.f32 	%f2840, %f1181, %f2840, %f1194;
	fma.rn.ftz.f32 	%f2841, %f1181, %f2841, %f1195;
	fma.rn.ftz.f32 	%f2842, %f1181, %f2842, %f1196;
	fma.rn.ftz.f32 	%f2843, %f1181, %f2843, %f1197;
	add.s64 	%rd116, %rd97, 96;
	// begin inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd115];
	// end inline asm
	mov.b32 	%f1198, %r126;
	mov.b32 	%f1199, %r127;
	mov.b32 	%f1200, %r128;
	mov.b32 	%f1201, %r129;
	mul.ftz.f32 	%f1202, %f43, %f1198;
	mul.ftz.f32 	%f1203, %f43, %f1199;
	mul.ftz.f32 	%f1204, %f43, %f1200;
	mul.ftz.f32 	%f1205, %f43, %f1201;
	fma.rn.ftz.f32 	%f2844, %f1181, %f2844, %f1202;
	fma.rn.ftz.f32 	%f1206, %f1181, %f2845, %f1203;
	fma.rn.ftz.f32 	%f1207, %f1181, %f2846, %f1204;
	fma.rn.ftz.f32 	%f1208, %f1181, %f2847, %f1205;
	add.s64 	%rd119, %rd97, 112;
	// begin inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd118];
	// end inline asm
	mov.b32 	%f1209, %r130;
	mov.b32 	%f1210, %r131;
	mov.b32 	%f1211, %r132;
	mov.b32 	%f1212, %r133;
	mul.ftz.f32 	%f1213, %f43, %f1209;
	mul.ftz.f32 	%f1214, %f43, %f1210;
	mul.ftz.f32 	%f1215, %f43, %f1211;
	mul.ftz.f32 	%f1216, %f43, %f1212;
	fma.rn.ftz.f32 	%f1217, %f1181, %f2848, %f1213;
	fma.rn.ftz.f32 	%f2849, %f1181, %f2849, %f1214;
	fma.rn.ftz.f32 	%f2850, %f1181, %f2850, %f1215;
	fma.rn.ftz.f32 	%f2851, %f1181, %f2851, %f1216;
	mul.ftz.f32 	%f1218, %f1207, %f1207;
	fma.rn.ftz.f32 	%f1219, %f1206, %f1206, %f1218;
	fma.rn.ftz.f32 	%f1220, %f1208, %f1208, %f1219;
	fma.rn.ftz.f32 	%f1221, %f1217, %f1217, %f1220;
	rsqrt.approx.ftz.f32 	%f1222, %f1221;
	mul.ftz.f32 	%f2845, %f1206, %f1222;
	mul.ftz.f32 	%f2846, %f1207, %f1222;
	mul.ftz.f32 	%f2847, %f1208, %f1222;
	mul.ftz.f32 	%f2848, %f1222, %f1217;

$L__BB0_15:
	mul.ftz.f32 	%f1223, %f2846, %f2846;
	fma.rn.ftz.f32 	%f1224, %f2845, %f2845, %f1223;
	fma.rn.ftz.f32 	%f1225, %f2847, %f2847, %f1224;
	fma.rn.ftz.f32 	%f1226, %f2848, %f2848, %f1225;
	rcp.approx.ftz.f32 	%f1227, %f1226;
	mul.ftz.f32 	%f1228, %f2845, %f1227;
	mul.ftz.f32 	%f1229, %f2846, %f1227;
	mul.ftz.f32 	%f1230, %f2847, %f1227;
	mul.ftz.f32 	%f1231, %f2848, %f1227;
	mul.ftz.f32 	%f1232, %f2845, %f1228;
	mul.ftz.f32 	%f1233, %f2846, %f1229;
	mul.ftz.f32 	%f1234, %f2847, %f1230;
	mul.ftz.f32 	%f1235, %f2845, %f1229;
	mul.ftz.f32 	%f1236, %f2847, %f1231;
	mul.ftz.f32 	%f1237, %f2845, %f1230;
	mul.ftz.f32 	%f1238, %f2846, %f1231;
	mul.ftz.f32 	%f1239, %f2846, %f1230;
	mul.ftz.f32 	%f1240, %f2845, %f1231;
	sub.ftz.f32 	%f1241, %f1232, %f1233;
	sub.ftz.f32 	%f1242, %f1241, %f1234;
	fma.rn.ftz.f32 	%f1243, %f2848, %f1231, %f1242;
	sub.ftz.f32 	%f1244, %f1235, %f1236;
	add.ftz.f32 	%f1245, %f1244, %f1244;
	add.ftz.f32 	%f1246, %f1237, %f1238;
	add.ftz.f32 	%f1247, %f1246, %f1246;
	add.ftz.f32 	%f1248, %f1235, %f1236;
	add.ftz.f32 	%f1249, %f1248, %f1248;
	sub.ftz.f32 	%f1250, %f1233, %f1232;
	sub.ftz.f32 	%f1251, %f1250, %f1234;
	fma.rn.ftz.f32 	%f1252, %f2848, %f1231, %f1251;
	sub.ftz.f32 	%f1253, %f1239, %f1240;
	add.ftz.f32 	%f1254, %f1253, %f1253;
	sub.ftz.f32 	%f1255, %f1237, %f1238;
	add.ftz.f32 	%f1256, %f1255, %f1255;
	add.ftz.f32 	%f1257, %f1239, %f1240;
	add.ftz.f32 	%f1258, %f1257, %f1257;
	neg.ftz.f32 	%f1259, %f1232;
	sub.ftz.f32 	%f1260, %f1259, %f1233;
	add.ftz.f32 	%f1261, %f1234, %f1260;
	fma.rn.ftz.f32 	%f1262, %f2848, %f1231, %f1261;
	mul.ftz.f32 	%f1263, %f2839, %f1243;
	fma.rn.ftz.f32 	%f1264, %f2842, %f1245, %f1263;
	fma.rn.ftz.f32 	%f1265, %f2844, %f1247, %f1264;
	add.ftz.f32 	%f2852, %f2849, %f1265;
	mul.ftz.f32 	%f1266, %f2842, %f1252;
	fma.rn.ftz.f32 	%f1267, %f2839, %f1249, %f1266;
	fma.rn.ftz.f32 	%f1268, %f2844, %f1254, %f1267;
	add.ftz.f32 	%f2856, %f2850, %f1268;
	mul.ftz.f32 	%f1269, %f2842, %f1258;
	fma.rn.ftz.f32 	%f1270, %f2839, %f1256, %f1269;
	fma.rn.ftz.f32 	%f1271, %f2844, %f1262, %f1270;
	add.ftz.f32 	%f2860, %f2851, %f1271;
	mul.ftz.f32 	%f1272, %f2838, %f1243;
	fma.rn.ftz.f32 	%f1273, %f2841, %f1245, %f1272;
	fma.rn.ftz.f32 	%f2853, %f2843, %f1247, %f1273;
	mul.ftz.f32 	%f1274, %f2841, %f1252;
	fma.rn.ftz.f32 	%f1275, %f2838, %f1249, %f1274;
	fma.rn.ftz.f32 	%f2857, %f2843, %f1254, %f1275;
	mul.ftz.f32 	%f1276, %f2841, %f1258;
	fma.rn.ftz.f32 	%f1277, %f2838, %f1256, %f1276;
	fma.rn.ftz.f32 	%f2861, %f2843, %f1262, %f1277;
	mul.ftz.f32 	%f1278, %f2837, %f1243;
	fma.rn.ftz.f32 	%f2854, %f2840, %f1245, %f1278;
	mul.ftz.f32 	%f1279, %f2840, %f1252;
	fma.rn.ftz.f32 	%f2858, %f2837, %f1249, %f1279;
	mul.ftz.f32 	%f1280, %f2840, %f1258;
	fma.rn.ftz.f32 	%f2862, %f2837, %f1256, %f1280;
	mul.ftz.f32 	%f2855, %f2836, %f1243;
	mul.ftz.f32 	%f2859, %f2836, %f1249;
	mul.ftz.f32 	%f2863, %f2836, %f1256;

$L__BB0_18:
	mul.ftz.f32 	%f1318, %f2857, %f2862;
	mul.ftz.f32 	%f1319, %f2858, %f2861;
	sub.ftz.f32 	%f1320, %f1319, %f1318;
	mul.ftz.f32 	%f1321, %f2855, %f1320;
	mul.ftz.f32 	%f1322, %f2857, %f2863;
	mul.ftz.f32 	%f1323, %f2859, %f2861;
	sub.ftz.f32 	%f1324, %f1323, %f1322;
	mul.ftz.f32 	%f1325, %f2854, %f1324;
	sub.ftz.f32 	%f1326, %f1321, %f1325;
	mul.ftz.f32 	%f1327, %f2858, %f2863;
	mul.ftz.f32 	%f1328, %f2859, %f2862;
	sub.ftz.f32 	%f1329, %f1328, %f1327;
	fma.rn.ftz.f32 	%f1330, %f2853, %f1329, %f1326;
	rcp.approx.ftz.f32 	%f1331, %f1330;
	mul.ftz.f32 	%f2867, %f1320, %f1331;
	mul.ftz.f32 	%f1332, %f2854, %f2861;
	mul.ftz.f32 	%f1333, %f2853, %f2862;
	sub.ftz.f32 	%f1334, %f1333, %f1332;
	mul.ftz.f32 	%f2866, %f1334, %f1331;
	mul.ftz.f32 	%f1335, %f2853, %f2858;
	mul.ftz.f32 	%f1336, %f2854, %f2857;
	sub.ftz.f32 	%f1337, %f1336, %f1335;
	mul.ftz.f32 	%f2865, %f1337, %f1331;
	sub.ftz.f32 	%f1338, %f1322, %f1323;
	mul.ftz.f32 	%f2871, %f1338, %f1331;
	mul.ftz.f32 	%f1339, %f2853, %f2863;
	mul.ftz.f32 	%f1340, %f2855, %f2861;
	sub.ftz.f32 	%f1341, %f1340, %f1339;
	mul.ftz.f32 	%f2870, %f1341, %f1331;
	mul.ftz.f32 	%f1342, %f2855, %f2857;
	mul.ftz.f32 	%f1343, %f2853, %f2859;
	sub.ftz.f32 	%f1344, %f1343, %f1342;
	mul.ftz.f32 	%f2869, %f1344, %f1331;
	mul.ftz.f32 	%f2875, %f1329, %f1331;
	mul.ftz.f32 	%f1345, %f2855, %f2862;
	mul.ftz.f32 	%f1346, %f2854, %f2863;
	sub.ftz.f32 	%f1347, %f1346, %f1345;
	mul.ftz.f32 	%f2874, %f1347, %f1331;
	mul.ftz.f32 	%f1348, %f2854, %f2859;
	mul.ftz.f32 	%f1349, %f2855, %f2858;
	sub.ftz.f32 	%f1350, %f1349, %f1348;
	mul.ftz.f32 	%f2873, %f1350, %f1331;
	mul.ftz.f32 	%f1351, %f2852, %f2867;
	neg.ftz.f32 	%f1352, %f1351;
	mul.ftz.f32 	%f1353, %f2856, %f2866;
	sub.ftz.f32 	%f1354, %f1352, %f1353;
	mul.ftz.f32 	%f1355, %f2860, %f2865;
	sub.ftz.f32 	%f2864, %f1354, %f1355;
	mul.ftz.f32 	%f1356, %f2852, %f2871;
	neg.ftz.f32 	%f1357, %f1356;
	mul.ftz.f32 	%f1358, %f2856, %f2870;
	sub.ftz.f32 	%f1359, %f1357, %f1358;
	mul.ftz.f32 	%f1360, %f2860, %f2869;
	sub.ftz.f32 	%f2868, %f1359, %f1360;
	mul.ftz.f32 	%f1361, %f2852, %f2875;
	neg.ftz.f32 	%f1362, %f1361;
	mul.ftz.f32 	%f1363, %f2856, %f2874;
	sub.ftz.f32 	%f1364, %f1362, %f1363;
	mul.ftz.f32 	%f1365, %f2860, %f2873;
	sub.ftz.f32 	%f2872, %f1364, %f1365;
	bra.uni 	$L__BB0_19;

$L__BB0_10:
	// begin inline asm
	call (%rd778), _optix_get_instance_inverse_transform_from_handle, (%rd49);
	// end inline asm

$L__BB0_11:
	// begin inline asm
	cvta.to.global.u64 %rd55, %rd778;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd55];
	// end inline asm
	mov.b32 	%f2867, %r47;
	mov.b32 	%f2866, %r48;
	mov.b32 	%f2865, %r49;
	mov.b32 	%f2864, %r50;
	add.s64 	%rd59, %rd778, 16;
	// begin inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd58];
	// end inline asm
	mov.b32 	%f2871, %r51;
	mov.b32 	%f2870, %r52;
	mov.b32 	%f2869, %r53;
	mov.b32 	%f2868, %r54;
	add.s64 	%rd62, %rd778, 32;
	// begin inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd61];
	// end inline asm
	mov.b32 	%f2875, %r55;
	mov.b32 	%f2874, %r56;
	mov.b32 	%f2873, %r57;
	mov.b32 	%f2872, %r58;

$L__BB0_19:
	setp.eq.s32 	%p12, %r979, 0;
	@%p12 bra 	$L__BB0_21;

	mul.ftz.f32 	%f1366, %f2832, %f2867;
	fma.rn.ftz.f32 	%f1367, %f2828, %f2866, %f1366;
	fma.rn.ftz.f32 	%f165, %f2824, %f2865, %f1367;
	mul.ftz.f32 	%f1368, %f2833, %f2867;
	fma.rn.ftz.f32 	%f1369, %f2829, %f2866, %f1368;
	fma.rn.ftz.f32 	%f166, %f2825, %f2865, %f1369;
	mul.ftz.f32 	%f1370, %f2834, %f2867;
	fma.rn.ftz.f32 	%f1371, %f2830, %f2866, %f1370;
	fma.rn.ftz.f32 	%f167, %f2826, %f2865, %f1371;
	mul.ftz.f32 	%f1372, %f2835, %f2867;
	fma.rn.ftz.f32 	%f1373, %f2831, %f2866, %f1372;
	fma.rn.ftz.f32 	%f1374, %f2827, %f2865, %f1373;
	add.ftz.f32 	%f2864, %f2864, %f1374;
	mul.ftz.f32 	%f1375, %f2832, %f2871;
	fma.rn.ftz.f32 	%f1376, %f2828, %f2870, %f1375;
	fma.rn.ftz.f32 	%f169, %f2824, %f2869, %f1376;
	mul.ftz.f32 	%f1377, %f2833, %f2871;
	fma.rn.ftz.f32 	%f1378, %f2829, %f2870, %f1377;
	fma.rn.ftz.f32 	%f170, %f2825, %f2869, %f1378;
	mul.ftz.f32 	%f1379, %f2834, %f2871;
	fma.rn.ftz.f32 	%f1380, %f2830, %f2870, %f1379;
	fma.rn.ftz.f32 	%f171, %f2826, %f2869, %f1380;
	mul.ftz.f32 	%f1381, %f2835, %f2871;
	fma.rn.ftz.f32 	%f1382, %f2831, %f2870, %f1381;
	fma.rn.ftz.f32 	%f1383, %f2827, %f2869, %f1382;
	add.ftz.f32 	%f2868, %f2868, %f1383;
	mul.ftz.f32 	%f1384, %f2832, %f2875;
	fma.rn.ftz.f32 	%f1385, %f2828, %f2874, %f1384;
	fma.rn.ftz.f32 	%f173, %f2824, %f2873, %f1385;
	mul.ftz.f32 	%f1386, %f2833, %f2875;
	fma.rn.ftz.f32 	%f1387, %f2829, %f2874, %f1386;
	fma.rn.ftz.f32 	%f174, %f2825, %f2873, %f1387;
	mul.ftz.f32 	%f1388, %f2834, %f2875;
	fma.rn.ftz.f32 	%f1389, %f2830, %f2874, %f1388;
	fma.rn.ftz.f32 	%f175, %f2826, %f2873, %f1389;
	mul.ftz.f32 	%f1390, %f2835, %f2875;
	fma.rn.ftz.f32 	%f1391, %f2831, %f2874, %f1390;
	fma.rn.ftz.f32 	%f1392, %f2827, %f2873, %f1391;
	add.ftz.f32 	%f2872, %f2872, %f1392;
	mov.f32 	%f2865, %f167;
	mov.f32 	%f2866, %f166;
	mov.f32 	%f2867, %f165;
	mov.f32 	%f2869, %f171;
	mov.f32 	%f2870, %f170;
	mov.f32 	%f2871, %f169;
	mov.f32 	%f2873, %f175;
	mov.f32 	%f2874, %f174;
	mov.f32 	%f2875, %f173;

$L__BB0_21:
	add.s32 	%r979, %r979, 1;
	setp.lt.u32 	%p13, %r979, %r42;
	mov.f32 	%f2824, %f2875;
	mov.f32 	%f2825, %f2874;
	mov.f32 	%f2826, %f2873;
	mov.f32 	%f2827, %f2872;
	mov.f32 	%f2828, %f2871;
	mov.f32 	%f2829, %f2870;
	mov.f32 	%f2830, %f2869;
	mov.f32 	%f2831, %f2868;
	mov.f32 	%f2832, %f2867;
	mov.f32 	%f2833, %f2866;
	mov.f32 	%f2834, %f2865;
	mov.f32 	%f2835, %f2864;
	@%p13 bra 	$L__BB0_6;

$L__BB0_22:
	mul.ftz.f32 	%f1393, %f1, %f2867;
	fma.rn.ftz.f32 	%f1394, %f2, %f2866, %f1393;
	fma.rn.ftz.f32 	%f1395, %f3, %f2865, %f1394;
	mul.ftz.f32 	%f1396, %f1, %f2871;
	fma.rn.ftz.f32 	%f1397, %f2, %f2870, %f1396;
	fma.rn.ftz.f32 	%f1398, %f3, %f2869, %f1397;
	mul.ftz.f32 	%f1399, %f1, %f2875;
	fma.rn.ftz.f32 	%f1400, %f2, %f2874, %f1399;
	fma.rn.ftz.f32 	%f1401, %f3, %f2873, %f1400;
	add.ftz.f32 	%f209, %f2872, %f1401;
	add.ftz.f32 	%f208, %f2868, %f1398;
	add.ftz.f32 	%f207, %f2864, %f1395;
	bra.uni 	$L__BB0_24;

$L__BB0_97:
	// begin inline asm
	call (%rd527), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r654), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f2235, 0f00000000;
	// begin inline asm
	call (%f2223, %f2224, %f2225, %f2226,  %f2227, %f2228, %f2229, %f2230,  %f2231, %f2232, %f2233, %f2234), _optix_get_quadratic_bspline_vertex_data, (%rd527, %r31, %r654, %f2235);
	// end inline asm
	mul.ftz.f32 	%f2236, %f2223, 0f3F000000;
	mul.ftz.f32 	%f2237, %f2224, 0f3F000000;
	mul.ftz.f32 	%f2238, %f2225, 0f3F000000;
	mul.ftz.f32 	%f2239, %f2226, 0f3F000000;
	fma.rn.ftz.f32 	%f744, %f2227, 0f3F000000, %f2236;
	fma.rn.ftz.f32 	%f745, %f2228, 0f3F000000, %f2237;
	fma.rn.ftz.f32 	%f746, %f2229, 0f3F000000, %f2238;
	fma.rn.ftz.f32 	%f747, %f2230, 0f3F000000, %f2239;
	sub.ftz.f32 	%f748, %f2227, %f2223;
	sub.ftz.f32 	%f749, %f2228, %f2224;
	sub.ftz.f32 	%f750, %f2229, %f2225;
	sub.ftz.f32 	%f751, %f2230, %f2226;
	sub.ftz.f32 	%f2240, %f2236, %f2227;
	sub.ftz.f32 	%f2241, %f2237, %f2228;
	sub.ftz.f32 	%f2242, %f2238, %f2229;
	sub.ftz.f32 	%f2243, %f2239, %f2230;
	fma.rn.ftz.f32 	%f752, %f2231, 0f3F000000, %f2240;
	fma.rn.ftz.f32 	%f753, %f2232, 0f3F000000, %f2241;
	fma.rn.ftz.f32 	%f754, %f2233, 0f3F000000, %f2242;
	fma.rn.ftz.f32 	%f755, %f2234, 0f3F000000, %f2243;
	// begin inline asm
	call (%r657), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p48, %r657, 0;
	@%p48 bra 	$L__BB0_117;

	// begin inline asm
	call (%r658), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2244), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p49, %r658, 0;
	@%p49 bra 	$L__BB0_116;

	mov.u32 	%r983, 0;

$L__BB0_100:
	.pragma "nounroll";
	// begin inline asm
	call (%rd529), _optix_get_transform_list_handle, (%r983);
	// end inline asm
	// begin inline asm
	call (%r661), _optix_get_transform_type_from_handle, (%rd529);
	// end inline asm
	or.b32  	%r662, %r661, 1;
	setp.eq.s32 	%p50, %r662, 3;
	@%p50 bra 	$L__BB0_106;
	bra.uni 	$L__BB0_101;

$L__BB0_106:
	setp.eq.s32 	%p53, %r661, 2;
	@%p53 bra 	$L__BB0_110;
	bra.uni 	$L__BB0_107;

$L__BB0_110:
	// begin inline asm
	call (%rd601), _optix_get_matrix_motion_transform_from_handle, (%rd529);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd603, %rd601;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r750,%r751,%r752,%r753}, [%rd603];
	// end inline asm
	add.s64 	%rd607, %rd601, 16;
	// begin inline asm
	cvta.to.global.u64 %rd606, %rd607;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r754,%r755,%r756,%r757}, [%rd606];
	// end inline asm
	add.s64 	%rd610, %rd601, 32;
	// begin inline asm
	cvta.to.global.u64 %rd609, %rd610;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r758,%r759,%r760,%r761}, [%rd609];
	// end inline asm
	add.s64 	%rd613, %rd601, 48;
	// begin inline asm
	cvta.to.global.u64 %rd612, %rd613;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r762,%r763,%r764,%r765}, [%rd612];
	// end inline asm
	add.s64 	%rd616, %rd601, 64;
	// begin inline asm
	cvta.to.global.u64 %rd615, %rd616;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r766,%r767,%r768,%r769}, [%rd615];
	// end inline asm
	add.s64 	%rd619, %rd601, 80;
	// begin inline asm
	cvta.to.global.u64 %rd618, %rd619;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r770,%r771,%r772,%r773}, [%rd618];
	// end inline asm
	add.s64 	%rd622, %rd601, 96;
	// begin inline asm
	cvta.to.global.u64 %rd621, %rd622;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r774,%r775,%r776,%r777}, [%rd621];
	// end inline asm
	add.s64 	%rd625, %rd601, 112;
	// begin inline asm
	cvta.to.global.u64 %rd624, %rd625;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r778,%r779,%r780,%r781}, [%rd624];
	// end inline asm
	mov.b32 	%f2371, %r753;
	mov.b32 	%f2372, %r754;
	and.b32  	%r794, %r752, 65535;
	add.s32 	%r795, %r794, -1;
	cvt.rn.f32.s32 	%f2373, %r795;
	sub.ftz.f32 	%f2374, %f2244, %f2371;
	mul.ftz.f32 	%f2375, %f2374, %f2373;
	sub.ftz.f32 	%f2376, %f2372, %f2371;
	div.approx.ftz.f32 	%f2377, %f2375, %f2376;
	min.ftz.f32 	%f2378, %f2373, %f2377;
	mov.f32 	%f2379, 0f00000000;
	max.ftz.f32 	%f2380, %f2379, %f2378;
	cvt.rmi.ftz.f32.f32 	%f2381, %f2380;
	sub.ftz.f32 	%f842, %f2380, %f2381;
	cvt.rzi.ftz.s32.f32 	%r796, %f2381;
	cvt.s64.s32 	%rd36, %r796;
	mul.wide.s32 	%rd636, %r796, 48;
	add.s64 	%rd628, %rd610, %rd636;
	// begin inline asm
	cvta.to.global.u64 %rd627, %rd628;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r782,%r783,%r784,%r785}, [%rd627];
	// end inline asm
	mov.b32 	%f3134, %r782;
	mov.b32 	%f3135, %r783;
	mov.b32 	%f3136, %r784;
	mov.b32 	%f3137, %r785;
	add.s64 	%rd631, %rd628, 16;
	// begin inline asm
	cvta.to.global.u64 %rd630, %rd631;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r786,%r787,%r788,%r789}, [%rd630];
	// end inline asm
	mov.b32 	%f3130, %r786;
	mov.b32 	%f3131, %r787;
	mov.b32 	%f3132, %r788;
	mov.b32 	%f3133, %r789;
	add.s64 	%rd634, %rd628, 32;
	// begin inline asm
	cvta.to.global.u64 %rd633, %rd634;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r790,%r791,%r792,%r793}, [%rd633];
	// end inline asm
	mov.b32 	%f3126, %r790;
	mov.b32 	%f3127, %r791;
	mov.b32 	%f3128, %r792;
	mov.b32 	%f3129, %r793;
	setp.leu.ftz.f32 	%p55, %f842, 0f00000000;
	@%p55 bra 	$L__BB0_112;

	mov.f32 	%f2382, 0f3F800000;
	sub.ftz.f32 	%f2383, %f2382, %f842;
	mul.lo.s64 	%rd646, %rd36, 48;
	add.s64 	%rd647, %rd601, %rd646;
	add.s64 	%rd638, %rd647, 80;
	// begin inline asm
	cvta.to.global.u64 %rd637, %rd638;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r797,%r798,%r799,%r800}, [%rd637];
	// end inline asm
	mov.b32 	%f2384, %r797;
	mov.b32 	%f2385, %r798;
	mov.b32 	%f2386, %r799;
	mov.b32 	%f2387, %r800;
	mul.ftz.f32 	%f2388, %f842, %f2384;
	mul.ftz.f32 	%f2389, %f842, %f2385;
	mul.ftz.f32 	%f2390, %f842, %f2386;
	mul.ftz.f32 	%f2391, %f842, %f2387;
	fma.rn.ftz.f32 	%f3134, %f2383, %f3134, %f2388;
	fma.rn.ftz.f32 	%f3135, %f2383, %f3135, %f2389;
	fma.rn.ftz.f32 	%f3136, %f2383, %f3136, %f2390;
	fma.rn.ftz.f32 	%f3137, %f2383, %f3137, %f2391;
	add.s64 	%rd641, %rd647, 96;
	// begin inline asm
	cvta.to.global.u64 %rd640, %rd641;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r801,%r802,%r803,%r804}, [%rd640];
	// end inline asm
	mov.b32 	%f2392, %r801;
	mov.b32 	%f2393, %r802;
	mov.b32 	%f2394, %r803;
	mov.b32 	%f2395, %r804;
	mul.ftz.f32 	%f2396, %f842, %f2392;
	mul.ftz.f32 	%f2397, %f842, %f2393;
	mul.ftz.f32 	%f2398, %f842, %f2394;
	mul.ftz.f32 	%f2399, %f842, %f2395;
	fma.rn.ftz.f32 	%f3130, %f2383, %f3130, %f2396;
	fma.rn.ftz.f32 	%f3131, %f2383, %f3131, %f2397;
	fma.rn.ftz.f32 	%f3132, %f2383, %f3132, %f2398;
	fma.rn.ftz.f32 	%f3133, %f2383, %f3133, %f2399;
	add.s64 	%rd644, %rd647, 112;
	// begin inline asm
	cvta.to.global.u64 %rd643, %rd644;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r805,%r806,%r807,%r808}, [%rd643];
	// end inline asm
	mov.b32 	%f2400, %r805;
	mov.b32 	%f2401, %r806;
	mov.b32 	%f2402, %r807;
	mov.b32 	%f2403, %r808;
	mul.ftz.f32 	%f2404, %f842, %f2400;
	mul.ftz.f32 	%f2405, %f842, %f2401;
	mul.ftz.f32 	%f2406, %f842, %f2402;
	mul.ftz.f32 	%f2407, %f842, %f2403;
	fma.rn.ftz.f32 	%f3126, %f2383, %f3126, %f2404;
	fma.rn.ftz.f32 	%f3127, %f2383, %f3127, %f2405;
	fma.rn.ftz.f32 	%f3128, %f2383, %f3128, %f2406;
	fma.rn.ftz.f32 	%f3129, %f2383, %f3129, %f2407;
	bra.uni 	$L__BB0_112;

$L__BB0_101:
	mov.f32 	%f3140, 0f3F800000;
	setp.eq.s32 	%p51, %r661, 4;
	@%p51 bra 	$L__BB0_104;

	setp.ne.s32 	%p52, %r661, 1;
	mov.f32 	%f3138, %f2235;
	mov.f32 	%f3139, %f2235;
	mov.f32 	%f3141, %f2235;
	mov.f32 	%f3142, %f2235;
	mov.f32 	%f3143, %f3140;
	mov.f32 	%f3144, %f2235;
	mov.f32 	%f3145, %f2235;
	mov.f32 	%f3146, %f3140;
	mov.f32 	%f3147, %f2235;
	mov.f32 	%f3148, %f2235;
	mov.f32 	%f3149, %f2235;
	@%p52 bra 	$L__BB0_113;

	// begin inline asm
	call (%rd531), _optix_get_static_transform_from_handle, (%rd529);
	// end inline asm
	add.s64 	%rd782, %rd531, 64;
	bra.uni 	$L__BB0_105;

$L__BB0_107:
	// begin inline asm
	call (%rd544), _optix_get_srt_motion_transform_from_handle, (%rd529);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd546, %rd544;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r675,%r676,%r677,%r678}, [%rd546];
	// end inline asm
	add.s64 	%rd550, %rd544, 16;
	// begin inline asm
	cvta.to.global.u64 %rd549, %rd550;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r679,%r680,%r681,%r682}, [%rd549];
	// end inline asm
	add.s64 	%rd553, %rd544, 32;
	// begin inline asm
	cvta.to.global.u64 %rd552, %rd553;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r683,%r684,%r685,%r686}, [%rd552];
	// end inline asm
	add.s64 	%rd556, %rd544, 48;
	// begin inline asm
	cvta.to.global.u64 %rd555, %rd556;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r687,%r688,%r689,%r690}, [%rd555];
	// end inline asm
	add.s64 	%rd559, %rd544, 64;
	// begin inline asm
	cvta.to.global.u64 %rd558, %rd559;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r691,%r692,%r693,%r694}, [%rd558];
	// end inline asm
	add.s64 	%rd562, %rd544, 80;
	// begin inline asm
	cvta.to.global.u64 %rd561, %rd562;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r695,%r696,%r697,%r698}, [%rd561];
	// end inline asm
	add.s64 	%rd565, %rd544, 96;
	// begin inline asm
	cvta.to.global.u64 %rd564, %rd565;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r699,%r700,%r701,%r702}, [%rd564];
	// end inline asm
	add.s64 	%rd568, %rd544, 112;
	// begin inline asm
	cvta.to.global.u64 %rd567, %rd568;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r703,%r704,%r705,%r706}, [%rd567];
	// end inline asm
	add.s64 	%rd571, %rd544, 128;
	// begin inline asm
	cvta.to.global.u64 %rd570, %rd571;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r707,%r708,%r709,%r710}, [%rd570];
	// end inline asm
	add.s64 	%rd574, %rd544, 144;
	// begin inline asm
	cvta.to.global.u64 %rd573, %rd574;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r711,%r712,%r713,%r714}, [%rd573];
	// end inline asm
	mov.b32 	%f2259, %r678;
	mov.b32 	%f2260, %r679;
	and.b32  	%r731, %r677, 65535;
	add.s32 	%r732, %r731, -1;
	cvt.rn.f32.s32 	%f2261, %r732;
	sub.ftz.f32 	%f2262, %f2244, %f2259;
	mul.ftz.f32 	%f2263, %f2262, %f2261;
	sub.ftz.f32 	%f2264, %f2260, %f2259;
	div.approx.ftz.f32 	%f2265, %f2263, %f2264;
	min.ftz.f32 	%f2266, %f2261, %f2265;
	mov.f32 	%f2267, 0f00000000;
	max.ftz.f32 	%f2268, %f2267, %f2266;
	cvt.rmi.ftz.f32.f32 	%f2269, %f2268;
	sub.ftz.f32 	%f781, %f2268, %f2269;
	cvt.rzi.ftz.s32.f32 	%r733, %f2269;
	mul.wide.s32 	%rd588, %r733, 64;
	add.s64 	%rd577, %rd553, %rd588;
	// begin inline asm
	cvta.to.global.u64 %rd576, %rd577;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r715,%r716,%r717,%r718}, [%rd576];
	// end inline asm
	mov.b32 	%f3110, %r715;
	mov.b32 	%f3111, %r716;
	mov.b32 	%f3112, %r717;
	mov.b32 	%f3113, %r718;
	add.s64 	%rd580, %rd577, 16;
	// begin inline asm
	cvta.to.global.u64 %rd579, %rd580;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r719,%r720,%r721,%r722}, [%rd579];
	// end inline asm
	mov.b32 	%f3114, %r719;
	mov.b32 	%f3115, %r720;
	mov.b32 	%f3116, %r721;
	mov.b32 	%f3117, %r722;
	add.s64 	%rd583, %rd577, 32;
	// begin inline asm
	cvta.to.global.u64 %rd582, %rd583;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r723,%r724,%r725,%r726}, [%rd582];
	// end inline asm
	mov.b32 	%f3118, %r723;
	mov.b32 	%f3119, %r724;
	mov.b32 	%f3120, %r725;
	mov.b32 	%f3121, %r726;
	add.s64 	%rd586, %rd577, 48;
	// begin inline asm
	cvta.to.global.u64 %rd585, %rd586;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r727,%r728,%r729,%r730}, [%rd585];
	// end inline asm
	mov.b32 	%f3122, %r727;
	mov.b32 	%f3123, %r728;
	mov.b32 	%f3124, %r729;
	mov.b32 	%f3125, %r730;
	setp.leu.ftz.f32 	%p54, %f781, 0f00000000;
	@%p54 bra 	$L__BB0_109;

	mov.f32 	%f2270, 0f3F800000;
	sub.ftz.f32 	%f2271, %f2270, %f781;
	add.s64 	%rd590, %rd577, 64;
	// begin inline asm
	cvta.to.global.u64 %rd589, %rd590;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r734,%r735,%r736,%r737}, [%rd589];
	// end inline asm
	mov.b32 	%f2272, %r734;
	mov.b32 	%f2273, %r735;
	mov.b32 	%f2274, %r736;
	mov.b32 	%f2275, %r737;
	mul.ftz.f32 	%f2276, %f781, %f2272;
	mul.ftz.f32 	%f2277, %f781, %f2273;
	mul.ftz.f32 	%f2278, %f781, %f2274;
	mul.ftz.f32 	%f2279, %f781, %f2275;
	fma.rn.ftz.f32 	%f3110, %f2271, %f3110, %f2276;
	fma.rn.ftz.f32 	%f3111, %f2271, %f3111, %f2277;
	fma.rn.ftz.f32 	%f3112, %f2271, %f3112, %f2278;
	fma.rn.ftz.f32 	%f3113, %f2271, %f3113, %f2279;
	add.s64 	%rd593, %rd577, 80;
	// begin inline asm
	cvta.to.global.u64 %rd592, %rd593;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r738,%r739,%r740,%r741}, [%rd592];
	// end inline asm
	mov.b32 	%f2280, %r738;
	mov.b32 	%f2281, %r739;
	mov.b32 	%f2282, %r740;
	mov.b32 	%f2283, %r741;
	mul.ftz.f32 	%f2284, %f781, %f2280;
	mul.ftz.f32 	%f2285, %f781, %f2281;
	mul.ftz.f32 	%f2286, %f781, %f2282;
	mul.ftz.f32 	%f2287, %f781, %f2283;
	fma.rn.ftz.f32 	%f3114, %f2271, %f3114, %f2284;
	fma.rn.ftz.f32 	%f3115, %f2271, %f3115, %f2285;
	fma.rn.ftz.f32 	%f3116, %f2271, %f3116, %f2286;
	fma.rn.ftz.f32 	%f3117, %f2271, %f3117, %f2287;
	add.s64 	%rd596, %rd577, 96;
	// begin inline asm
	cvta.to.global.u64 %rd595, %rd596;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r742,%r743,%r744,%r745}, [%rd595];
	// end inline asm
	mov.b32 	%f2288, %r742;
	mov.b32 	%f2289, %r743;
	mov.b32 	%f2290, %r744;
	mov.b32 	%f2291, %r745;
	mul.ftz.f32 	%f2292, %f781, %f2288;
	mul.ftz.f32 	%f2293, %f781, %f2289;
	mul.ftz.f32 	%f2294, %f781, %f2290;
	mul.ftz.f32 	%f2295, %f781, %f2291;
	fma.rn.ftz.f32 	%f3118, %f2271, %f3118, %f2292;
	fma.rn.ftz.f32 	%f2296, %f2271, %f3119, %f2293;
	fma.rn.ftz.f32 	%f2297, %f2271, %f3120, %f2294;
	fma.rn.ftz.f32 	%f2298, %f2271, %f3121, %f2295;
	add.s64 	%rd599, %rd577, 112;
	// begin inline asm
	cvta.to.global.u64 %rd598, %rd599;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r746,%r747,%r748,%r749}, [%rd598];
	// end inline asm
	mov.b32 	%f2299, %r746;
	mov.b32 	%f2300, %r747;
	mov.b32 	%f2301, %r748;
	mov.b32 	%f2302, %r749;
	mul.ftz.f32 	%f2303, %f781, %f2299;
	mul.ftz.f32 	%f2304, %f781, %f2300;
	mul.ftz.f32 	%f2305, %f781, %f2301;
	mul.ftz.f32 	%f2306, %f781, %f2302;
	fma.rn.ftz.f32 	%f2307, %f2271, %f3122, %f2303;
	fma.rn.ftz.f32 	%f3123, %f2271, %f3123, %f2304;
	fma.rn.ftz.f32 	%f3124, %f2271, %f3124, %f2305;
	fma.rn.ftz.f32 	%f3125, %f2271, %f3125, %f2306;
	mul.ftz.f32 	%f2308, %f2297, %f2297;
	fma.rn.ftz.f32 	%f2309, %f2296, %f2296, %f2308;
	fma.rn.ftz.f32 	%f2310, %f2298, %f2298, %f2309;
	fma.rn.ftz.f32 	%f2311, %f2307, %f2307, %f2310;
	rsqrt.approx.ftz.f32 	%f2312, %f2311;
	mul.ftz.f32 	%f3119, %f2296, %f2312;
	mul.ftz.f32 	%f3120, %f2297, %f2312;
	mul.ftz.f32 	%f3121, %f2298, %f2312;
	mul.ftz.f32 	%f3122, %f2312, %f2307;

$L__BB0_109:
	mul.ftz.f32 	%f2313, %f3120, %f3120;
	fma.rn.ftz.f32 	%f2314, %f3119, %f3119, %f2313;
	fma.rn.ftz.f32 	%f2315, %f3121, %f3121, %f2314;
	fma.rn.ftz.f32 	%f2316, %f3122, %f3122, %f2315;
	rcp.approx.ftz.f32 	%f2317, %f2316;
	mul.ftz.f32 	%f2318, %f3119, %f2317;
	mul.ftz.f32 	%f2319, %f3120, %f2317;
	mul.ftz.f32 	%f2320, %f3121, %f2317;
	mul.ftz.f32 	%f2321, %f3122, %f2317;
	mul.ftz.f32 	%f2322, %f3119, %f2318;
	mul.ftz.f32 	%f2323, %f3120, %f2319;
	mul.ftz.f32 	%f2324, %f3121, %f2320;
	mul.ftz.f32 	%f2325, %f3119, %f2319;
	mul.ftz.f32 	%f2326, %f3121, %f2321;
	mul.ftz.f32 	%f2327, %f3119, %f2320;
	mul.ftz.f32 	%f2328, %f3120, %f2321;
	mul.ftz.f32 	%f2329, %f3120, %f2320;
	mul.ftz.f32 	%f2330, %f3119, %f2321;
	sub.ftz.f32 	%f2331, %f2322, %f2323;
	sub.ftz.f32 	%f2332, %f2331, %f2324;
	fma.rn.ftz.f32 	%f2333, %f3122, %f2321, %f2332;
	sub.ftz.f32 	%f2334, %f2325, %f2326;
	add.ftz.f32 	%f2335, %f2334, %f2334;
	add.ftz.f32 	%f2336, %f2327, %f2328;
	add.ftz.f32 	%f2337, %f2336, %f2336;
	add.ftz.f32 	%f2338, %f2325, %f2326;
	add.ftz.f32 	%f2339, %f2338, %f2338;
	sub.ftz.f32 	%f2340, %f2323, %f2322;
	sub.ftz.f32 	%f2341, %f2340, %f2324;
	fma.rn.ftz.f32 	%f2342, %f3122, %f2321, %f2341;
	sub.ftz.f32 	%f2343, %f2329, %f2330;
	add.ftz.f32 	%f2344, %f2343, %f2343;
	sub.ftz.f32 	%f2345, %f2327, %f2328;
	add.ftz.f32 	%f2346, %f2345, %f2345;
	add.ftz.f32 	%f2347, %f2329, %f2330;
	add.ftz.f32 	%f2348, %f2347, %f2347;
	neg.ftz.f32 	%f2349, %f2322;
	sub.ftz.f32 	%f2350, %f2349, %f2323;
	add.ftz.f32 	%f2351, %f2324, %f2350;
	fma.rn.ftz.f32 	%f2352, %f3122, %f2321, %f2351;
	mul.ftz.f32 	%f2353, %f3113, %f2333;
	fma.rn.ftz.f32 	%f2354, %f3116, %f2335, %f2353;
	fma.rn.ftz.f32 	%f2355, %f3118, %f2337, %f2354;
	add.ftz.f32 	%f3137, %f3123, %f2355;
	mul.ftz.f32 	%f2356, %f3116, %f2342;
	fma.rn.ftz.f32 	%f2357, %f3113, %f2339, %f2356;
	fma.rn.ftz.f32 	%f2358, %f3118, %f2344, %f2357;
	add.ftz.f32 	%f3133, %f3124, %f2358;
	mul.ftz.f32 	%f2359, %f3116, %f2348;
	fma.rn.ftz.f32 	%f2360, %f3113, %f2346, %f2359;
	fma.rn.ftz.f32 	%f2361, %f3118, %f2352, %f2360;
	add.ftz.f32 	%f3129, %f3125, %f2361;
	mul.ftz.f32 	%f2362, %f3112, %f2333;
	fma.rn.ftz.f32 	%f2363, %f3115, %f2335, %f2362;
	fma.rn.ftz.f32 	%f3136, %f3117, %f2337, %f2363;
	mul.ftz.f32 	%f2364, %f3115, %f2342;
	fma.rn.ftz.f32 	%f2365, %f3112, %f2339, %f2364;
	fma.rn.ftz.f32 	%f3132, %f3117, %f2344, %f2365;
	mul.ftz.f32 	%f2366, %f3115, %f2348;
	fma.rn.ftz.f32 	%f2367, %f3112, %f2346, %f2366;
	fma.rn.ftz.f32 	%f3128, %f3117, %f2352, %f2367;
	mul.ftz.f32 	%f2368, %f3111, %f2333;
	fma.rn.ftz.f32 	%f3135, %f3114, %f2335, %f2368;
	mul.ftz.f32 	%f2369, %f3114, %f2342;
	fma.rn.ftz.f32 	%f3131, %f3111, %f2339, %f2369;
	mul.ftz.f32 	%f2370, %f3114, %f2348;
	fma.rn.ftz.f32 	%f3127, %f3111, %f2346, %f2370;
	mul.ftz.f32 	%f3134, %f3110, %f2333;
	mul.ftz.f32 	%f3130, %f3110, %f2339;
	mul.ftz.f32 	%f3126, %f3110, %f2346;

$L__BB0_112:
	mul.ftz.f32 	%f2408, %f3127, %f3132;
	mul.ftz.f32 	%f2409, %f3128, %f3131;
	sub.ftz.f32 	%f2410, %f2409, %f2408;
	mul.ftz.f32 	%f2411, %f3134, %f2410;
	mul.ftz.f32 	%f2412, %f3126, %f3132;
	mul.ftz.f32 	%f2413, %f3128, %f3130;
	sub.ftz.f32 	%f2414, %f2413, %f2412;
	mul.ftz.f32 	%f2415, %f2414, %f3135;
	sub.ftz.f32 	%f2416, %f2411, %f2415;
	mul.ftz.f32 	%f2417, %f3126, %f3131;
	mul.ftz.f32 	%f2418, %f3127, %f3130;
	sub.ftz.f32 	%f2419, %f2418, %f2417;
	fma.rn.ftz.f32 	%f2420, %f2419, %f3136, %f2416;
	rcp.approx.ftz.f32 	%f2421, %f2420;
	mul.ftz.f32 	%f3146, %f2410, %f2421;
	mul.ftz.f32 	%f2422, %f3128, %f3135;
	mul.ftz.f32 	%f2423, %f3127, %f3136;
	sub.ftz.f32 	%f2424, %f2423, %f2422;
	mul.ftz.f32 	%f3147, %f2424, %f2421;
	mul.ftz.f32 	%f2425, %f3131, %f3136;
	mul.ftz.f32 	%f2426, %f3132, %f3135;
	sub.ftz.f32 	%f2427, %f2426, %f2425;
	mul.ftz.f32 	%f3148, %f2427, %f2421;
	sub.ftz.f32 	%f2428, %f2412, %f2413;
	mul.ftz.f32 	%f3142, %f2428, %f2421;
	mul.ftz.f32 	%f2429, %f3126, %f3136;
	mul.ftz.f32 	%f2430, %f3128, %f3134;
	sub.ftz.f32 	%f2431, %f2430, %f2429;
	mul.ftz.f32 	%f3143, %f2431, %f2421;
	mul.ftz.f32 	%f2432, %f3132, %f3134;
	mul.ftz.f32 	%f2433, %f3130, %f3136;
	sub.ftz.f32 	%f2434, %f2433, %f2432;
	mul.ftz.f32 	%f3144, %f2434, %f2421;
	mul.ftz.f32 	%f3138, %f2419, %f2421;
	mul.ftz.f32 	%f2435, %f3127, %f3134;
	mul.ftz.f32 	%f2436, %f3126, %f3135;
	sub.ftz.f32 	%f2437, %f2436, %f2435;
	mul.ftz.f32 	%f3139, %f2437, %f2421;
	mul.ftz.f32 	%f2438, %f3130, %f3135;
	mul.ftz.f32 	%f2439, %f3131, %f3134;
	sub.ftz.f32 	%f2440, %f2439, %f2438;
	mul.ftz.f32 	%f3140, %f2440, %f2421;
	mul.ftz.f32 	%f2441, %f3137, %f3146;
	neg.ftz.f32 	%f2442, %f2441;
	mul.ftz.f32 	%f2443, %f3133, %f3147;
	sub.ftz.f32 	%f2444, %f2442, %f2443;
	mul.ftz.f32 	%f2445, %f3129, %f3148;
	sub.ftz.f32 	%f3149, %f2444, %f2445;
	mul.ftz.f32 	%f2446, %f3137, %f3142;
	neg.ftz.f32 	%f2447, %f2446;
	mul.ftz.f32 	%f2448, %f3133, %f3143;
	sub.ftz.f32 	%f2449, %f2447, %f2448;
	mul.ftz.f32 	%f2450, %f3129, %f3144;
	sub.ftz.f32 	%f3145, %f2449, %f2450;
	mul.ftz.f32 	%f2451, %f3137, %f3138;
	neg.ftz.f32 	%f2452, %f2451;
	mul.ftz.f32 	%f2453, %f3133, %f3139;
	sub.ftz.f32 	%f2454, %f2452, %f2453;
	mul.ftz.f32 	%f2455, %f3129, %f3140;
	sub.ftz.f32 	%f3141, %f2454, %f2455;
	bra.uni 	$L__BB0_113;

$L__BB0_104:
	// begin inline asm
	call (%rd782), _optix_get_instance_inverse_transform_from_handle, (%rd529);
	// end inline asm

$L__BB0_105:
	// begin inline asm
	cvta.to.global.u64 %rd535, %rd782;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r663,%r664,%r665,%r666}, [%rd535];
	// end inline asm
	mov.b32 	%f3146, %r663;
	mov.b32 	%f3147, %r664;
	mov.b32 	%f3148, %r665;
	mov.b32 	%f3149, %r666;
	add.s64 	%rd539, %rd782, 16;
	// begin inline asm
	cvta.to.global.u64 %rd538, %rd539;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r667,%r668,%r669,%r670}, [%rd538];
	// end inline asm
	mov.b32 	%f3142, %r667;
	mov.b32 	%f3143, %r668;
	mov.b32 	%f3144, %r669;
	mov.b32 	%f3145, %r670;
	add.s64 	%rd542, %rd782, 32;
	// begin inline asm
	cvta.to.global.u64 %rd541, %rd542;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r671,%r672,%r673,%r674}, [%rd541];
	// end inline asm
	mov.b32 	%f3138, %r671;
	mov.b32 	%f3139, %r672;
	mov.b32 	%f3140, %r673;
	mov.b32 	%f3141, %r674;

$L__BB0_113:
	setp.eq.s32 	%p56, %r983, 0;
	@%p56 bra 	$L__BB0_115;

	mul.ftz.f32 	%f2456, %f3105, %f3147;
	fma.rn.ftz.f32 	%f2457, %f3101, %f3146, %f2456;
	fma.rn.ftz.f32 	%f903, %f3109, %f3148, %f2457;
	mul.ftz.f32 	%f2458, %f3104, %f3147;
	fma.rn.ftz.f32 	%f2459, %f3100, %f3146, %f2458;
	fma.rn.ftz.f32 	%f904, %f3108, %f3148, %f2459;
	mul.ftz.f32 	%f2460, %f3103, %f3147;
	fma.rn.ftz.f32 	%f2461, %f3099, %f3146, %f2460;
	fma.rn.ftz.f32 	%f905, %f3107, %f3148, %f2461;
	mul.ftz.f32 	%f2462, %f3102, %f3147;
	fma.rn.ftz.f32 	%f2463, %f3098, %f3146, %f2462;
	fma.rn.ftz.f32 	%f2464, %f3106, %f3148, %f2463;
	add.ftz.f32 	%f3149, %f3149, %f2464;
	mul.ftz.f32 	%f2465, %f3105, %f3143;
	fma.rn.ftz.f32 	%f2466, %f3101, %f3142, %f2465;
	fma.rn.ftz.f32 	%f907, %f3109, %f3144, %f2466;
	mul.ftz.f32 	%f2467, %f3104, %f3143;
	fma.rn.ftz.f32 	%f2468, %f3100, %f3142, %f2467;
	fma.rn.ftz.f32 	%f908, %f3108, %f3144, %f2468;
	mul.ftz.f32 	%f2469, %f3103, %f3143;
	fma.rn.ftz.f32 	%f2470, %f3099, %f3142, %f2469;
	fma.rn.ftz.f32 	%f909, %f3107, %f3144, %f2470;
	mul.ftz.f32 	%f2471, %f3102, %f3143;
	fma.rn.ftz.f32 	%f2472, %f3098, %f3142, %f2471;
	fma.rn.ftz.f32 	%f2473, %f3106, %f3144, %f2472;
	add.ftz.f32 	%f3145, %f3145, %f2473;
	mul.ftz.f32 	%f2474, %f3105, %f3139;
	fma.rn.ftz.f32 	%f2475, %f3101, %f3138, %f2474;
	fma.rn.ftz.f32 	%f911, %f3109, %f3140, %f2475;
	mul.ftz.f32 	%f2476, %f3104, %f3139;
	fma.rn.ftz.f32 	%f2477, %f3100, %f3138, %f2476;
	fma.rn.ftz.f32 	%f912, %f3108, %f3140, %f2477;
	mul.ftz.f32 	%f2478, %f3103, %f3139;
	fma.rn.ftz.f32 	%f2479, %f3099, %f3138, %f2478;
	fma.rn.ftz.f32 	%f913, %f3107, %f3140, %f2479;
	mul.ftz.f32 	%f2480, %f3102, %f3139;
	fma.rn.ftz.f32 	%f2481, %f3098, %f3138, %f2480;
	fma.rn.ftz.f32 	%f2482, %f3106, %f3140, %f2481;
	add.ftz.f32 	%f3141, %f3141, %f2482;
	mov.f32 	%f3138, %f911;
	mov.f32 	%f3139, %f912;
	mov.f32 	%f3140, %f913;
	mov.f32 	%f3142, %f907;
	mov.f32 	%f3143, %f908;
	mov.f32 	%f3144, %f909;
	mov.f32 	%f3146, %f903;
	mov.f32 	%f3147, %f904;
	mov.f32 	%f3148, %f905;

$L__BB0_115:
	add.s32 	%r983, %r983, 1;
	setp.lt.u32 	%p57, %r983, %r658;
	mov.f32 	%f3098, %f3149;
	mov.f32 	%f3099, %f3148;
	mov.f32 	%f3100, %f3147;
	mov.f32 	%f3101, %f3146;
	mov.f32 	%f3102, %f3145;
	mov.f32 	%f3103, %f3144;
	mov.f32 	%f3104, %f3143;
	mov.f32 	%f3105, %f3142;
	mov.f32 	%f3106, %f3141;
	mov.f32 	%f3107, %f3140;
	mov.f32 	%f3108, %f3139;
	mov.f32 	%f3109, %f3138;
	@%p57 bra 	$L__BB0_100;

$L__BB0_116:
	mul.ftz.f32 	%f2483, %f2, %f3147;
	fma.rn.ftz.f32 	%f2484, %f1, %f3146, %f2483;
	fma.rn.ftz.f32 	%f2485, %f3, %f3148, %f2484;
	mul.ftz.f32 	%f2486, %f2, %f3143;
	fma.rn.ftz.f32 	%f2487, %f1, %f3142, %f2486;
	fma.rn.ftz.f32 	%f2488, %f3, %f3144, %f2487;
	mul.ftz.f32 	%f2489, %f2, %f3139;
	fma.rn.ftz.f32 	%f2490, %f1, %f3138, %f2489;
	fma.rn.ftz.f32 	%f2491, %f3, %f3140, %f2490;
	add.ftz.f32 	%f3176, %f3141, %f2491;
	add.ftz.f32 	%f3175, %f3145, %f2488;
	add.ftz.f32 	%f3174, %f3149, %f2485;
	bra.uni 	$L__BB0_118;

$L__BB0_50:
	// begin inline asm
	call (%rd287), _optix_get_gas_traversable_handle, ();
	// end inline asm
	// begin inline asm
	call (%r346), _optix_read_sbt_gas_idx, ();
	// end inline asm
	mov.f32 	%f1652, 0f00000000;
	// begin inline asm
	call (%f1636, %f1637, %f1638, %f1639,  %f1640, %f1641, %f1642, %f1643,  %f1644, %f1645, %f1646, %f1647,  %f1648, %f1649, %f1650, %f1651), _optix_get_cubic_bspline_vertex_data, (%rd287, %r31, %r346, %f1652);
	// end inline asm
	add.ftz.f32 	%f1653, %f1644, %f1636;
	add.ftz.f32 	%f1654, %f1645, %f1637;
	add.ftz.f32 	%f1655, %f1646, %f1638;
	add.ftz.f32 	%f1656, %f1647, %f1639;
	mul.ftz.f32 	%f1657, %f1653, 0f3E2AAAAB;
	mul.ftz.f32 	%f1658, %f1654, 0f3E2AAAAB;
	mul.ftz.f32 	%f1659, %f1655, 0f3E2AAAAB;
	mul.ftz.f32 	%f1660, %f1656, 0f3E2AAAAB;
	fma.rn.ftz.f32 	%f373, %f1640, 0f3F2AAAAB, %f1657;
	fma.rn.ftz.f32 	%f374, %f1641, 0f3F2AAAAB, %f1658;
	fma.rn.ftz.f32 	%f375, %f1642, 0f3F2AAAAB, %f1659;
	fma.rn.ftz.f32 	%f376, %f1643, 0f3F2AAAAB, %f1660;
	sub.ftz.f32 	%f377, %f1644, %f1636;
	sub.ftz.f32 	%f378, %f1645, %f1637;
	sub.ftz.f32 	%f379, %f1646, %f1638;
	sub.ftz.f32 	%f380, %f1647, %f1639;
	sub.ftz.f32 	%f381, %f1644, %f1640;
	sub.ftz.f32 	%f382, %f1645, %f1641;
	sub.ftz.f32 	%f383, %f1646, %f1642;
	sub.ftz.f32 	%f384, %f1647, %f1643;
	sub.ftz.f32 	%f385, %f1648, %f1640;
	sub.ftz.f32 	%f386, %f1649, %f1641;
	sub.ftz.f32 	%f387, %f1650, %f1642;
	sub.ftz.f32 	%f388, %f1651, %f1643;
	// begin inline asm
	call (%r349), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p26, %r349, 0;
	@%p26 bra 	$L__BB0_70;

	// begin inline asm
	call (%r350), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1661), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p27, %r350, 0;
	@%p27 bra 	$L__BB0_69;

	mov.u32 	%r981, 0;

$L__BB0_53:
	.pragma "nounroll";
	// begin inline asm
	call (%rd289), _optix_get_transform_list_handle, (%r981);
	// end inline asm
	// begin inline asm
	call (%r353), _optix_get_transform_type_from_handle, (%rd289);
	// end inline asm
	or.b32  	%r354, %r353, 1;
	setp.eq.s32 	%p28, %r354, 3;
	@%p28 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_54;

$L__BB0_59:
	setp.eq.s32 	%p31, %r353, 2;
	@%p31 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_60;

$L__BB0_63:
	// begin inline asm
	call (%rd361), _optix_get_matrix_motion_transform_from_handle, (%rd289);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd363, %rd361;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r442,%r443,%r444,%r445}, [%rd363];
	// end inline asm
	add.s64 	%rd367, %rd361, 16;
	// begin inline asm
	cvta.to.global.u64 %rd366, %rd367;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r446,%r447,%r448,%r449}, [%rd366];
	// end inline asm
	add.s64 	%rd370, %rd361, 32;
	// begin inline asm
	cvta.to.global.u64 %rd369, %rd370;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r450,%r451,%r452,%r453}, [%rd369];
	// end inline asm
	add.s64 	%rd373, %rd361, 48;
	// begin inline asm
	cvta.to.global.u64 %rd372, %rd373;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r454,%r455,%r456,%r457}, [%rd372];
	// end inline asm
	add.s64 	%rd376, %rd361, 64;
	// begin inline asm
	cvta.to.global.u64 %rd375, %rd376;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r458,%r459,%r460,%r461}, [%rd375];
	// end inline asm
	add.s64 	%rd379, %rd361, 80;
	// begin inline asm
	cvta.to.global.u64 %rd378, %rd379;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r462,%r463,%r464,%r465}, [%rd378];
	// end inline asm
	add.s64 	%rd382, %rd361, 96;
	// begin inline asm
	cvta.to.global.u64 %rd381, %rd382;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r466,%r467,%r468,%r469}, [%rd381];
	// end inline asm
	add.s64 	%rd385, %rd361, 112;
	// begin inline asm
	cvta.to.global.u64 %rd384, %rd385;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r470,%r471,%r472,%r473}, [%rd384];
	// end inline asm
	mov.b32 	%f1788, %r445;
	mov.b32 	%f1789, %r446;
	and.b32  	%r486, %r444, 65535;
	add.s32 	%r487, %r486, -1;
	cvt.rn.f32.s32 	%f1790, %r487;
	sub.ftz.f32 	%f1791, %f1661, %f1788;
	mul.ftz.f32 	%f1792, %f1791, %f1790;
	sub.ftz.f32 	%f1793, %f1789, %f1788;
	div.approx.ftz.f32 	%f1794, %f1792, %f1793;
	min.ftz.f32 	%f1795, %f1790, %f1794;
	mov.f32 	%f1796, 0f00000000;
	max.ftz.f32 	%f1797, %f1796, %f1795;
	cvt.rmi.ftz.f32.f32 	%f1798, %f1797;
	sub.ftz.f32 	%f475, %f1797, %f1798;
	cvt.rzi.ftz.s32.f32 	%r488, %f1798;
	cvt.s64.s32 	%rd22, %r488;
	mul.wide.s32 	%rd396, %r488, 48;
	add.s64 	%rd388, %rd370, %rd396;
	// begin inline asm
	cvta.to.global.u64 %rd387, %rd388;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r474,%r475,%r476,%r477}, [%rd387];
	// end inline asm
	mov.b32 	%f2997, %r474;
	mov.b32 	%f2998, %r475;
	mov.b32 	%f2999, %r476;
	mov.b32 	%f3000, %r477;
	add.s64 	%rd391, %rd388, 16;
	// begin inline asm
	cvta.to.global.u64 %rd390, %rd391;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r478,%r479,%r480,%r481}, [%rd390];
	// end inline asm
	mov.b32 	%f2993, %r478;
	mov.b32 	%f2994, %r479;
	mov.b32 	%f2995, %r480;
	mov.b32 	%f2996, %r481;
	add.s64 	%rd394, %rd388, 32;
	// begin inline asm
	cvta.to.global.u64 %rd393, %rd394;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r482,%r483,%r484,%r485}, [%rd393];
	// end inline asm
	mov.b32 	%f2989, %r482;
	mov.b32 	%f2990, %r483;
	mov.b32 	%f2991, %r484;
	mov.b32 	%f2992, %r485;
	setp.leu.ftz.f32 	%p33, %f475, 0f00000000;
	@%p33 bra 	$L__BB0_65;

	mov.f32 	%f1799, 0f3F800000;
	sub.ftz.f32 	%f1800, %f1799, %f475;
	mul.lo.s64 	%rd406, %rd22, 48;
	add.s64 	%rd407, %rd361, %rd406;
	add.s64 	%rd398, %rd407, 80;
	// begin inline asm
	cvta.to.global.u64 %rd397, %rd398;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r489,%r490,%r491,%r492}, [%rd397];
	// end inline asm
	mov.b32 	%f1801, %r489;
	mov.b32 	%f1802, %r490;
	mov.b32 	%f1803, %r491;
	mov.b32 	%f1804, %r492;
	mul.ftz.f32 	%f1805, %f475, %f1801;
	mul.ftz.f32 	%f1806, %f475, %f1802;
	mul.ftz.f32 	%f1807, %f475, %f1803;
	mul.ftz.f32 	%f1808, %f475, %f1804;
	fma.rn.ftz.f32 	%f2997, %f1800, %f2997, %f1805;
	fma.rn.ftz.f32 	%f2998, %f1800, %f2998, %f1806;
	fma.rn.ftz.f32 	%f2999, %f1800, %f2999, %f1807;
	fma.rn.ftz.f32 	%f3000, %f1800, %f3000, %f1808;
	add.s64 	%rd401, %rd407, 96;
	// begin inline asm
	cvta.to.global.u64 %rd400, %rd401;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r493,%r494,%r495,%r496}, [%rd400];
	// end inline asm
	mov.b32 	%f1809, %r493;
	mov.b32 	%f1810, %r494;
	mov.b32 	%f1811, %r495;
	mov.b32 	%f1812, %r496;
	mul.ftz.f32 	%f1813, %f475, %f1809;
	mul.ftz.f32 	%f1814, %f475, %f1810;
	mul.ftz.f32 	%f1815, %f475, %f1811;
	mul.ftz.f32 	%f1816, %f475, %f1812;
	fma.rn.ftz.f32 	%f2993, %f1800, %f2993, %f1813;
	fma.rn.ftz.f32 	%f2994, %f1800, %f2994, %f1814;
	fma.rn.ftz.f32 	%f2995, %f1800, %f2995, %f1815;
	fma.rn.ftz.f32 	%f2996, %f1800, %f2996, %f1816;
	add.s64 	%rd404, %rd407, 112;
	// begin inline asm
	cvta.to.global.u64 %rd403, %rd404;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r497,%r498,%r499,%r500}, [%rd403];
	// end inline asm
	mov.b32 	%f1817, %r497;
	mov.b32 	%f1818, %r498;
	mov.b32 	%f1819, %r499;
	mov.b32 	%f1820, %r500;
	mul.ftz.f32 	%f1821, %f475, %f1817;
	mul.ftz.f32 	%f1822, %f475, %f1818;
	mul.ftz.f32 	%f1823, %f475, %f1819;
	mul.ftz.f32 	%f1824, %f475, %f1820;
	fma.rn.ftz.f32 	%f2989, %f1800, %f2989, %f1821;
	fma.rn.ftz.f32 	%f2990, %f1800, %f2990, %f1822;
	fma.rn.ftz.f32 	%f2991, %f1800, %f2991, %f1823;
	fma.rn.ftz.f32 	%f2992, %f1800, %f2992, %f1824;
	bra.uni 	$L__BB0_65;

$L__BB0_54:
	mov.f32 	%f3003, 0f3F800000;
	setp.eq.s32 	%p29, %r353, 4;
	@%p29 bra 	$L__BB0_57;

	setp.ne.s32 	%p30, %r353, 1;
	mov.f32 	%f3001, %f1652;
	mov.f32 	%f3002, %f1652;
	mov.f32 	%f3004, %f1652;
	mov.f32 	%f3005, %f1652;
	mov.f32 	%f3006, %f3003;
	mov.f32 	%f3007, %f1652;
	mov.f32 	%f3008, %f1652;
	mov.f32 	%f3009, %f3003;
	mov.f32 	%f3010, %f1652;
	mov.f32 	%f3011, %f1652;
	mov.f32 	%f3012, %f1652;
	@%p30 bra 	$L__BB0_66;

	// begin inline asm
	call (%rd291), _optix_get_static_transform_from_handle, (%rd289);
	// end inline asm
	add.s64 	%rd780, %rd291, 64;
	bra.uni 	$L__BB0_58;

$L__BB0_60:
	// begin inline asm
	call (%rd304), _optix_get_srt_motion_transform_from_handle, (%rd289);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd306, %rd304;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r367,%r368,%r369,%r370}, [%rd306];
	// end inline asm
	add.s64 	%rd310, %rd304, 16;
	// begin inline asm
	cvta.to.global.u64 %rd309, %rd310;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r371,%r372,%r373,%r374}, [%rd309];
	// end inline asm
	add.s64 	%rd313, %rd304, 32;
	// begin inline asm
	cvta.to.global.u64 %rd312, %rd313;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r375,%r376,%r377,%r378}, [%rd312];
	// end inline asm
	add.s64 	%rd316, %rd304, 48;
	// begin inline asm
	cvta.to.global.u64 %rd315, %rd316;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r379,%r380,%r381,%r382}, [%rd315];
	// end inline asm
	add.s64 	%rd319, %rd304, 64;
	// begin inline asm
	cvta.to.global.u64 %rd318, %rd319;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r383,%r384,%r385,%r386}, [%rd318];
	// end inline asm
	add.s64 	%rd322, %rd304, 80;
	// begin inline asm
	cvta.to.global.u64 %rd321, %rd322;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r387,%r388,%r389,%r390}, [%rd321];
	// end inline asm
	add.s64 	%rd325, %rd304, 96;
	// begin inline asm
	cvta.to.global.u64 %rd324, %rd325;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r391,%r392,%r393,%r394}, [%rd324];
	// end inline asm
	add.s64 	%rd328, %rd304, 112;
	// begin inline asm
	cvta.to.global.u64 %rd327, %rd328;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r395,%r396,%r397,%r398}, [%rd327];
	// end inline asm
	add.s64 	%rd331, %rd304, 128;
	// begin inline asm
	cvta.to.global.u64 %rd330, %rd331;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r399,%r400,%r401,%r402}, [%rd330];
	// end inline asm
	add.s64 	%rd334, %rd304, 144;
	// begin inline asm
	cvta.to.global.u64 %rd333, %rd334;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r403,%r404,%r405,%r406}, [%rd333];
	// end inline asm
	mov.b32 	%f1676, %r370;
	mov.b32 	%f1677, %r371;
	and.b32  	%r423, %r369, 65535;
	add.s32 	%r424, %r423, -1;
	cvt.rn.f32.s32 	%f1678, %r424;
	sub.ftz.f32 	%f1679, %f1661, %f1676;
	mul.ftz.f32 	%f1680, %f1679, %f1678;
	sub.ftz.f32 	%f1681, %f1677, %f1676;
	div.approx.ftz.f32 	%f1682, %f1680, %f1681;
	min.ftz.f32 	%f1683, %f1678, %f1682;
	mov.f32 	%f1684, 0f00000000;
	max.ftz.f32 	%f1685, %f1684, %f1683;
	cvt.rmi.ftz.f32.f32 	%f1686, %f1685;
	sub.ftz.f32 	%f414, %f1685, %f1686;
	cvt.rzi.ftz.s32.f32 	%r425, %f1686;
	mul.wide.s32 	%rd348, %r425, 64;
	add.s64 	%rd337, %rd313, %rd348;
	// begin inline asm
	cvta.to.global.u64 %rd336, %rd337;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r407,%r408,%r409,%r410}, [%rd336];
	// end inline asm
	mov.b32 	%f2973, %r407;
	mov.b32 	%f2974, %r408;
	mov.b32 	%f2975, %r409;
	mov.b32 	%f2976, %r410;
	add.s64 	%rd340, %rd337, 16;
	// begin inline asm
	cvta.to.global.u64 %rd339, %rd340;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r411,%r412,%r413,%r414}, [%rd339];
	// end inline asm
	mov.b32 	%f2977, %r411;
	mov.b32 	%f2978, %r412;
	mov.b32 	%f2979, %r413;
	mov.b32 	%f2980, %r414;
	add.s64 	%rd343, %rd337, 32;
	// begin inline asm
	cvta.to.global.u64 %rd342, %rd343;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r415,%r416,%r417,%r418}, [%rd342];
	// end inline asm
	mov.b32 	%f2981, %r415;
	mov.b32 	%f2982, %r416;
	mov.b32 	%f2983, %r417;
	mov.b32 	%f2984, %r418;
	add.s64 	%rd346, %rd337, 48;
	// begin inline asm
	cvta.to.global.u64 %rd345, %rd346;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r419,%r420,%r421,%r422}, [%rd345];
	// end inline asm
	mov.b32 	%f2985, %r419;
	mov.b32 	%f2986, %r420;
	mov.b32 	%f2987, %r421;
	mov.b32 	%f2988, %r422;
	setp.leu.ftz.f32 	%p32, %f414, 0f00000000;
	@%p32 bra 	$L__BB0_62;

	mov.f32 	%f1687, 0f3F800000;
	sub.ftz.f32 	%f1688, %f1687, %f414;
	add.s64 	%rd350, %rd337, 64;
	// begin inline asm
	cvta.to.global.u64 %rd349, %rd350;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r426,%r427,%r428,%r429}, [%rd349];
	// end inline asm
	mov.b32 	%f1689, %r426;
	mov.b32 	%f1690, %r427;
	mov.b32 	%f1691, %r428;
	mov.b32 	%f1692, %r429;
	mul.ftz.f32 	%f1693, %f414, %f1689;
	mul.ftz.f32 	%f1694, %f414, %f1690;
	mul.ftz.f32 	%f1695, %f414, %f1691;
	mul.ftz.f32 	%f1696, %f414, %f1692;
	fma.rn.ftz.f32 	%f2973, %f1688, %f2973, %f1693;
	fma.rn.ftz.f32 	%f2974, %f1688, %f2974, %f1694;
	fma.rn.ftz.f32 	%f2975, %f1688, %f2975, %f1695;
	fma.rn.ftz.f32 	%f2976, %f1688, %f2976, %f1696;
	add.s64 	%rd353, %rd337, 80;
	// begin inline asm
	cvta.to.global.u64 %rd352, %rd353;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r430,%r431,%r432,%r433}, [%rd352];
	// end inline asm
	mov.b32 	%f1697, %r430;
	mov.b32 	%f1698, %r431;
	mov.b32 	%f1699, %r432;
	mov.b32 	%f1700, %r433;
	mul.ftz.f32 	%f1701, %f414, %f1697;
	mul.ftz.f32 	%f1702, %f414, %f1698;
	mul.ftz.f32 	%f1703, %f414, %f1699;
	mul.ftz.f32 	%f1704, %f414, %f1700;
	fma.rn.ftz.f32 	%f2977, %f1688, %f2977, %f1701;
	fma.rn.ftz.f32 	%f2978, %f1688, %f2978, %f1702;
	fma.rn.ftz.f32 	%f2979, %f1688, %f2979, %f1703;
	fma.rn.ftz.f32 	%f2980, %f1688, %f2980, %f1704;
	add.s64 	%rd356, %rd337, 96;
	// begin inline asm
	cvta.to.global.u64 %rd355, %rd356;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r434,%r435,%r436,%r437}, [%rd355];
	// end inline asm
	mov.b32 	%f1705, %r434;
	mov.b32 	%f1706, %r435;
	mov.b32 	%f1707, %r436;
	mov.b32 	%f1708, %r437;
	mul.ftz.f32 	%f1709, %f414, %f1705;
	mul.ftz.f32 	%f1710, %f414, %f1706;
	mul.ftz.f32 	%f1711, %f414, %f1707;
	mul.ftz.f32 	%f1712, %f414, %f1708;
	fma.rn.ftz.f32 	%f2981, %f1688, %f2981, %f1709;
	fma.rn.ftz.f32 	%f1713, %f1688, %f2982, %f1710;
	fma.rn.ftz.f32 	%f1714, %f1688, %f2983, %f1711;
	fma.rn.ftz.f32 	%f1715, %f1688, %f2984, %f1712;
	add.s64 	%rd359, %rd337, 112;
	// begin inline asm
	cvta.to.global.u64 %rd358, %rd359;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r438,%r439,%r440,%r441}, [%rd358];
	// end inline asm
	mov.b32 	%f1716, %r438;
	mov.b32 	%f1717, %r439;
	mov.b32 	%f1718, %r440;
	mov.b32 	%f1719, %r441;
	mul.ftz.f32 	%f1720, %f414, %f1716;
	mul.ftz.f32 	%f1721, %f414, %f1717;
	mul.ftz.f32 	%f1722, %f414, %f1718;
	mul.ftz.f32 	%f1723, %f414, %f1719;
	fma.rn.ftz.f32 	%f1724, %f1688, %f2985, %f1720;
	fma.rn.ftz.f32 	%f2986, %f1688, %f2986, %f1721;
	fma.rn.ftz.f32 	%f2987, %f1688, %f2987, %f1722;
	fma.rn.ftz.f32 	%f2988, %f1688, %f2988, %f1723;
	mul.ftz.f32 	%f1725, %f1714, %f1714;
	fma.rn.ftz.f32 	%f1726, %f1713, %f1713, %f1725;
	fma.rn.ftz.f32 	%f1727, %f1715, %f1715, %f1726;
	fma.rn.ftz.f32 	%f1728, %f1724, %f1724, %f1727;
	rsqrt.approx.ftz.f32 	%f1729, %f1728;
	mul.ftz.f32 	%f2982, %f1713, %f1729;
	mul.ftz.f32 	%f2983, %f1714, %f1729;
	mul.ftz.f32 	%f2984, %f1715, %f1729;
	mul.ftz.f32 	%f2985, %f1729, %f1724;

$L__BB0_62:
	mul.ftz.f32 	%f1730, %f2983, %f2983;
	fma.rn.ftz.f32 	%f1731, %f2982, %f2982, %f1730;
	fma.rn.ftz.f32 	%f1732, %f2984, %f2984, %f1731;
	fma.rn.ftz.f32 	%f1733, %f2985, %f2985, %f1732;
	rcp.approx.ftz.f32 	%f1734, %f1733;
	mul.ftz.f32 	%f1735, %f2982, %f1734;
	mul.ftz.f32 	%f1736, %f2983, %f1734;
	mul.ftz.f32 	%f1737, %f2984, %f1734;
	mul.ftz.f32 	%f1738, %f2985, %f1734;
	mul.ftz.f32 	%f1739, %f2982, %f1735;
	mul.ftz.f32 	%f1740, %f2983, %f1736;
	mul.ftz.f32 	%f1741, %f2984, %f1737;
	mul.ftz.f32 	%f1742, %f2982, %f1736;
	mul.ftz.f32 	%f1743, %f2984, %f1738;
	mul.ftz.f32 	%f1744, %f2982, %f1737;
	mul.ftz.f32 	%f1745, %f2983, %f1738;
	mul.ftz.f32 	%f1746, %f2983, %f1737;
	mul.ftz.f32 	%f1747, %f2982, %f1738;
	sub.ftz.f32 	%f1748, %f1739, %f1740;
	sub.ftz.f32 	%f1749, %f1748, %f1741;
	fma.rn.ftz.f32 	%f1750, %f2985, %f1738, %f1749;
	sub.ftz.f32 	%f1751, %f1742, %f1743;
	add.ftz.f32 	%f1752, %f1751, %f1751;
	add.ftz.f32 	%f1753, %f1744, %f1745;
	add.ftz.f32 	%f1754, %f1753, %f1753;
	add.ftz.f32 	%f1755, %f1742, %f1743;
	add.ftz.f32 	%f1756, %f1755, %f1755;
	sub.ftz.f32 	%f1757, %f1740, %f1739;
	sub.ftz.f32 	%f1758, %f1757, %f1741;
	fma.rn.ftz.f32 	%f1759, %f2985, %f1738, %f1758;
	sub.ftz.f32 	%f1760, %f1746, %f1747;
	add.ftz.f32 	%f1761, %f1760, %f1760;
	sub.ftz.f32 	%f1762, %f1744, %f1745;
	add.ftz.f32 	%f1763, %f1762, %f1762;
	add.ftz.f32 	%f1764, %f1746, %f1747;
	add.ftz.f32 	%f1765, %f1764, %f1764;
	neg.ftz.f32 	%f1766, %f1739;
	sub.ftz.f32 	%f1767, %f1766, %f1740;
	add.ftz.f32 	%f1768, %f1741, %f1767;
	fma.rn.ftz.f32 	%f1769, %f2985, %f1738, %f1768;
	mul.ftz.f32 	%f1770, %f2976, %f1750;
	fma.rn.ftz.f32 	%f1771, %f2979, %f1752, %f1770;
	fma.rn.ftz.f32 	%f1772, %f2981, %f1754, %f1771;
	add.ftz.f32 	%f3000, %f2986, %f1772;
	mul.ftz.f32 	%f1773, %f2979, %f1759;
	fma.rn.ftz.f32 	%f1774, %f2976, %f1756, %f1773;
	fma.rn.ftz.f32 	%f1775, %f2981, %f1761, %f1774;
	add.ftz.f32 	%f2996, %f2987, %f1775;
	mul.ftz.f32 	%f1776, %f2979, %f1765;
	fma.rn.ftz.f32 	%f1777, %f2976, %f1763, %f1776;
	fma.rn.ftz.f32 	%f1778, %f2981, %f1769, %f1777;
	add.ftz.f32 	%f2992, %f2988, %f1778;
	mul.ftz.f32 	%f1779, %f2975, %f1750;
	fma.rn.ftz.f32 	%f1780, %f2978, %f1752, %f1779;
	fma.rn.ftz.f32 	%f2999, %f2980, %f1754, %f1780;
	mul.ftz.f32 	%f1781, %f2978, %f1759;
	fma.rn.ftz.f32 	%f1782, %f2975, %f1756, %f1781;
	fma.rn.ftz.f32 	%f2995, %f2980, %f1761, %f1782;
	mul.ftz.f32 	%f1783, %f2978, %f1765;
	fma.rn.ftz.f32 	%f1784, %f2975, %f1763, %f1783;
	fma.rn.ftz.f32 	%f2991, %f2980, %f1769, %f1784;
	mul.ftz.f32 	%f1785, %f2974, %f1750;
	fma.rn.ftz.f32 	%f2998, %f2977, %f1752, %f1785;
	mul.ftz.f32 	%f1786, %f2977, %f1759;
	fma.rn.ftz.f32 	%f2994, %f2974, %f1756, %f1786;
	mul.ftz.f32 	%f1787, %f2977, %f1765;
	fma.rn.ftz.f32 	%f2990, %f2974, %f1763, %f1787;
	mul.ftz.f32 	%f2997, %f2973, %f1750;
	mul.ftz.f32 	%f2993, %f2973, %f1756;
	mul.ftz.f32 	%f2989, %f2973, %f1763;

$L__BB0_65:
	mul.ftz.f32 	%f1825, %f2990, %f2995;
	mul.ftz.f32 	%f1826, %f2991, %f2994;
	sub.ftz.f32 	%f1827, %f1826, %f1825;
	mul.ftz.f32 	%f1828, %f2997, %f1827;
	mul.ftz.f32 	%f1829, %f2989, %f2995;
	mul.ftz.f32 	%f1830, %f2991, %f2993;
	sub.ftz.f32 	%f1831, %f1830, %f1829;
	mul.ftz.f32 	%f1832, %f1831, %f2998;
	sub.ftz.f32 	%f1833, %f1828, %f1832;
	mul.ftz.f32 	%f1834, %f2989, %f2994;
	mul.ftz.f32 	%f1835, %f2990, %f2993;
	sub.ftz.f32 	%f1836, %f1835, %f1834;
	fma.rn.ftz.f32 	%f1837, %f1836, %f2999, %f1833;
	rcp.approx.ftz.f32 	%f1838, %f1837;
	mul.ftz.f32 	%f3009, %f1827, %f1838;
	mul.ftz.f32 	%f1839, %f2991, %f2998;
	mul.ftz.f32 	%f1840, %f2990, %f2999;
	sub.ftz.f32 	%f1841, %f1840, %f1839;
	mul.ftz.f32 	%f3010, %f1841, %f1838;
	mul.ftz.f32 	%f1842, %f2994, %f2999;
	mul.ftz.f32 	%f1843, %f2995, %f2998;
	sub.ftz.f32 	%f1844, %f1843, %f1842;
	mul.ftz.f32 	%f3011, %f1844, %f1838;
	sub.ftz.f32 	%f1845, %f1829, %f1830;
	mul.ftz.f32 	%f3005, %f1845, %f1838;
	mul.ftz.f32 	%f1846, %f2989, %f2999;
	mul.ftz.f32 	%f1847, %f2991, %f2997;
	sub.ftz.f32 	%f1848, %f1847, %f1846;
	mul.ftz.f32 	%f3006, %f1848, %f1838;
	mul.ftz.f32 	%f1849, %f2995, %f2997;
	mul.ftz.f32 	%f1850, %f2993, %f2999;
	sub.ftz.f32 	%f1851, %f1850, %f1849;
	mul.ftz.f32 	%f3007, %f1851, %f1838;
	mul.ftz.f32 	%f3001, %f1836, %f1838;
	mul.ftz.f32 	%f1852, %f2990, %f2997;
	mul.ftz.f32 	%f1853, %f2989, %f2998;
	sub.ftz.f32 	%f1854, %f1853, %f1852;
	mul.ftz.f32 	%f3002, %f1854, %f1838;
	mul.ftz.f32 	%f1855, %f2993, %f2998;
	mul.ftz.f32 	%f1856, %f2994, %f2997;
	sub.ftz.f32 	%f1857, %f1856, %f1855;
	mul.ftz.f32 	%f3003, %f1857, %f1838;
	mul.ftz.f32 	%f1858, %f3000, %f3009;
	neg.ftz.f32 	%f1859, %f1858;
	mul.ftz.f32 	%f1860, %f2996, %f3010;
	sub.ftz.f32 	%f1861, %f1859, %f1860;
	mul.ftz.f32 	%f1862, %f2992, %f3011;
	sub.ftz.f32 	%f3012, %f1861, %f1862;
	mul.ftz.f32 	%f1863, %f3000, %f3005;
	neg.ftz.f32 	%f1864, %f1863;
	mul.ftz.f32 	%f1865, %f2996, %f3006;
	sub.ftz.f32 	%f1866, %f1864, %f1865;
	mul.ftz.f32 	%f1867, %f2992, %f3007;
	sub.ftz.f32 	%f3008, %f1866, %f1867;
	mul.ftz.f32 	%f1868, %f3000, %f3001;
	neg.ftz.f32 	%f1869, %f1868;
	mul.ftz.f32 	%f1870, %f2996, %f3002;
	sub.ftz.f32 	%f1871, %f1869, %f1870;
	mul.ftz.f32 	%f1872, %f2992, %f3003;
	sub.ftz.f32 	%f3004, %f1871, %f1872;
	bra.uni 	$L__BB0_66;

$L__BB0_57:
	// begin inline asm
	call (%rd780), _optix_get_instance_inverse_transform_from_handle, (%rd289);
	// end inline asm

$L__BB0_58:
	// begin inline asm
	cvta.to.global.u64 %rd295, %rd780;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r355,%r356,%r357,%r358}, [%rd295];
	// end inline asm
	mov.b32 	%f3009, %r355;
	mov.b32 	%f3010, %r356;
	mov.b32 	%f3011, %r357;
	mov.b32 	%f3012, %r358;
	add.s64 	%rd299, %rd780, 16;
	// begin inline asm
	cvta.to.global.u64 %rd298, %rd299;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r359,%r360,%r361,%r362}, [%rd298];
	// end inline asm
	mov.b32 	%f3005, %r359;
	mov.b32 	%f3006, %r360;
	mov.b32 	%f3007, %r361;
	mov.b32 	%f3008, %r362;
	add.s64 	%rd302, %rd780, 32;
	// begin inline asm
	cvta.to.global.u64 %rd301, %rd302;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r363,%r364,%r365,%r366}, [%rd301];
	// end inline asm
	mov.b32 	%f3001, %r363;
	mov.b32 	%f3002, %r364;
	mov.b32 	%f3003, %r365;
	mov.b32 	%f3004, %r366;

$L__BB0_66:
	setp.eq.s32 	%p34, %r981, 0;
	@%p34 bra 	$L__BB0_68;

	mul.ftz.f32 	%f1873, %f2968, %f3010;
	fma.rn.ftz.f32 	%f1874, %f2964, %f3009, %f1873;
	fma.rn.ftz.f32 	%f536, %f2972, %f3011, %f1874;
	mul.ftz.f32 	%f1875, %f2967, %f3010;
	fma.rn.ftz.f32 	%f1876, %f2963, %f3009, %f1875;
	fma.rn.ftz.f32 	%f537, %f2971, %f3011, %f1876;
	mul.ftz.f32 	%f1877, %f2966, %f3010;
	fma.rn.ftz.f32 	%f1878, %f2962, %f3009, %f1877;
	fma.rn.ftz.f32 	%f538, %f2970, %f3011, %f1878;
	mul.ftz.f32 	%f1879, %f2965, %f3010;
	fma.rn.ftz.f32 	%f1880, %f2961, %f3009, %f1879;
	fma.rn.ftz.f32 	%f1881, %f2969, %f3011, %f1880;
	add.ftz.f32 	%f3012, %f3012, %f1881;
	mul.ftz.f32 	%f1882, %f2968, %f3006;
	fma.rn.ftz.f32 	%f1883, %f2964, %f3005, %f1882;
	fma.rn.ftz.f32 	%f540, %f2972, %f3007, %f1883;
	mul.ftz.f32 	%f1884, %f2967, %f3006;
	fma.rn.ftz.f32 	%f1885, %f2963, %f3005, %f1884;
	fma.rn.ftz.f32 	%f541, %f2971, %f3007, %f1885;
	mul.ftz.f32 	%f1886, %f2966, %f3006;
	fma.rn.ftz.f32 	%f1887, %f2962, %f3005, %f1886;
	fma.rn.ftz.f32 	%f542, %f2970, %f3007, %f1887;
	mul.ftz.f32 	%f1888, %f2965, %f3006;
	fma.rn.ftz.f32 	%f1889, %f2961, %f3005, %f1888;
	fma.rn.ftz.f32 	%f1890, %f2969, %f3007, %f1889;
	add.ftz.f32 	%f3008, %f3008, %f1890;
	mul.ftz.f32 	%f1891, %f2968, %f3002;
	fma.rn.ftz.f32 	%f1892, %f2964, %f3001, %f1891;
	fma.rn.ftz.f32 	%f544, %f2972, %f3003, %f1892;
	mul.ftz.f32 	%f1893, %f2967, %f3002;
	fma.rn.ftz.f32 	%f1894, %f2963, %f3001, %f1893;
	fma.rn.ftz.f32 	%f545, %f2971, %f3003, %f1894;
	mul.ftz.f32 	%f1895, %f2966, %f3002;
	fma.rn.ftz.f32 	%f1896, %f2962, %f3001, %f1895;
	fma.rn.ftz.f32 	%f546, %f2970, %f3003, %f1896;
	mul.ftz.f32 	%f1897, %f2965, %f3002;
	fma.rn.ftz.f32 	%f1898, %f2961, %f3001, %f1897;
	fma.rn.ftz.f32 	%f1899, %f2969, %f3003, %f1898;
	add.ftz.f32 	%f3004, %f3004, %f1899;
	mov.f32 	%f3001, %f544;
	mov.f32 	%f3002, %f545;
	mov.f32 	%f3003, %f546;
	mov.f32 	%f3005, %f540;
	mov.f32 	%f3006, %f541;
	mov.f32 	%f3007, %f542;
	mov.f32 	%f3009, %f536;
	mov.f32 	%f3010, %f537;
	mov.f32 	%f3011, %f538;

$L__BB0_68:
	add.s32 	%r981, %r981, 1;
	setp.lt.u32 	%p35, %r981, %r350;
	mov.f32 	%f2961, %f3012;
	mov.f32 	%f2962, %f3011;
	mov.f32 	%f2963, %f3010;
	mov.f32 	%f2964, %f3009;
	mov.f32 	%f2965, %f3008;
	mov.f32 	%f2966, %f3007;
	mov.f32 	%f2967, %f3006;
	mov.f32 	%f2968, %f3005;
	mov.f32 	%f2969, %f3004;
	mov.f32 	%f2970, %f3003;
	mov.f32 	%f2971, %f3002;
	mov.f32 	%f2972, %f3001;
	@%p35 bra 	$L__BB0_53;

$L__BB0_69:
	mul.ftz.f32 	%f1900, %f2, %f3010;
	fma.rn.ftz.f32 	%f1901, %f1, %f3009, %f1900;
	fma.rn.ftz.f32 	%f1902, %f3, %f3011, %f1901;
	mul.ftz.f32 	%f1903, %f2, %f3006;
	fma.rn.ftz.f32 	%f1904, %f1, %f3005, %f1903;
	fma.rn.ftz.f32 	%f1905, %f3, %f3007, %f1904;
	mul.ftz.f32 	%f1906, %f2, %f3002;
	fma.rn.ftz.f32 	%f1907, %f1, %f3001, %f1906;
	fma.rn.ftz.f32 	%f1908, %f3, %f3003, %f1907;
	add.ftz.f32 	%f3039, %f3004, %f1908;
	add.ftz.f32 	%f3038, %f3008, %f1905;
	add.ftz.f32 	%f3037, %f3012, %f1902;
	bra.uni 	$L__BB0_71;

$L__BB0_23:
	mov.f32 	%f207, %f1;
	mov.f32 	%f208, %f2;
	mov.f32 	%f209, %f3;

$L__BB0_24:
	// begin inline asm
	call (%r193), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f213, %r193;
	setp.eq.ftz.f32 	%p14, %f213, 0f00000000;
	@%p14 bra 	$L__BB0_28;
	bra.uni 	$L__BB0_25;

$L__BB0_28:
	sub.ftz.f32 	%f2903, %f207, %f1145;
	sub.ftz.f32 	%f2904, %f208, %f1146;
	sub.ftz.f32 	%f2905, %f209, %f1147;
	bra.uni 	$L__BB0_29;

$L__BB0_117:
	mov.f32 	%f3174, %f1;
	mov.f32 	%f3175, %f2;
	mov.f32 	%f3176, %f3;

$L__BB0_118:
	// begin inline asm
	call (%r809), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f951, %r809;
	setp.eq.ftz.f32 	%p58, %f951, 0f00000000;
	@%p58 bra 	$L__BB0_122;
	bra.uni 	$L__BB0_119;

$L__BB0_122:
	fma.rn.ftz.f32 	%f2541, %f752, 0f00000000, %f748;
	fma.rn.ftz.f32 	%f2542, %f753, 0f00000000, %f749;
	fma.rn.ftz.f32 	%f2543, %f754, 0f00000000, %f750;
	neg.ftz.f32 	%f3177, %f2541;
	neg.ftz.f32 	%f3178, %f2542;
	neg.ftz.f32 	%f3179, %f2543;
	bra.uni 	$L__BB0_123;

$L__BB0_70:
	mov.f32 	%f3037, %f1;
	mov.f32 	%f3038, %f2;
	mov.f32 	%f3039, %f3;

$L__BB0_71:
	// begin inline asm
	call (%r501), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f584, %r501;
	setp.eq.ftz.f32 	%p36, %f584, 0f00000000;
	@%p36 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_72;

$L__BB0_75:
	mov.f32 	%f2013, 0f3F800000;
	sub.ftz.f32 	%f2014, %f2013, 0f358637BD;
	mul.ftz.f32 	%f2015, %f2014, 0f3F000000;
	mul.ftz.f32 	%f2016, %f2015, %f2014;
	add.ftz.f32 	%f2017, %f2014, %f2014;
	mul.ftz.f32 	%f2018, %f2017, 0f358637BD;
	mul.ftz.f32 	%f2019, %f381, %f2018;
	fma.rn.ftz.f32 	%f2020, %f377, %f2016, %f2019;
	mul.ftz.f32 	%f2021, %f382, %f2018;
	fma.rn.ftz.f32 	%f2022, %f378, %f2016, %f2021;
	mul.ftz.f32 	%f2023, %f383, %f2018;
	fma.rn.ftz.f32 	%f2024, %f379, %f2016, %f2023;
	fma.rn.ftz.f32 	%f2025, %f385, 0f2B0CBCCC, %f2020;
	fma.rn.ftz.f32 	%f2026, %f386, 0f2B0CBCCC, %f2022;
	fma.rn.ftz.f32 	%f2027, %f387, 0f2B0CBCCC, %f2024;
	neg.ftz.f32 	%f3040, %f2025;
	neg.ftz.f32 	%f3041, %f2026;
	neg.ftz.f32 	%f3042, %f2027;
	bra.uni 	$L__BB0_76;

$L__BB0_25:
	setp.ltu.ftz.f32 	%p15, %f213, 0f3F800000;
	@%p15 bra 	$L__BB0_27;
	bra.uni 	$L__BB0_26;

$L__BB0_27:
	sub.ftz.f32 	%f1405, %f1152, %f1148;
	fma.rn.ftz.f32 	%f1406, %f13, %f213, %f1145;
	fma.rn.ftz.f32 	%f1407, %f15, %f213, %f1146;
	fma.rn.ftz.f32 	%f1408, %f17, %f213, %f1147;
	fma.rn.ftz.f32 	%f1409, %f1405, %f213, %f1148;
	mul.ftz.f32 	%f1410, %f15, %f15;
	fma.rn.ftz.f32 	%f1411, %f13, %f13, %f1410;
	fma.rn.ftz.f32 	%f1412, %f17, %f17, %f1411;
	sub.ftz.f32 	%f1413, %f207, %f1406;
	sub.ftz.f32 	%f1414, %f208, %f1407;
	sub.ftz.f32 	%f1415, %f209, %f1408;
	mul.ftz.f32 	%f1416, %f15, %f1414;
	fma.rn.ftz.f32 	%f1417, %f13, %f1413, %f1416;
	fma.rn.ftz.f32 	%f1418, %f17, %f1415, %f1417;
	div.approx.ftz.f32 	%f1419, %f1418, %f1412;
	mul.ftz.f32 	%f1420, %f13, %f1419;
	mul.ftz.f32 	%f1421, %f15, %f1419;
	mul.ftz.f32 	%f1422, %f17, %f1419;
	sub.ftz.f32 	%f1423, %f1413, %f1420;
	sub.ftz.f32 	%f1424, %f1414, %f1421;
	sub.ftz.f32 	%f1425, %f1415, %f1422;
	mul.ftz.f32 	%f1426, %f1424, %f1424;
	fma.rn.ftz.f32 	%f1427, %f1423, %f1423, %f1426;
	fma.rn.ftz.f32 	%f1428, %f1425, %f1425, %f1427;
	sqrt.approx.ftz.f32 	%f1429, %f1428;
	div.approx.ftz.f32 	%f1430, %f1409, %f1429;
	mul.ftz.f32 	%f1431, %f1423, %f1430;
	mul.ftz.f32 	%f1432, %f1424, %f1430;
	mul.ftz.f32 	%f1433, %f1425, %f1430;
	mul.ftz.f32 	%f1434, %f1412, %f1431;
	mul.ftz.f32 	%f1435, %f1412, %f1432;
	mul.ftz.f32 	%f1436, %f1412, %f1433;
	mul.ftz.f32 	%f1437, %f1405, %f1409;
	mul.ftz.f32 	%f1438, %f13, %f1437;
	mul.ftz.f32 	%f1439, %f15, %f1437;
	mul.ftz.f32 	%f1440, %f17, %f1437;
	sub.ftz.f32 	%f2903, %f1434, %f1438;
	sub.ftz.f32 	%f2904, %f1435, %f1439;
	sub.ftz.f32 	%f2905, %f1436, %f1440;
	bra.uni 	$L__BB0_29;

$L__BB0_119:
	setp.eq.ftz.f32 	%p59, %f951, 0f3F800000;
	add.ftz.f32 	%f952, %f752, %f752;
	add.ftz.f32 	%f953, %f753, %f753;
	add.ftz.f32 	%f954, %f754, %f754;
	@%p59 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_120;

$L__BB0_121:
	add.ftz.f32 	%f3177, %f748, %f952;
	add.ftz.f32 	%f3178, %f749, %f953;
	add.ftz.f32 	%f3179, %f750, %f954;
	bra.uni 	$L__BB0_123;

$L__BB0_72:
	setp.eq.ftz.f32 	%p37, %f584, 0f3F800000;
	@%p37 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	mov.f32 	%f2001, 0f3F800000;
	sub.ftz.f32 	%f2002, %f2001, 0f3F7FFFEF;
	mul.ftz.f32 	%f2003, %f2002, 0f3F000000;
	mul.ftz.f32 	%f2004, %f2003, %f2002;
	add.ftz.f32 	%f2005, %f2002, %f2002;
	mul.ftz.f32 	%f2006, %f2005, 0f3F7FFFEF;
	mul.ftz.f32 	%f2007, %f381, %f2006;
	fma.rn.ftz.f32 	%f2008, %f377, %f2004, %f2007;
	mul.ftz.f32 	%f2009, %f382, %f2006;
	fma.rn.ftz.f32 	%f2010, %f378, %f2004, %f2009;
	mul.ftz.f32 	%f2011, %f383, %f2006;
	fma.rn.ftz.f32 	%f2012, %f379, %f2004, %f2011;
	fma.rn.ftz.f32 	%f3040, %f385, 0f3EFFFFDE, %f2008;
	fma.rn.ftz.f32 	%f3041, %f386, 0f3EFFFFDE, %f2010;
	fma.rn.ftz.f32 	%f3042, %f387, 0f3EFFFFDE, %f2012;
	bra.uni 	$L__BB0_76;

$L__BB0_26:
	add.ftz.f32 	%f1402, %f1145, %f13;
	sub.ftz.f32 	%f2903, %f207, %f1402;
	add.ftz.f32 	%f1403, %f1146, %f15;
	sub.ftz.f32 	%f2904, %f208, %f1403;
	add.ftz.f32 	%f1404, %f1147, %f17;
	sub.ftz.f32 	%f2905, %f209, %f1404;

$L__BB0_29:
	mul.ftz.f32 	%f1441, %f2904, %f2904;
	fma.rn.ftz.f32 	%f1442, %f2903, %f2903, %f1441;
	fma.rn.ftz.f32 	%f1443, %f2905, %f2905, %f1442;
	rsqrt.approx.ftz.f32 	%f1444, %f1443;
	mul.ftz.f32 	%f3240, %f2903, %f1444;
	mul.ftz.f32 	%f3239, %f2904, %f1444;
	mul.ftz.f32 	%f228, %f2905, %f1444;
	// begin inline asm
	call (%r194), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p16, %r194, 0;
	@%p16 bra 	$L__BB0_49;

	// begin inline asm
	call (%r195), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f1445), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p17, %r195, 0;
	@%p17 bra 	$L__BB0_48;

	mov.u32 	%r980, 0;

$L__BB0_32:
	.pragma "nounroll";
	// begin inline asm
	call (%rd168), _optix_get_transform_list_handle, (%r980);
	// end inline asm
	// begin inline asm
	call (%r198), _optix_get_transform_type_from_handle, (%rd168);
	// end inline asm
	or.b32  	%r199, %r198, 1;
	setp.eq.s32 	%p18, %r199, 3;
	@%p18 bra 	$L__BB0_38;
	bra.uni 	$L__BB0_33;

$L__BB0_38:
	setp.eq.s32 	%p21, %r198, 2;
	@%p21 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_39;

$L__BB0_42:
	// begin inline asm
	call (%rd240), _optix_get_matrix_motion_transform_from_handle, (%rd168);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd242, %rd240;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r287,%r288,%r289,%r290}, [%rd242];
	// end inline asm
	add.s64 	%rd246, %rd240, 16;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r291,%r292,%r293,%r294}, [%rd245];
	// end inline asm
	add.s64 	%rd249, %rd240, 32;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r295,%r296,%r297,%r298}, [%rd248];
	// end inline asm
	add.s64 	%rd252, %rd240, 48;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r299,%r300,%r301,%r302}, [%rd251];
	// end inline asm
	add.s64 	%rd255, %rd240, 64;
	// begin inline asm
	cvta.to.global.u64 %rd254, %rd255;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r303,%r304,%r305,%r306}, [%rd254];
	// end inline asm
	add.s64 	%rd258, %rd240, 80;
	// begin inline asm
	cvta.to.global.u64 %rd257, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r307,%r308,%r309,%r310}, [%rd257];
	// end inline asm
	add.s64 	%rd261, %rd240, 96;
	// begin inline asm
	cvta.to.global.u64 %rd260, %rd261;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r311,%r312,%r313,%r314}, [%rd260];
	// end inline asm
	add.s64 	%rd264, %rd240, 112;
	// begin inline asm
	cvta.to.global.u64 %rd263, %rd264;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r315,%r316,%r317,%r318}, [%rd263];
	// end inline asm
	mov.b32 	%f1548, %r290;
	mov.b32 	%f1549, %r291;
	and.b32  	%r331, %r289, 65535;
	add.s32 	%r332, %r331, -1;
	cvt.rn.f32.s32 	%f1550, %r332;
	sub.ftz.f32 	%f1551, %f1445, %f1548;
	mul.ftz.f32 	%f1552, %f1551, %f1550;
	sub.ftz.f32 	%f1553, %f1549, %f1548;
	div.approx.ftz.f32 	%f1554, %f1552, %f1553;
	min.ftz.f32 	%f1555, %f1550, %f1554;
	mov.f32 	%f1556, 0f00000000;
	max.ftz.f32 	%f1557, %f1556, %f1555;
	cvt.rmi.ftz.f32.f32 	%f1558, %f1557;
	sub.ftz.f32 	%f288, %f1557, %f1558;
	cvt.rzi.ftz.s32.f32 	%r333, %f1558;
	cvt.s64.s32 	%rd15, %r333;
	mul.wide.s32 	%rd275, %r333, 48;
	add.s64 	%rd267, %rd249, %rd275;
	// begin inline asm
	cvta.to.global.u64 %rd266, %rd267;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r319,%r320,%r321,%r322}, [%rd266];
	// end inline asm
	mov.b32 	%f2931, %r319;
	mov.b32 	%f2932, %r320;
	mov.b32 	%f2933, %r321;
	add.s64 	%rd270, %rd267, 16;
	// begin inline asm
	cvta.to.global.u64 %rd269, %rd270;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r323,%r324,%r325,%r326}, [%rd269];
	// end inline asm
	mov.b32 	%f2928, %r323;
	mov.b32 	%f2929, %r324;
	mov.b32 	%f2930, %r325;
	add.s64 	%rd273, %rd267, 32;
	// begin inline asm
	cvta.to.global.u64 %rd272, %rd273;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r327,%r328,%r329,%r330}, [%rd272];
	// end inline asm
	mov.b32 	%f2925, %r327;
	mov.b32 	%f2926, %r328;
	mov.b32 	%f2927, %r329;
	setp.leu.ftz.f32 	%p23, %f288, 0f00000000;
	@%p23 bra 	$L__BB0_44;

	mov.f32 	%f1559, 0f3F800000;
	sub.ftz.f32 	%f1560, %f1559, %f288;
	mul.lo.s64 	%rd285, %rd15, 48;
	add.s64 	%rd286, %rd240, %rd285;
	add.s64 	%rd277, %rd286, 80;
	// begin inline asm
	cvta.to.global.u64 %rd276, %rd277;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r334,%r335,%r336,%r337}, [%rd276];
	// end inline asm
	mov.b32 	%f1561, %r334;
	mov.b32 	%f1562, %r335;
	mov.b32 	%f1563, %r336;
	mul.ftz.f32 	%f1564, %f288, %f1561;
	mul.ftz.f32 	%f1565, %f288, %f1562;
	mul.ftz.f32 	%f1566, %f288, %f1563;
	fma.rn.ftz.f32 	%f2931, %f1560, %f2931, %f1564;
	fma.rn.ftz.f32 	%f2932, %f1560, %f2932, %f1565;
	fma.rn.ftz.f32 	%f2933, %f1560, %f2933, %f1566;
	add.s64 	%rd280, %rd286, 96;
	// begin inline asm
	cvta.to.global.u64 %rd279, %rd280;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r338,%r339,%r340,%r341}, [%rd279];
	// end inline asm
	mov.b32 	%f1567, %r338;
	mov.b32 	%f1568, %r339;
	mov.b32 	%f1569, %r340;
	mul.ftz.f32 	%f1570, %f288, %f1567;
	mul.ftz.f32 	%f1571, %f288, %f1568;
	mul.ftz.f32 	%f1572, %f288, %f1569;
	fma.rn.ftz.f32 	%f2928, %f1560, %f2928, %f1570;
	fma.rn.ftz.f32 	%f2929, %f1560, %f2929, %f1571;
	fma.rn.ftz.f32 	%f2930, %f1560, %f2930, %f1572;
	add.s64 	%rd283, %rd286, 112;
	// begin inline asm
	cvta.to.global.u64 %rd282, %rd283;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r342,%r343,%r344,%r345}, [%rd282];
	// end inline asm
	mov.b32 	%f1573, %r342;
	mov.b32 	%f1574, %r343;
	mov.b32 	%f1575, %r344;
	mul.ftz.f32 	%f1576, %f288, %f1573;
	mul.ftz.f32 	%f1577, %f288, %f1574;
	mul.ftz.f32 	%f1578, %f288, %f1575;
	fma.rn.ftz.f32 	%f2925, %f1560, %f2925, %f1576;
	fma.rn.ftz.f32 	%f2926, %f1560, %f2926, %f1577;
	fma.rn.ftz.f32 	%f2927, %f1560, %f2927, %f1578;
	bra.uni 	$L__BB0_44;

$L__BB0_33:
	mov.f32 	%f2934, 0f00000000;
	mov.f32 	%f2936, 0f3F800000;
	setp.eq.s32 	%p19, %r198, 4;
	@%p19 bra 	$L__BB0_36;

	setp.ne.s32 	%p20, %r198, 1;
	mov.f32 	%f2935, %f2934;
	mov.f32 	%f2937, %f2934;
	mov.f32 	%f2938, %f2936;
	mov.f32 	%f2939, %f2934;
	mov.f32 	%f2940, %f2936;
	mov.f32 	%f2941, %f2934;
	mov.f32 	%f2942, %f2934;
	@%p20 bra 	$L__BB0_45;

	// begin inline asm
	call (%rd170), _optix_get_static_transform_from_handle, (%rd168);
	// end inline asm
	add.s64 	%rd779, %rd170, 64;
	bra.uni 	$L__BB0_37;

$L__BB0_39:
	// begin inline asm
	call (%rd183), _optix_get_srt_motion_transform_from_handle, (%rd168);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd185, %rd183;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r212,%r213,%r214,%r215}, [%rd185];
	// end inline asm
	add.s64 	%rd189, %rd183, 16;
	// begin inline asm
	cvta.to.global.u64 %rd188, %rd189;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r216,%r217,%r218,%r219}, [%rd188];
	// end inline asm
	add.s64 	%rd192, %rd183, 32;
	// begin inline asm
	cvta.to.global.u64 %rd191, %rd192;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r220,%r221,%r222,%r223}, [%rd191];
	// end inline asm
	add.s64 	%rd195, %rd183, 48;
	// begin inline asm
	cvta.to.global.u64 %rd194, %rd195;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r224,%r225,%r226,%r227}, [%rd194];
	// end inline asm
	add.s64 	%rd198, %rd183, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r228,%r229,%r230,%r231}, [%rd197];
	// end inline asm
	add.s64 	%rd201, %rd183, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r232,%r233,%r234,%r235}, [%rd200];
	// end inline asm
	add.s64 	%rd204, %rd183, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r236,%r237,%r238,%r239}, [%rd203];
	// end inline asm
	add.s64 	%rd207, %rd183, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r240,%r241,%r242,%r243}, [%rd206];
	// end inline asm
	add.s64 	%rd210, %rd183, 128;
	// begin inline asm
	cvta.to.global.u64 %rd209, %rd210;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r244,%r245,%r246,%r247}, [%rd209];
	// end inline asm
	add.s64 	%rd213, %rd183, 144;
	// begin inline asm
	cvta.to.global.u64 %rd212, %rd213;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r248,%r249,%r250,%r251}, [%rd212];
	// end inline asm
	mov.b32 	%f1457, %r215;
	mov.b32 	%f1458, %r216;
	and.b32  	%r268, %r214, 65535;
	add.s32 	%r269, %r268, -1;
	cvt.rn.f32.s32 	%f1459, %r269;
	sub.ftz.f32 	%f1460, %f1445, %f1457;
	mul.ftz.f32 	%f1461, %f1460, %f1459;
	sub.ftz.f32 	%f1462, %f1458, %f1457;
	div.approx.ftz.f32 	%f1463, %f1461, %f1462;
	min.ftz.f32 	%f1464, %f1459, %f1463;
	mov.f32 	%f1465, 0f00000000;
	max.ftz.f32 	%f1466, %f1465, %f1464;
	cvt.rmi.ftz.f32.f32 	%f1467, %f1466;
	sub.ftz.f32 	%f248, %f1466, %f1467;
	cvt.rzi.ftz.s32.f32 	%r270, %f1467;
	mul.wide.s32 	%rd227, %r270, 64;
	add.s64 	%rd216, %rd192, %rd227;
	// begin inline asm
	cvta.to.global.u64 %rd215, %rd216;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r252,%r253,%r254,%r255}, [%rd215];
	// end inline asm
	mov.b32 	%f2915, %r252;
	mov.b32 	%f2916, %r253;
	mov.b32 	%f2917, %r254;
	add.s64 	%rd219, %rd216, 16;
	// begin inline asm
	cvta.to.global.u64 %rd218, %rd219;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r256,%r257,%r258,%r259}, [%rd218];
	// end inline asm
	mov.b32 	%f2918, %r256;
	mov.b32 	%f2919, %r257;
	mov.b32 	%f2920, %r259;
	add.s64 	%rd222, %rd216, 32;
	// begin inline asm
	cvta.to.global.u64 %rd221, %rd222;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r260,%r261,%r262,%r263}, [%rd221];
	// end inline asm
	mov.b32 	%f2921, %r261;
	mov.b32 	%f2922, %r262;
	mov.b32 	%f2923, %r263;
	add.s64 	%rd225, %rd216, 48;
	// begin inline asm
	cvta.to.global.u64 %rd224, %rd225;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r264,%r265,%r266,%r267}, [%rd224];
	// end inline asm
	mov.b32 	%f2924, %r264;
	setp.leu.ftz.f32 	%p22, %f248, 0f00000000;
	@%p22 bra 	$L__BB0_41;

	mov.f32 	%f1468, 0f3F800000;
	sub.ftz.f32 	%f1469, %f1468, %f248;
	add.s64 	%rd229, %rd216, 64;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r271,%r272,%r273,%r274}, [%rd228];
	// end inline asm
	mov.b32 	%f1470, %r271;
	mov.b32 	%f1471, %r272;
	mov.b32 	%f1472, %r273;
	mul.ftz.f32 	%f1473, %f248, %f1470;
	mul.ftz.f32 	%f1474, %f248, %f1471;
	mul.ftz.f32 	%f1475, %f248, %f1472;
	fma.rn.ftz.f32 	%f2915, %f1469, %f2915, %f1473;
	fma.rn.ftz.f32 	%f2916, %f1469, %f2916, %f1474;
	fma.rn.ftz.f32 	%f2917, %f1469, %f2917, %f1475;
	add.s64 	%rd232, %rd216, 80;
	// begin inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r275,%r276,%r277,%r278}, [%rd231];
	// end inline asm
	mov.b32 	%f1476, %r275;
	mov.b32 	%f1477, %r276;
	mov.b32 	%f1478, %r278;
	mul.ftz.f32 	%f1479, %f248, %f1476;
	mul.ftz.f32 	%f1480, %f248, %f1477;
	mul.ftz.f32 	%f1481, %f248, %f1478;
	fma.rn.ftz.f32 	%f2918, %f1469, %f2918, %f1479;
	fma.rn.ftz.f32 	%f2919, %f1469, %f2919, %f1480;
	fma.rn.ftz.f32 	%f2920, %f1469, %f2920, %f1481;
	add.s64 	%rd235, %rd216, 96;
	// begin inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r279,%r280,%r281,%r282}, [%rd234];
	// end inline asm
	mov.b32 	%f1482, %r280;
	mov.b32 	%f1483, %r281;
	mov.b32 	%f1484, %r282;
	mul.ftz.f32 	%f1485, %f248, %f1482;
	mul.ftz.f32 	%f1486, %f248, %f1483;
	mul.ftz.f32 	%f1487, %f248, %f1484;
	fma.rn.ftz.f32 	%f1488, %f1469, %f2921, %f1485;
	fma.rn.ftz.f32 	%f1489, %f1469, %f2922, %f1486;
	fma.rn.ftz.f32 	%f1490, %f1469, %f2923, %f1487;
	add.s64 	%rd238, %rd216, 112;
	// begin inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r283,%r284,%r285,%r286}, [%rd237];
	// end inline asm
	mov.b32 	%f1491, %r283;
	mul.ftz.f32 	%f1492, %f248, %f1491;
	fma.rn.ftz.f32 	%f1493, %f1469, %f2924, %f1492;
	mul.ftz.f32 	%f1494, %f1489, %f1489;
	fma.rn.ftz.f32 	%f1495, %f1488, %f1488, %f1494;
	fma.rn.ftz.f32 	%f1496, %f1490, %f1490, %f1495;
	fma.rn.ftz.f32 	%f1497, %f1493, %f1493, %f1496;
	rsqrt.approx.ftz.f32 	%f1498, %f1497;
	mul.ftz.f32 	%f2921, %f1488, %f1498;
	mul.ftz.f32 	%f2922, %f1489, %f1498;
	mul.ftz.f32 	%f2923, %f1490, %f1498;
	mul.ftz.f32 	%f2924, %f1498, %f1493;

$L__BB0_41:
	mul.ftz.f32 	%f1499, %f2922, %f2922;
	fma.rn.ftz.f32 	%f1500, %f2921, %f2921, %f1499;
	fma.rn.ftz.f32 	%f1501, %f2923, %f2923, %f1500;
	fma.rn.ftz.f32 	%f1502, %f2924, %f2924, %f1501;
	rcp.approx.ftz.f32 	%f1503, %f1502;
	mul.ftz.f32 	%f1504, %f2921, %f1503;
	mul.ftz.f32 	%f1505, %f2922, %f1503;
	mul.ftz.f32 	%f1506, %f2923, %f1503;
	mul.ftz.f32 	%f1507, %f2924, %f1503;
	mul.ftz.f32 	%f1508, %f2921, %f1504;
	mul.ftz.f32 	%f1509, %f2922, %f1505;
	mul.ftz.f32 	%f1510, %f2923, %f1506;
	mul.ftz.f32 	%f1511, %f2921, %f1505;
	mul.ftz.f32 	%f1512, %f2923, %f1507;
	mul.ftz.f32 	%f1513, %f2921, %f1506;
	mul.ftz.f32 	%f1514, %f2922, %f1507;
	mul.ftz.f32 	%f1515, %f2922, %f1506;
	mul.ftz.f32 	%f1516, %f2921, %f1507;
	sub.ftz.f32 	%f1517, %f1508, %f1509;
	sub.ftz.f32 	%f1518, %f1517, %f1510;
	fma.rn.ftz.f32 	%f1519, %f2924, %f1507, %f1518;
	sub.ftz.f32 	%f1520, %f1511, %f1512;
	add.ftz.f32 	%f1521, %f1520, %f1520;
	add.ftz.f32 	%f1522, %f1513, %f1514;
	add.ftz.f32 	%f1523, %f1522, %f1522;
	add.ftz.f32 	%f1524, %f1511, %f1512;
	add.ftz.f32 	%f1525, %f1524, %f1524;
	sub.ftz.f32 	%f1526, %f1509, %f1508;
	sub.ftz.f32 	%f1527, %f1526, %f1510;
	fma.rn.ftz.f32 	%f1528, %f2924, %f1507, %f1527;
	sub.ftz.f32 	%f1529, %f1515, %f1516;
	add.ftz.f32 	%f1530, %f1529, %f1529;
	sub.ftz.f32 	%f1531, %f1513, %f1514;
	add.ftz.f32 	%f1532, %f1531, %f1531;
	add.ftz.f32 	%f1533, %f1515, %f1516;
	add.ftz.f32 	%f1534, %f1533, %f1533;
	neg.ftz.f32 	%f1535, %f1508;
	sub.ftz.f32 	%f1536, %f1535, %f1509;
	add.ftz.f32 	%f1537, %f1510, %f1536;
	fma.rn.ftz.f32 	%f1538, %f2924, %f1507, %f1537;
	mul.ftz.f32 	%f1539, %f2917, %f1519;
	fma.rn.ftz.f32 	%f1540, %f2919, %f1521, %f1539;
	fma.rn.ftz.f32 	%f2933, %f2920, %f1523, %f1540;
	mul.ftz.f32 	%f1541, %f2919, %f1528;
	fma.rn.ftz.f32 	%f1542, %f2917, %f1525, %f1541;
	fma.rn.ftz.f32 	%f2930, %f2920, %f1530, %f1542;
	mul.ftz.f32 	%f1543, %f2919, %f1534;
	fma.rn.ftz.f32 	%f1544, %f2917, %f1532, %f1543;
	fma.rn.ftz.f32 	%f2927, %f2920, %f1538, %f1544;
	mul.ftz.f32 	%f1545, %f2916, %f1519;
	fma.rn.ftz.f32 	%f2932, %f2918, %f1521, %f1545;
	mul.ftz.f32 	%f1546, %f2918, %f1528;
	fma.rn.ftz.f32 	%f2929, %f2916, %f1525, %f1546;
	mul.ftz.f32 	%f1547, %f2918, %f1534;
	fma.rn.ftz.f32 	%f2926, %f2916, %f1532, %f1547;
	mul.ftz.f32 	%f2931, %f2915, %f1519;
	mul.ftz.f32 	%f2928, %f2915, %f1525;
	mul.ftz.f32 	%f2925, %f2915, %f1532;

$L__BB0_44:
	mul.ftz.f32 	%f1579, %f2926, %f2930;
	mul.ftz.f32 	%f1580, %f2927, %f2929;
	sub.ftz.f32 	%f1581, %f1580, %f1579;
	mul.ftz.f32 	%f1582, %f2931, %f1581;
	mul.ftz.f32 	%f1583, %f2925, %f2930;
	mul.ftz.f32 	%f1584, %f2927, %f2928;
	sub.ftz.f32 	%f1585, %f1584, %f1583;
	mul.ftz.f32 	%f1586, %f1585, %f2932;
	sub.ftz.f32 	%f1587, %f1582, %f1586;
	mul.ftz.f32 	%f1588, %f2925, %f2929;
	mul.ftz.f32 	%f1589, %f2926, %f2928;
	sub.ftz.f32 	%f1590, %f1589, %f1588;
	fma.rn.ftz.f32 	%f1591, %f1590, %f2933, %f1587;
	rcp.approx.ftz.f32 	%f1592, %f1591;
	mul.ftz.f32 	%f2940, %f1581, %f1592;
	mul.ftz.f32 	%f1593, %f2927, %f2932;
	mul.ftz.f32 	%f1594, %f2926, %f2933;
	sub.ftz.f32 	%f1595, %f1594, %f1593;
	mul.ftz.f32 	%f2941, %f1595, %f1592;
	mul.ftz.f32 	%f1596, %f2929, %f2933;
	mul.ftz.f32 	%f1597, %f2930, %f2932;
	sub.ftz.f32 	%f1598, %f1597, %f1596;
	mul.ftz.f32 	%f2942, %f1598, %f1592;
	sub.ftz.f32 	%f1599, %f1583, %f1584;
	mul.ftz.f32 	%f2937, %f1599, %f1592;
	mul.ftz.f32 	%f1600, %f2925, %f2933;
	mul.ftz.f32 	%f1601, %f2927, %f2931;
	sub.ftz.f32 	%f1602, %f1601, %f1600;
	mul.ftz.f32 	%f2938, %f1602, %f1592;
	mul.ftz.f32 	%f1603, %f2930, %f2931;
	mul.ftz.f32 	%f1604, %f2928, %f2933;
	sub.ftz.f32 	%f1605, %f1604, %f1603;
	mul.ftz.f32 	%f2939, %f1605, %f1592;
	mul.ftz.f32 	%f2934, %f1590, %f1592;
	mul.ftz.f32 	%f1606, %f2926, %f2931;
	mul.ftz.f32 	%f1607, %f2925, %f2932;
	sub.ftz.f32 	%f1608, %f1607, %f1606;
	mul.ftz.f32 	%f2935, %f1608, %f1592;
	mul.ftz.f32 	%f1609, %f2928, %f2932;
	mul.ftz.f32 	%f1610, %f2929, %f2931;
	sub.ftz.f32 	%f1611, %f1610, %f1609;
	mul.ftz.f32 	%f2936, %f1611, %f1592;
	bra.uni 	$L__BB0_45;

$L__BB0_36:
	// begin inline asm
	call (%rd779), _optix_get_instance_inverse_transform_from_handle, (%rd168);
	// end inline asm

$L__BB0_37:
	// begin inline asm
	cvta.to.global.u64 %rd174, %rd779;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r200,%r201,%r202,%r203}, [%rd174];
	// end inline asm
	mov.b32 	%f2940, %r200;
	mov.b32 	%f2941, %r201;
	mov.b32 	%f2942, %r202;
	add.s64 	%rd178, %rd779, 16;
	// begin inline asm
	cvta.to.global.u64 %rd177, %rd178;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r204,%r205,%r206,%r207}, [%rd177];
	// end inline asm
	mov.b32 	%f2937, %r204;
	mov.b32 	%f2938, %r205;
	mov.b32 	%f2939, %r206;
	add.s64 	%rd181, %rd779, 32;
	// begin inline asm
	cvta.to.global.u64 %rd180, %rd181;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r208,%r209,%r210,%r211}, [%rd180];
	// end inline asm
	mov.b32 	%f2934, %r208;
	mov.b32 	%f2935, %r209;
	mov.b32 	%f2936, %r210;

$L__BB0_45:
	setp.eq.s32 	%p24, %r980, 0;
	@%p24 bra 	$L__BB0_47;

	mul.ftz.f32 	%f1612, %f2911, %f2941;
	fma.rn.ftz.f32 	%f1613, %f2908, %f2940, %f1612;
	fma.rn.ftz.f32 	%f334, %f2914, %f2942, %f1613;
	mul.ftz.f32 	%f1614, %f2910, %f2941;
	fma.rn.ftz.f32 	%f1615, %f2907, %f2940, %f1614;
	fma.rn.ftz.f32 	%f335, %f2913, %f2942, %f1615;
	mul.ftz.f32 	%f1616, %f2909, %f2941;
	fma.rn.ftz.f32 	%f1617, %f2906, %f2940, %f1616;
	fma.rn.ftz.f32 	%f2942, %f2912, %f2942, %f1617;
	mul.ftz.f32 	%f1618, %f2911, %f2938;
	fma.rn.ftz.f32 	%f1619, %f2908, %f2937, %f1618;
	fma.rn.ftz.f32 	%f337, %f2914, %f2939, %f1619;
	mul.ftz.f32 	%f1620, %f2910, %f2938;
	fma.rn.ftz.f32 	%f1621, %f2907, %f2937, %f1620;
	fma.rn.ftz.f32 	%f338, %f2913, %f2939, %f1621;
	mul.ftz.f32 	%f1622, %f2909, %f2938;
	fma.rn.ftz.f32 	%f1623, %f2906, %f2937, %f1622;
	fma.rn.ftz.f32 	%f2939, %f2912, %f2939, %f1623;
	mul.ftz.f32 	%f1624, %f2911, %f2935;
	fma.rn.ftz.f32 	%f1625, %f2908, %f2934, %f1624;
	fma.rn.ftz.f32 	%f340, %f2914, %f2936, %f1625;
	mul.ftz.f32 	%f1626, %f2910, %f2935;
	fma.rn.ftz.f32 	%f1627, %f2907, %f2934, %f1626;
	fma.rn.ftz.f32 	%f341, %f2913, %f2936, %f1627;
	mul.ftz.f32 	%f1628, %f2909, %f2935;
	fma.rn.ftz.f32 	%f1629, %f2906, %f2934, %f1628;
	fma.rn.ftz.f32 	%f2936, %f2912, %f2936, %f1629;
	mov.f32 	%f2934, %f340;
	mov.f32 	%f2935, %f341;
	mov.f32 	%f2937, %f337;
	mov.f32 	%f2938, %f338;
	mov.f32 	%f2940, %f334;
	mov.f32 	%f2941, %f335;

$L__BB0_47:
	add.s32 	%r980, %r980, 1;
	setp.lt.u32 	%p25, %r980, %r195;
	mov.f32 	%f2906, %f2942;
	mov.f32 	%f2907, %f2941;
	mov.f32 	%f2908, %f2940;
	mov.f32 	%f2909, %f2939;
	mov.f32 	%f2910, %f2938;
	mov.f32 	%f2911, %f2937;
	mov.f32 	%f2912, %f2936;
	mov.f32 	%f2913, %f2935;
	mov.f32 	%f2914, %f2934;
	@%p25 bra 	$L__BB0_32;

$L__BB0_48:
	mul.ftz.f32 	%f1630, %f3240, %f2940;
	fma.rn.ftz.f32 	%f1631, %f3239, %f2937, %f1630;
	mul.ftz.f32 	%f1632, %f3240, %f2941;
	fma.rn.ftz.f32 	%f1633, %f3239, %f2938, %f1632;
	mul.ftz.f32 	%f1634, %f3240, %f2942;
	fma.rn.ftz.f32 	%f1635, %f3239, %f2939, %f1634;
	fma.rn.ftz.f32 	%f3238, %f228, %f2936, %f1635;
	fma.rn.ftz.f32 	%f3239, %f228, %f2935, %f1633;
	fma.rn.ftz.f32 	%f3240, %f228, %f2934, %f1631;
	bra.uni 	$L__BB0_144;

$L__BB0_49:
	mov.f32 	%f3238, %f228;
	bra.uni 	$L__BB0_144;

$L__BB0_120:
	fma.rn.ftz.f32 	%f2492, %f748, %f951, %f744;
	fma.rn.ftz.f32 	%f2493, %f749, %f951, %f745;
	fma.rn.ftz.f32 	%f2494, %f750, %f951, %f746;
	fma.rn.ftz.f32 	%f2495, %f751, %f951, %f747;
	mul.ftz.f32 	%f2496, %f951, %f951;
	fma.rn.ftz.f32 	%f2497, %f752, %f2496, %f2492;
	fma.rn.ftz.f32 	%f2498, %f753, %f2496, %f2493;
	fma.rn.ftz.f32 	%f2499, %f754, %f2496, %f2494;
	fma.rn.ftz.f32 	%f2500, %f755, %f2496, %f2495;
	add.ftz.f32 	%f2501, %f951, %f951;
	fma.rn.ftz.f32 	%f2502, %f752, %f2501, %f748;
	fma.rn.ftz.f32 	%f2503, %f753, %f2501, %f749;
	fma.rn.ftz.f32 	%f2504, %f754, %f2501, %f750;
	fma.rn.ftz.f32 	%f2505, %f755, %f2501, %f751;
	mul.ftz.f32 	%f2506, %f2503, %f2503;
	fma.rn.ftz.f32 	%f2507, %f2502, %f2502, %f2506;
	fma.rn.ftz.f32 	%f2508, %f2504, %f2504, %f2507;
	sub.ftz.f32 	%f2509, %f3174, %f2497;
	sub.ftz.f32 	%f2510, %f3175, %f2498;
	sub.ftz.f32 	%f2511, %f3176, %f2499;
	mul.ftz.f32 	%f2512, %f2503, %f2510;
	fma.rn.ftz.f32 	%f2513, %f2502, %f2509, %f2512;
	fma.rn.ftz.f32 	%f2514, %f2504, %f2511, %f2513;
	div.approx.ftz.f32 	%f2515, %f2514, %f2508;
	mul.ftz.f32 	%f2516, %f2502, %f2515;
	mul.ftz.f32 	%f2517, %f2503, %f2515;
	mul.ftz.f32 	%f2518, %f2504, %f2515;
	sub.ftz.f32 	%f2519, %f2509, %f2516;
	sub.ftz.f32 	%f2520, %f2510, %f2517;
	sub.ftz.f32 	%f2521, %f2511, %f2518;
	mul.ftz.f32 	%f2522, %f2520, %f2520;
	fma.rn.ftz.f32 	%f2523, %f2519, %f2519, %f2522;
	fma.rn.ftz.f32 	%f2524, %f2521, %f2521, %f2523;
	sqrt.approx.ftz.f32 	%f2525, %f2524;
	div.approx.ftz.f32 	%f2526, %f2500, %f2525;
	mul.ftz.f32 	%f2527, %f2519, %f2526;
	mul.ftz.f32 	%f2528, %f2520, %f2526;
	mul.ftz.f32 	%f2529, %f2521, %f2526;
	mul.ftz.f32 	%f2530, %f953, %f2528;
	fma.rn.ftz.f32 	%f2531, %f952, %f2527, %f2530;
	fma.rn.ftz.f32 	%f2532, %f954, %f2529, %f2531;
	sub.ftz.f32 	%f2533, %f2508, %f2532;
	mul.ftz.f32 	%f2534, %f2527, %f2533;
	mul.ftz.f32 	%f2535, %f2528, %f2533;
	mul.ftz.f32 	%f2536, %f2529, %f2533;
	mul.ftz.f32 	%f2537, %f2505, %f2500;
	mul.ftz.f32 	%f2538, %f2502, %f2537;
	mul.ftz.f32 	%f2539, %f2503, %f2537;
	mul.ftz.f32 	%f2540, %f2504, %f2537;
	sub.ftz.f32 	%f3177, %f2534, %f2538;
	sub.ftz.f32 	%f3178, %f2535, %f2539;
	sub.ftz.f32 	%f3179, %f2536, %f2540;

$L__BB0_123:
	mul.ftz.f32 	%f2544, %f3178, %f3178;
	fma.rn.ftz.f32 	%f2545, %f3177, %f3177, %f2544;
	fma.rn.ftz.f32 	%f2546, %f3179, %f3179, %f2545;
	rsqrt.approx.ftz.f32 	%f2547, %f2546;
	mul.ftz.f32 	%f3240, %f3177, %f2547;
	mul.ftz.f32 	%f3239, %f3178, %f2547;
	mul.ftz.f32 	%f969, %f3179, %f2547;
	// begin inline asm
	call (%r810), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p60, %r810, 0;
	@%p60 bra 	$L__BB0_143;

	// begin inline asm
	call (%r811), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2548), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p61, %r811, 0;
	@%p61 bra 	$L__BB0_142;

	mov.u32 	%r984, 0;

$L__BB0_126:
	.pragma "nounroll";
	// begin inline asm
	call (%rd648), _optix_get_transform_list_handle, (%r984);
	// end inline asm
	// begin inline asm
	call (%r814), _optix_get_transform_type_from_handle, (%rd648);
	// end inline asm
	or.b32  	%r815, %r814, 1;
	setp.eq.s32 	%p62, %r815, 3;
	@%p62 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_127;

$L__BB0_132:
	setp.eq.s32 	%p65, %r814, 2;
	@%p65 bra 	$L__BB0_136;
	bra.uni 	$L__BB0_133;

$L__BB0_136:
	// begin inline asm
	call (%rd720), _optix_get_matrix_motion_transform_from_handle, (%rd648);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd722, %rd720;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r903,%r904,%r905,%r906}, [%rd722];
	// end inline asm
	add.s64 	%rd726, %rd720, 16;
	// begin inline asm
	cvta.to.global.u64 %rd725, %rd726;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r907,%r908,%r909,%r910}, [%rd725];
	// end inline asm
	add.s64 	%rd729, %rd720, 32;
	// begin inline asm
	cvta.to.global.u64 %rd728, %rd729;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r911,%r912,%r913,%r914}, [%rd728];
	// end inline asm
	add.s64 	%rd732, %rd720, 48;
	// begin inline asm
	cvta.to.global.u64 %rd731, %rd732;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r915,%r916,%r917,%r918}, [%rd731];
	// end inline asm
	add.s64 	%rd735, %rd720, 64;
	// begin inline asm
	cvta.to.global.u64 %rd734, %rd735;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r919,%r920,%r921,%r922}, [%rd734];
	// end inline asm
	add.s64 	%rd738, %rd720, 80;
	// begin inline asm
	cvta.to.global.u64 %rd737, %rd738;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r923,%r924,%r925,%r926}, [%rd737];
	// end inline asm
	add.s64 	%rd741, %rd720, 96;
	// begin inline asm
	cvta.to.global.u64 %rd740, %rd741;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r927,%r928,%r929,%r930}, [%rd740];
	// end inline asm
	add.s64 	%rd744, %rd720, 112;
	// begin inline asm
	cvta.to.global.u64 %rd743, %rd744;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r931,%r932,%r933,%r934}, [%rd743];
	// end inline asm
	mov.b32 	%f2651, %r906;
	mov.b32 	%f2652, %r907;
	and.b32  	%r947, %r905, 65535;
	add.s32 	%r948, %r947, -1;
	cvt.rn.f32.s32 	%f2653, %r948;
	sub.ftz.f32 	%f2654, %f2548, %f2651;
	mul.ftz.f32 	%f2655, %f2654, %f2653;
	sub.ftz.f32 	%f2656, %f2652, %f2651;
	div.approx.ftz.f32 	%f2657, %f2655, %f2656;
	min.ftz.f32 	%f2658, %f2653, %f2657;
	mov.f32 	%f2659, 0f00000000;
	max.ftz.f32 	%f2660, %f2659, %f2658;
	cvt.rmi.ftz.f32.f32 	%f2661, %f2660;
	sub.ftz.f32 	%f1029, %f2660, %f2661;
	cvt.rzi.ftz.s32.f32 	%r949, %f2661;
	cvt.s64.s32 	%rd43, %r949;
	mul.wide.s32 	%rd755, %r949, 48;
	add.s64 	%rd747, %rd729, %rd755;
	// begin inline asm
	cvta.to.global.u64 %rd746, %rd747;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r935,%r936,%r937,%r938}, [%rd746];
	// end inline asm
	mov.b32 	%f3205, %r935;
	mov.b32 	%f3206, %r936;
	mov.b32 	%f3207, %r937;
	add.s64 	%rd750, %rd747, 16;
	// begin inline asm
	cvta.to.global.u64 %rd749, %rd750;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r939,%r940,%r941,%r942}, [%rd749];
	// end inline asm
	mov.b32 	%f3202, %r939;
	mov.b32 	%f3203, %r940;
	mov.b32 	%f3204, %r941;
	add.s64 	%rd753, %rd747, 32;
	// begin inline asm
	cvta.to.global.u64 %rd752, %rd753;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r943,%r944,%r945,%r946}, [%rd752];
	// end inline asm
	mov.b32 	%f3199, %r943;
	mov.b32 	%f3200, %r944;
	mov.b32 	%f3201, %r945;
	setp.leu.ftz.f32 	%p67, %f1029, 0f00000000;
	@%p67 bra 	$L__BB0_138;

	mov.f32 	%f2662, 0f3F800000;
	sub.ftz.f32 	%f2663, %f2662, %f1029;
	mul.lo.s64 	%rd765, %rd43, 48;
	add.s64 	%rd766, %rd720, %rd765;
	add.s64 	%rd757, %rd766, 80;
	// begin inline asm
	cvta.to.global.u64 %rd756, %rd757;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r950,%r951,%r952,%r953}, [%rd756];
	// end inline asm
	mov.b32 	%f2664, %r950;
	mov.b32 	%f2665, %r951;
	mov.b32 	%f2666, %r952;
	mul.ftz.f32 	%f2667, %f1029, %f2664;
	mul.ftz.f32 	%f2668, %f1029, %f2665;
	mul.ftz.f32 	%f2669, %f1029, %f2666;
	fma.rn.ftz.f32 	%f3205, %f2663, %f3205, %f2667;
	fma.rn.ftz.f32 	%f3206, %f2663, %f3206, %f2668;
	fma.rn.ftz.f32 	%f3207, %f2663, %f3207, %f2669;
	add.s64 	%rd760, %rd766, 96;
	// begin inline asm
	cvta.to.global.u64 %rd759, %rd760;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r954,%r955,%r956,%r957}, [%rd759];
	// end inline asm
	mov.b32 	%f2670, %r954;
	mov.b32 	%f2671, %r955;
	mov.b32 	%f2672, %r956;
	mul.ftz.f32 	%f2673, %f1029, %f2670;
	mul.ftz.f32 	%f2674, %f1029, %f2671;
	mul.ftz.f32 	%f2675, %f1029, %f2672;
	fma.rn.ftz.f32 	%f3202, %f2663, %f3202, %f2673;
	fma.rn.ftz.f32 	%f3203, %f2663, %f3203, %f2674;
	fma.rn.ftz.f32 	%f3204, %f2663, %f3204, %f2675;
	add.s64 	%rd763, %rd766, 112;
	// begin inline asm
	cvta.to.global.u64 %rd762, %rd763;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r958,%r959,%r960,%r961}, [%rd762];
	// end inline asm
	mov.b32 	%f2676, %r958;
	mov.b32 	%f2677, %r959;
	mov.b32 	%f2678, %r960;
	mul.ftz.f32 	%f2679, %f1029, %f2676;
	mul.ftz.f32 	%f2680, %f1029, %f2677;
	mul.ftz.f32 	%f2681, %f1029, %f2678;
	fma.rn.ftz.f32 	%f3199, %f2663, %f3199, %f2679;
	fma.rn.ftz.f32 	%f3200, %f2663, %f3200, %f2680;
	fma.rn.ftz.f32 	%f3201, %f2663, %f3201, %f2681;
	bra.uni 	$L__BB0_138;

$L__BB0_127:
	mov.f32 	%f3208, 0f00000000;
	mov.f32 	%f3210, 0f3F800000;
	setp.eq.s32 	%p63, %r814, 4;
	@%p63 bra 	$L__BB0_130;

	setp.ne.s32 	%p64, %r814, 1;
	mov.f32 	%f3209, %f3208;
	mov.f32 	%f3211, %f3208;
	mov.f32 	%f3212, %f3210;
	mov.f32 	%f3213, %f3208;
	mov.f32 	%f3214, %f3210;
	mov.f32 	%f3215, %f3208;
	mov.f32 	%f3216, %f3208;
	@%p64 bra 	$L__BB0_139;

	// begin inline asm
	call (%rd650), _optix_get_static_transform_from_handle, (%rd648);
	// end inline asm
	add.s64 	%rd783, %rd650, 64;
	bra.uni 	$L__BB0_131;

$L__BB0_133:
	// begin inline asm
	call (%rd663), _optix_get_srt_motion_transform_from_handle, (%rd648);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd665, %rd663;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r828,%r829,%r830,%r831}, [%rd665];
	// end inline asm
	add.s64 	%rd669, %rd663, 16;
	// begin inline asm
	cvta.to.global.u64 %rd668, %rd669;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r832,%r833,%r834,%r835}, [%rd668];
	// end inline asm
	add.s64 	%rd672, %rd663, 32;
	// begin inline asm
	cvta.to.global.u64 %rd671, %rd672;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r836,%r837,%r838,%r839}, [%rd671];
	// end inline asm
	add.s64 	%rd675, %rd663, 48;
	// begin inline asm
	cvta.to.global.u64 %rd674, %rd675;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r840,%r841,%r842,%r843}, [%rd674];
	// end inline asm
	add.s64 	%rd678, %rd663, 64;
	// begin inline asm
	cvta.to.global.u64 %rd677, %rd678;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r844,%r845,%r846,%r847}, [%rd677];
	// end inline asm
	add.s64 	%rd681, %rd663, 80;
	// begin inline asm
	cvta.to.global.u64 %rd680, %rd681;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r848,%r849,%r850,%r851}, [%rd680];
	// end inline asm
	add.s64 	%rd684, %rd663, 96;
	// begin inline asm
	cvta.to.global.u64 %rd683, %rd684;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r852,%r853,%r854,%r855}, [%rd683];
	// end inline asm
	add.s64 	%rd687, %rd663, 112;
	// begin inline asm
	cvta.to.global.u64 %rd686, %rd687;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r856,%r857,%r858,%r859}, [%rd686];
	// end inline asm
	add.s64 	%rd690, %rd663, 128;
	// begin inline asm
	cvta.to.global.u64 %rd689, %rd690;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r860,%r861,%r862,%r863}, [%rd689];
	// end inline asm
	add.s64 	%rd693, %rd663, 144;
	// begin inline asm
	cvta.to.global.u64 %rd692, %rd693;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r864,%r865,%r866,%r867}, [%rd692];
	// end inline asm
	mov.b32 	%f2560, %r831;
	mov.b32 	%f2561, %r832;
	and.b32  	%r884, %r830, 65535;
	add.s32 	%r885, %r884, -1;
	cvt.rn.f32.s32 	%f2562, %r885;
	sub.ftz.f32 	%f2563, %f2548, %f2560;
	mul.ftz.f32 	%f2564, %f2563, %f2562;
	sub.ftz.f32 	%f2565, %f2561, %f2560;
	div.approx.ftz.f32 	%f2566, %f2564, %f2565;
	min.ftz.f32 	%f2567, %f2562, %f2566;
	mov.f32 	%f2568, 0f00000000;
	max.ftz.f32 	%f2569, %f2568, %f2567;
	cvt.rmi.ftz.f32.f32 	%f2570, %f2569;
	sub.ftz.f32 	%f989, %f2569, %f2570;
	cvt.rzi.ftz.s32.f32 	%r886, %f2570;
	mul.wide.s32 	%rd707, %r886, 64;
	add.s64 	%rd696, %rd672, %rd707;
	// begin inline asm
	cvta.to.global.u64 %rd695, %rd696;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r868,%r869,%r870,%r871}, [%rd695];
	// end inline asm
	mov.b32 	%f3189, %r868;
	mov.b32 	%f3190, %r869;
	mov.b32 	%f3191, %r870;
	add.s64 	%rd699, %rd696, 16;
	// begin inline asm
	cvta.to.global.u64 %rd698, %rd699;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r872,%r873,%r874,%r875}, [%rd698];
	// end inline asm
	mov.b32 	%f3192, %r872;
	mov.b32 	%f3193, %r873;
	mov.b32 	%f3194, %r875;
	add.s64 	%rd702, %rd696, 32;
	// begin inline asm
	cvta.to.global.u64 %rd701, %rd702;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r876,%r877,%r878,%r879}, [%rd701];
	// end inline asm
	mov.b32 	%f3195, %r877;
	mov.b32 	%f3196, %r878;
	mov.b32 	%f3197, %r879;
	add.s64 	%rd705, %rd696, 48;
	// begin inline asm
	cvta.to.global.u64 %rd704, %rd705;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r880,%r881,%r882,%r883}, [%rd704];
	// end inline asm
	mov.b32 	%f3198, %r880;
	setp.leu.ftz.f32 	%p66, %f989, 0f00000000;
	@%p66 bra 	$L__BB0_135;

	mov.f32 	%f2571, 0f3F800000;
	sub.ftz.f32 	%f2572, %f2571, %f989;
	add.s64 	%rd709, %rd696, 64;
	// begin inline asm
	cvta.to.global.u64 %rd708, %rd709;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r887,%r888,%r889,%r890}, [%rd708];
	// end inline asm
	mov.b32 	%f2573, %r887;
	mov.b32 	%f2574, %r888;
	mov.b32 	%f2575, %r889;
	mul.ftz.f32 	%f2576, %f989, %f2573;
	mul.ftz.f32 	%f2577, %f989, %f2574;
	mul.ftz.f32 	%f2578, %f989, %f2575;
	fma.rn.ftz.f32 	%f3189, %f2572, %f3189, %f2576;
	fma.rn.ftz.f32 	%f3190, %f2572, %f3190, %f2577;
	fma.rn.ftz.f32 	%f3191, %f2572, %f3191, %f2578;
	add.s64 	%rd712, %rd696, 80;
	// begin inline asm
	cvta.to.global.u64 %rd711, %rd712;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r891,%r892,%r893,%r894}, [%rd711];
	// end inline asm
	mov.b32 	%f2579, %r891;
	mov.b32 	%f2580, %r892;
	mov.b32 	%f2581, %r894;
	mul.ftz.f32 	%f2582, %f989, %f2579;
	mul.ftz.f32 	%f2583, %f989, %f2580;
	mul.ftz.f32 	%f2584, %f989, %f2581;
	fma.rn.ftz.f32 	%f3192, %f2572, %f3192, %f2582;
	fma.rn.ftz.f32 	%f3193, %f2572, %f3193, %f2583;
	fma.rn.ftz.f32 	%f3194, %f2572, %f3194, %f2584;
	add.s64 	%rd715, %rd696, 96;
	// begin inline asm
	cvta.to.global.u64 %rd714, %rd715;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r895,%r896,%r897,%r898}, [%rd714];
	// end inline asm
	mov.b32 	%f2585, %r896;
	mov.b32 	%f2586, %r897;
	mov.b32 	%f2587, %r898;
	mul.ftz.f32 	%f2588, %f989, %f2585;
	mul.ftz.f32 	%f2589, %f989, %f2586;
	mul.ftz.f32 	%f2590, %f989, %f2587;
	fma.rn.ftz.f32 	%f2591, %f2572, %f3195, %f2588;
	fma.rn.ftz.f32 	%f2592, %f2572, %f3196, %f2589;
	fma.rn.ftz.f32 	%f2593, %f2572, %f3197, %f2590;
	add.s64 	%rd718, %rd696, 112;
	// begin inline asm
	cvta.to.global.u64 %rd717, %rd718;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r899,%r900,%r901,%r902}, [%rd717];
	// end inline asm
	mov.b32 	%f2594, %r899;
	mul.ftz.f32 	%f2595, %f989, %f2594;
	fma.rn.ftz.f32 	%f2596, %f2572, %f3198, %f2595;
	mul.ftz.f32 	%f2597, %f2592, %f2592;
	fma.rn.ftz.f32 	%f2598, %f2591, %f2591, %f2597;
	fma.rn.ftz.f32 	%f2599, %f2593, %f2593, %f2598;
	fma.rn.ftz.f32 	%f2600, %f2596, %f2596, %f2599;
	rsqrt.approx.ftz.f32 	%f2601, %f2600;
	mul.ftz.f32 	%f3195, %f2591, %f2601;
	mul.ftz.f32 	%f3196, %f2592, %f2601;
	mul.ftz.f32 	%f3197, %f2593, %f2601;
	mul.ftz.f32 	%f3198, %f2601, %f2596;

$L__BB0_135:
	mul.ftz.f32 	%f2602, %f3196, %f3196;
	fma.rn.ftz.f32 	%f2603, %f3195, %f3195, %f2602;
	fma.rn.ftz.f32 	%f2604, %f3197, %f3197, %f2603;
	fma.rn.ftz.f32 	%f2605, %f3198, %f3198, %f2604;
	rcp.approx.ftz.f32 	%f2606, %f2605;
	mul.ftz.f32 	%f2607, %f3195, %f2606;
	mul.ftz.f32 	%f2608, %f3196, %f2606;
	mul.ftz.f32 	%f2609, %f3197, %f2606;
	mul.ftz.f32 	%f2610, %f3198, %f2606;
	mul.ftz.f32 	%f2611, %f3195, %f2607;
	mul.ftz.f32 	%f2612, %f3196, %f2608;
	mul.ftz.f32 	%f2613, %f3197, %f2609;
	mul.ftz.f32 	%f2614, %f3195, %f2608;
	mul.ftz.f32 	%f2615, %f3197, %f2610;
	mul.ftz.f32 	%f2616, %f3195, %f2609;
	mul.ftz.f32 	%f2617, %f3196, %f2610;
	mul.ftz.f32 	%f2618, %f3196, %f2609;
	mul.ftz.f32 	%f2619, %f3195, %f2610;
	sub.ftz.f32 	%f2620, %f2611, %f2612;
	sub.ftz.f32 	%f2621, %f2620, %f2613;
	fma.rn.ftz.f32 	%f2622, %f3198, %f2610, %f2621;
	sub.ftz.f32 	%f2623, %f2614, %f2615;
	add.ftz.f32 	%f2624, %f2623, %f2623;
	add.ftz.f32 	%f2625, %f2616, %f2617;
	add.ftz.f32 	%f2626, %f2625, %f2625;
	add.ftz.f32 	%f2627, %f2614, %f2615;
	add.ftz.f32 	%f2628, %f2627, %f2627;
	sub.ftz.f32 	%f2629, %f2612, %f2611;
	sub.ftz.f32 	%f2630, %f2629, %f2613;
	fma.rn.ftz.f32 	%f2631, %f3198, %f2610, %f2630;
	sub.ftz.f32 	%f2632, %f2618, %f2619;
	add.ftz.f32 	%f2633, %f2632, %f2632;
	sub.ftz.f32 	%f2634, %f2616, %f2617;
	add.ftz.f32 	%f2635, %f2634, %f2634;
	add.ftz.f32 	%f2636, %f2618, %f2619;
	add.ftz.f32 	%f2637, %f2636, %f2636;
	neg.ftz.f32 	%f2638, %f2611;
	sub.ftz.f32 	%f2639, %f2638, %f2612;
	add.ftz.f32 	%f2640, %f2613, %f2639;
	fma.rn.ftz.f32 	%f2641, %f3198, %f2610, %f2640;
	mul.ftz.f32 	%f2642, %f3191, %f2622;
	fma.rn.ftz.f32 	%f2643, %f3193, %f2624, %f2642;
	fma.rn.ftz.f32 	%f3207, %f3194, %f2626, %f2643;
	mul.ftz.f32 	%f2644, %f3193, %f2631;
	fma.rn.ftz.f32 	%f2645, %f3191, %f2628, %f2644;
	fma.rn.ftz.f32 	%f3204, %f3194, %f2633, %f2645;
	mul.ftz.f32 	%f2646, %f3193, %f2637;
	fma.rn.ftz.f32 	%f2647, %f3191, %f2635, %f2646;
	fma.rn.ftz.f32 	%f3201, %f3194, %f2641, %f2647;
	mul.ftz.f32 	%f2648, %f3190, %f2622;
	fma.rn.ftz.f32 	%f3206, %f3192, %f2624, %f2648;
	mul.ftz.f32 	%f2649, %f3192, %f2631;
	fma.rn.ftz.f32 	%f3203, %f3190, %f2628, %f2649;
	mul.ftz.f32 	%f2650, %f3192, %f2637;
	fma.rn.ftz.f32 	%f3200, %f3190, %f2635, %f2650;
	mul.ftz.f32 	%f3205, %f3189, %f2622;
	mul.ftz.f32 	%f3202, %f3189, %f2628;
	mul.ftz.f32 	%f3199, %f3189, %f2635;

$L__BB0_138:
	mul.ftz.f32 	%f2682, %f3200, %f3204;
	mul.ftz.f32 	%f2683, %f3201, %f3203;
	sub.ftz.f32 	%f2684, %f2683, %f2682;
	mul.ftz.f32 	%f2685, %f3205, %f2684;
	mul.ftz.f32 	%f2686, %f3199, %f3204;
	mul.ftz.f32 	%f2687, %f3201, %f3202;
	sub.ftz.f32 	%f2688, %f2687, %f2686;
	mul.ftz.f32 	%f2689, %f2688, %f3206;
	sub.ftz.f32 	%f2690, %f2685, %f2689;
	mul.ftz.f32 	%f2691, %f3199, %f3203;
	mul.ftz.f32 	%f2692, %f3200, %f3202;
	sub.ftz.f32 	%f2693, %f2692, %f2691;
	fma.rn.ftz.f32 	%f2694, %f2693, %f3207, %f2690;
	rcp.approx.ftz.f32 	%f2695, %f2694;
	mul.ftz.f32 	%f3214, %f2684, %f2695;
	mul.ftz.f32 	%f2696, %f3201, %f3206;
	mul.ftz.f32 	%f2697, %f3200, %f3207;
	sub.ftz.f32 	%f2698, %f2697, %f2696;
	mul.ftz.f32 	%f3215, %f2698, %f2695;
	mul.ftz.f32 	%f2699, %f3203, %f3207;
	mul.ftz.f32 	%f2700, %f3204, %f3206;
	sub.ftz.f32 	%f2701, %f2700, %f2699;
	mul.ftz.f32 	%f3216, %f2701, %f2695;
	sub.ftz.f32 	%f2702, %f2686, %f2687;
	mul.ftz.f32 	%f3211, %f2702, %f2695;
	mul.ftz.f32 	%f2703, %f3199, %f3207;
	mul.ftz.f32 	%f2704, %f3201, %f3205;
	sub.ftz.f32 	%f2705, %f2704, %f2703;
	mul.ftz.f32 	%f3212, %f2705, %f2695;
	mul.ftz.f32 	%f2706, %f3204, %f3205;
	mul.ftz.f32 	%f2707, %f3202, %f3207;
	sub.ftz.f32 	%f2708, %f2707, %f2706;
	mul.ftz.f32 	%f3213, %f2708, %f2695;
	mul.ftz.f32 	%f3208, %f2693, %f2695;
	mul.ftz.f32 	%f2709, %f3200, %f3205;
	mul.ftz.f32 	%f2710, %f3199, %f3206;
	sub.ftz.f32 	%f2711, %f2710, %f2709;
	mul.ftz.f32 	%f3209, %f2711, %f2695;
	mul.ftz.f32 	%f2712, %f3202, %f3206;
	mul.ftz.f32 	%f2713, %f3203, %f3205;
	sub.ftz.f32 	%f2714, %f2713, %f2712;
	mul.ftz.f32 	%f3210, %f2714, %f2695;
	bra.uni 	$L__BB0_139;

$L__BB0_130:
	// begin inline asm
	call (%rd783), _optix_get_instance_inverse_transform_from_handle, (%rd648);
	// end inline asm

$L__BB0_131:
	// begin inline asm
	cvta.to.global.u64 %rd654, %rd783;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r816,%r817,%r818,%r819}, [%rd654];
	// end inline asm
	mov.b32 	%f3214, %r816;
	mov.b32 	%f3215, %r817;
	mov.b32 	%f3216, %r818;
	add.s64 	%rd658, %rd783, 16;
	// begin inline asm
	cvta.to.global.u64 %rd657, %rd658;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r820,%r821,%r822,%r823}, [%rd657];
	// end inline asm
	mov.b32 	%f3211, %r820;
	mov.b32 	%f3212, %r821;
	mov.b32 	%f3213, %r822;
	add.s64 	%rd661, %rd783, 32;
	// begin inline asm
	cvta.to.global.u64 %rd660, %rd661;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r824,%r825,%r826,%r827}, [%rd660];
	// end inline asm
	mov.b32 	%f3208, %r824;
	mov.b32 	%f3209, %r825;
	mov.b32 	%f3210, %r826;

$L__BB0_139:
	setp.eq.s32 	%p68, %r984, 0;
	@%p68 bra 	$L__BB0_141;

	mul.ftz.f32 	%f2715, %f3185, %f3215;
	fma.rn.ftz.f32 	%f2716, %f3182, %f3214, %f2715;
	fma.rn.ftz.f32 	%f1075, %f3188, %f3216, %f2716;
	mul.ftz.f32 	%f2717, %f3184, %f3215;
	fma.rn.ftz.f32 	%f2718, %f3181, %f3214, %f2717;
	fma.rn.ftz.f32 	%f1076, %f3187, %f3216, %f2718;
	mul.ftz.f32 	%f2719, %f3183, %f3215;
	fma.rn.ftz.f32 	%f2720, %f3180, %f3214, %f2719;
	fma.rn.ftz.f32 	%f3216, %f3186, %f3216, %f2720;
	mul.ftz.f32 	%f2721, %f3185, %f3212;
	fma.rn.ftz.f32 	%f2722, %f3182, %f3211, %f2721;
	fma.rn.ftz.f32 	%f1078, %f3188, %f3213, %f2722;
	mul.ftz.f32 	%f2723, %f3184, %f3212;
	fma.rn.ftz.f32 	%f2724, %f3181, %f3211, %f2723;
	fma.rn.ftz.f32 	%f1079, %f3187, %f3213, %f2724;
	mul.ftz.f32 	%f2725, %f3183, %f3212;
	fma.rn.ftz.f32 	%f2726, %f3180, %f3211, %f2725;
	fma.rn.ftz.f32 	%f3213, %f3186, %f3213, %f2726;
	mul.ftz.f32 	%f2727, %f3185, %f3209;
	fma.rn.ftz.f32 	%f2728, %f3182, %f3208, %f2727;
	fma.rn.ftz.f32 	%f1081, %f3188, %f3210, %f2728;
	mul.ftz.f32 	%f2729, %f3184, %f3209;
	fma.rn.ftz.f32 	%f2730, %f3181, %f3208, %f2729;
	fma.rn.ftz.f32 	%f1082, %f3187, %f3210, %f2730;
	mul.ftz.f32 	%f2731, %f3183, %f3209;
	fma.rn.ftz.f32 	%f2732, %f3180, %f3208, %f2731;
	fma.rn.ftz.f32 	%f3210, %f3186, %f3210, %f2732;
	mov.f32 	%f3208, %f1081;
	mov.f32 	%f3209, %f1082;
	mov.f32 	%f3211, %f1078;
	mov.f32 	%f3212, %f1079;
	mov.f32 	%f3214, %f1075;
	mov.f32 	%f3215, %f1076;

$L__BB0_141:
	add.s32 	%r984, %r984, 1;
	setp.lt.u32 	%p69, %r984, %r811;
	mov.f32 	%f3180, %f3216;
	mov.f32 	%f3181, %f3215;
	mov.f32 	%f3182, %f3214;
	mov.f32 	%f3183, %f3213;
	mov.f32 	%f3184, %f3212;
	mov.f32 	%f3185, %f3211;
	mov.f32 	%f3186, %f3210;
	mov.f32 	%f3187, %f3209;
	mov.f32 	%f3188, %f3208;
	@%p69 bra 	$L__BB0_126;

$L__BB0_142:
	mul.ftz.f32 	%f2733, %f3240, %f3214;
	fma.rn.ftz.f32 	%f2734, %f3239, %f3211, %f2733;
	mul.ftz.f32 	%f2735, %f3240, %f3215;
	fma.rn.ftz.f32 	%f2736, %f3239, %f3212, %f2735;
	mul.ftz.f32 	%f2737, %f3240, %f3216;
	fma.rn.ftz.f32 	%f2738, %f3239, %f3213, %f2737;
	fma.rn.ftz.f32 	%f3238, %f969, %f3210, %f2738;
	fma.rn.ftz.f32 	%f3239, %f969, %f3209, %f2736;
	fma.rn.ftz.f32 	%f3240, %f969, %f3208, %f2734;
	bra.uni 	$L__BB0_144;

$L__BB0_143:
	mov.f32 	%f3238, %f969;
	bra.uni 	$L__BB0_144;

$L__BB0_73:
	mul.ftz.f32 	%f1909, %f584, %f584;
	mul.ftz.f32 	%f1910, %f1909, 0f3E2AAAAB;
	mul.ftz.f32 	%f1911, %f1910, %f584;
	sub.ftz.f32 	%f1912, %f584, %f1909;
	fma.rn.ftz.f32 	%f1913, %f1912, 0f3F000000, %f1911;
	mul.ftz.f32 	%f1914, %f1911, 0f40800000;
	sub.ftz.f32 	%f1915, %f1909, %f1914;
	fma.rn.ftz.f32 	%f1916, %f377, %f1913, %f373;
	fma.rn.ftz.f32 	%f1917, %f378, %f1913, %f374;
	fma.rn.ftz.f32 	%f1918, %f379, %f1913, %f375;
	fma.rn.ftz.f32 	%f1919, %f380, %f1913, %f376;
	fma.rn.ftz.f32 	%f1920, %f381, %f1915, %f1916;
	fma.rn.ftz.f32 	%f1921, %f382, %f1915, %f1917;
	fma.rn.ftz.f32 	%f1922, %f383, %f1915, %f1918;
	fma.rn.ftz.f32 	%f1923, %f384, %f1915, %f1919;
	fma.rn.ftz.f32 	%f1924, %f385, %f1911, %f1920;
	fma.rn.ftz.f32 	%f1925, %f386, %f1911, %f1921;
	fma.rn.ftz.f32 	%f1926, %f387, %f1911, %f1922;
	fma.rn.ftz.f32 	%f1927, %f388, %f1911, %f1923;
	mov.f32 	%f1928, 0f3F800000;
	sub.ftz.f32 	%f1929, %f1928, %f584;
	mul.ftz.f32 	%f1930, %f1929, 0f3F000000;
	mul.ftz.f32 	%f1931, %f1929, %f1930;
	add.ftz.f32 	%f1932, %f1929, %f1929;
	mul.ftz.f32 	%f1933, %f1932, %f584;
	mul.ftz.f32 	%f1934, %f381, %f1933;
	mul.ftz.f32 	%f1935, %f382, %f1933;
	mul.ftz.f32 	%f1936, %f383, %f1933;
	mul.ftz.f32 	%f1937, %f384, %f1933;
	fma.rn.ftz.f32 	%f1938, %f377, %f1931, %f1934;
	fma.rn.ftz.f32 	%f1939, %f378, %f1931, %f1935;
	fma.rn.ftz.f32 	%f1940, %f379, %f1931, %f1936;
	fma.rn.ftz.f32 	%f1941, %f380, %f1931, %f1937;
	mul.ftz.f32 	%f1942, %f584, 0f3F000000;
	mul.ftz.f32 	%f1943, %f1942, %f584;
	fma.rn.ftz.f32 	%f1944, %f385, %f1943, %f1938;
	fma.rn.ftz.f32 	%f1945, %f386, %f1943, %f1939;
	fma.rn.ftz.f32 	%f1946, %f387, %f1943, %f1940;
	fma.rn.ftz.f32 	%f1947, %f388, %f1943, %f1941;
	mul.ftz.f32 	%f1948, %f1945, %f1945;
	fma.rn.ftz.f32 	%f1949, %f1944, %f1944, %f1948;
	fma.rn.ftz.f32 	%f1950, %f1946, %f1946, %f1949;
	sub.ftz.f32 	%f1951, %f3037, %f1924;
	sub.ftz.f32 	%f1952, %f3038, %f1925;
	sub.ftz.f32 	%f1953, %f3039, %f1926;
	mul.ftz.f32 	%f1954, %f1945, %f1952;
	fma.rn.ftz.f32 	%f1955, %f1944, %f1951, %f1954;
	fma.rn.ftz.f32 	%f1956, %f1946, %f1953, %f1955;
	div.approx.ftz.f32 	%f1957, %f1956, %f1950;
	mul.ftz.f32 	%f1958, %f1944, %f1957;
	mul.ftz.f32 	%f1959, %f1945, %f1957;
	mul.ftz.f32 	%f1960, %f1946, %f1957;
	sub.ftz.f32 	%f1961, %f1951, %f1958;
	sub.ftz.f32 	%f1962, %f1952, %f1959;
	sub.ftz.f32 	%f1963, %f1953, %f1960;
	mul.ftz.f32 	%f1964, %f1962, %f1962;
	fma.rn.ftz.f32 	%f1965, %f1961, %f1961, %f1964;
	fma.rn.ftz.f32 	%f1966, %f1963, %f1963, %f1965;
	sqrt.approx.ftz.f32 	%f1967, %f1966;
	div.approx.ftz.f32 	%f1968, %f1927, %f1967;
	mul.ftz.f32 	%f1969, %f1961, %f1968;
	mul.ftz.f32 	%f1970, %f1962, %f1968;
	mul.ftz.f32 	%f1971, %f1963, %f1968;
	add.ftz.f32 	%f1972, %f381, %f381;
	sub.ftz.f32 	%f1973, %f1972, %f377;
	add.ftz.f32 	%f1974, %f382, %f382;
	sub.ftz.f32 	%f1975, %f1974, %f378;
	add.ftz.f32 	%f1976, %f383, %f383;
	sub.ftz.f32 	%f1977, %f1976, %f379;
	mul.ftz.f32 	%f1978, %f381, 0f40800000;
	sub.ftz.f32 	%f1979, %f377, %f1978;
	mul.ftz.f32 	%f1980, %f382, 0f40800000;
	sub.ftz.f32 	%f1981, %f378, %f1980;
	mul.ftz.f32 	%f1982, %f383, 0f40800000;
	sub.ftz.f32 	%f1983, %f379, %f1982;
	add.ftz.f32 	%f1984, %f385, %f1979;
	add.ftz.f32 	%f1985, %f386, %f1981;
	add.ftz.f32 	%f1986, %f387, %f1983;
	fma.rn.ftz.f32 	%f1987, %f1984, %f584, %f1973;
	fma.rn.ftz.f32 	%f1988, %f1985, %f584, %f1975;
	fma.rn.ftz.f32 	%f1989, %f1986, %f584, %f1977;
	mul.ftz.f32 	%f1990, %f1988, %f1970;
	fma.rn.ftz.f32 	%f1991, %f1987, %f1969, %f1990;
	fma.rn.ftz.f32 	%f1992, %f1989, %f1971, %f1991;
	sub.ftz.f32 	%f1993, %f1950, %f1992;
	mul.ftz.f32 	%f1994, %f1969, %f1993;
	mul.ftz.f32 	%f1995, %f1970, %f1993;
	mul.ftz.f32 	%f1996, %f1971, %f1993;
	mul.ftz.f32 	%f1997, %f1947, %f1927;
	mul.ftz.f32 	%f1998, %f1944, %f1997;
	mul.ftz.f32 	%f1999, %f1945, %f1997;
	mul.ftz.f32 	%f2000, %f1946, %f1997;
	sub.ftz.f32 	%f3040, %f1994, %f1998;
	sub.ftz.f32 	%f3041, %f1995, %f1999;
	sub.ftz.f32 	%f3042, %f1996, %f2000;

$L__BB0_76:
	mul.ftz.f32 	%f2028, %f3041, %f3041;
	fma.rn.ftz.f32 	%f2029, %f3040, %f3040, %f2028;
	fma.rn.ftz.f32 	%f2030, %f3042, %f3042, %f2029;
	rsqrt.approx.ftz.f32 	%f2031, %f2030;
	mul.ftz.f32 	%f3240, %f3040, %f2031;
	mul.ftz.f32 	%f3239, %f3041, %f2031;
	mul.ftz.f32 	%f599, %f3042, %f2031;
	// begin inline asm
	call (%r502), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p38, %r502, 0;
	@%p38 bra 	$L__BB0_96;

	// begin inline asm
	call (%r503), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f2032), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p39, %r503, 0;
	@%p39 bra 	$L__BB0_95;

	mov.u32 	%r982, 0;

$L__BB0_79:
	.pragma "nounroll";
	// begin inline asm
	call (%rd408), _optix_get_transform_list_handle, (%r982);
	// end inline asm
	// begin inline asm
	call (%r506), _optix_get_transform_type_from_handle, (%rd408);
	// end inline asm
	or.b32  	%r507, %r506, 1;
	setp.eq.s32 	%p40, %r507, 3;
	@%p40 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_80;

$L__BB0_85:
	setp.eq.s32 	%p43, %r506, 2;
	@%p43 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_86;

$L__BB0_89:
	// begin inline asm
	call (%rd480), _optix_get_matrix_motion_transform_from_handle, (%rd408);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd482, %rd480;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r595,%r596,%r597,%r598}, [%rd482];
	// end inline asm
	add.s64 	%rd486, %rd480, 16;
	// begin inline asm
	cvta.to.global.u64 %rd485, %rd486;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r599,%r600,%r601,%r602}, [%rd485];
	// end inline asm
	add.s64 	%rd489, %rd480, 32;
	// begin inline asm
	cvta.to.global.u64 %rd488, %rd489;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r603,%r604,%r605,%r606}, [%rd488];
	// end inline asm
	add.s64 	%rd492, %rd480, 48;
	// begin inline asm
	cvta.to.global.u64 %rd491, %rd492;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r607,%r608,%r609,%r610}, [%rd491];
	// end inline asm
	add.s64 	%rd495, %rd480, 64;
	// begin inline asm
	cvta.to.global.u64 %rd494, %rd495;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r611,%r612,%r613,%r614}, [%rd494];
	// end inline asm
	add.s64 	%rd498, %rd480, 80;
	// begin inline asm
	cvta.to.global.u64 %rd497, %rd498;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r615,%r616,%r617,%r618}, [%rd497];
	// end inline asm
	add.s64 	%rd501, %rd480, 96;
	// begin inline asm
	cvta.to.global.u64 %rd500, %rd501;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r619,%r620,%r621,%r622}, [%rd500];
	// end inline asm
	add.s64 	%rd504, %rd480, 112;
	// begin inline asm
	cvta.to.global.u64 %rd503, %rd504;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r623,%r624,%r625,%r626}, [%rd503];
	// end inline asm
	mov.b32 	%f2135, %r598;
	mov.b32 	%f2136, %r599;
	and.b32  	%r639, %r597, 65535;
	add.s32 	%r640, %r639, -1;
	cvt.rn.f32.s32 	%f2137, %r640;
	sub.ftz.f32 	%f2138, %f2032, %f2135;
	mul.ftz.f32 	%f2139, %f2138, %f2137;
	sub.ftz.f32 	%f2140, %f2136, %f2135;
	div.approx.ftz.f32 	%f2141, %f2139, %f2140;
	min.ftz.f32 	%f2142, %f2137, %f2141;
	mov.f32 	%f2143, 0f00000000;
	max.ftz.f32 	%f2144, %f2143, %f2142;
	cvt.rmi.ftz.f32.f32 	%f2145, %f2144;
	sub.ftz.f32 	%f659, %f2144, %f2145;
	cvt.rzi.ftz.s32.f32 	%r641, %f2145;
	cvt.s64.s32 	%rd29, %r641;
	mul.wide.s32 	%rd515, %r641, 48;
	add.s64 	%rd507, %rd489, %rd515;
	// begin inline asm
	cvta.to.global.u64 %rd506, %rd507;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r627,%r628,%r629,%r630}, [%rd506];
	// end inline asm
	mov.b32 	%f3068, %r627;
	mov.b32 	%f3069, %r628;
	mov.b32 	%f3070, %r629;
	add.s64 	%rd510, %rd507, 16;
	// begin inline asm
	cvta.to.global.u64 %rd509, %rd510;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r631,%r632,%r633,%r634}, [%rd509];
	// end inline asm
	mov.b32 	%f3065, %r631;
	mov.b32 	%f3066, %r632;
	mov.b32 	%f3067, %r633;
	add.s64 	%rd513, %rd507, 32;
	// begin inline asm
	cvta.to.global.u64 %rd512, %rd513;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r635,%r636,%r637,%r638}, [%rd512];
	// end inline asm
	mov.b32 	%f3062, %r635;
	mov.b32 	%f3063, %r636;
	mov.b32 	%f3064, %r637;
	setp.leu.ftz.f32 	%p45, %f659, 0f00000000;
	@%p45 bra 	$L__BB0_91;

	mov.f32 	%f2146, 0f3F800000;
	sub.ftz.f32 	%f2147, %f2146, %f659;
	mul.lo.s64 	%rd525, %rd29, 48;
	add.s64 	%rd526, %rd480, %rd525;
	add.s64 	%rd517, %rd526, 80;
	// begin inline asm
	cvta.to.global.u64 %rd516, %rd517;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r642,%r643,%r644,%r645}, [%rd516];
	// end inline asm
	mov.b32 	%f2148, %r642;
	mov.b32 	%f2149, %r643;
	mov.b32 	%f2150, %r644;
	mul.ftz.f32 	%f2151, %f659, %f2148;
	mul.ftz.f32 	%f2152, %f659, %f2149;
	mul.ftz.f32 	%f2153, %f659, %f2150;
	fma.rn.ftz.f32 	%f3068, %f2147, %f3068, %f2151;
	fma.rn.ftz.f32 	%f3069, %f2147, %f3069, %f2152;
	fma.rn.ftz.f32 	%f3070, %f2147, %f3070, %f2153;
	add.s64 	%rd520, %rd526, 96;
	// begin inline asm
	cvta.to.global.u64 %rd519, %rd520;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r646,%r647,%r648,%r649}, [%rd519];
	// end inline asm
	mov.b32 	%f2154, %r646;
	mov.b32 	%f2155, %r647;
	mov.b32 	%f2156, %r648;
	mul.ftz.f32 	%f2157, %f659, %f2154;
	mul.ftz.f32 	%f2158, %f659, %f2155;
	mul.ftz.f32 	%f2159, %f659, %f2156;
	fma.rn.ftz.f32 	%f3065, %f2147, %f3065, %f2157;
	fma.rn.ftz.f32 	%f3066, %f2147, %f3066, %f2158;
	fma.rn.ftz.f32 	%f3067, %f2147, %f3067, %f2159;
	add.s64 	%rd523, %rd526, 112;
	// begin inline asm
	cvta.to.global.u64 %rd522, %rd523;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r650,%r651,%r652,%r653}, [%rd522];
	// end inline asm
	mov.b32 	%f2160, %r650;
	mov.b32 	%f2161, %r651;
	mov.b32 	%f2162, %r652;
	mul.ftz.f32 	%f2163, %f659, %f2160;
	mul.ftz.f32 	%f2164, %f659, %f2161;
	mul.ftz.f32 	%f2165, %f659, %f2162;
	fma.rn.ftz.f32 	%f3062, %f2147, %f3062, %f2163;
	fma.rn.ftz.f32 	%f3063, %f2147, %f3063, %f2164;
	fma.rn.ftz.f32 	%f3064, %f2147, %f3064, %f2165;
	bra.uni 	$L__BB0_91;

$L__BB0_80:
	mov.f32 	%f3071, 0f00000000;
	mov.f32 	%f3073, 0f3F800000;
	setp.eq.s32 	%p41, %r506, 4;
	@%p41 bra 	$L__BB0_83;

	setp.ne.s32 	%p42, %r506, 1;
	mov.f32 	%f3072, %f3071;
	mov.f32 	%f3074, %f3071;
	mov.f32 	%f3075, %f3073;
	mov.f32 	%f3076, %f3071;
	mov.f32 	%f3077, %f3073;
	mov.f32 	%f3078, %f3071;
	mov.f32 	%f3079, %f3071;
	@%p42 bra 	$L__BB0_92;

	// begin inline asm
	call (%rd410), _optix_get_static_transform_from_handle, (%rd408);
	// end inline asm
	add.s64 	%rd781, %rd410, 64;
	bra.uni 	$L__BB0_84;

$L__BB0_86:
	// begin inline asm
	call (%rd423), _optix_get_srt_motion_transform_from_handle, (%rd408);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd425, %rd423;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r520,%r521,%r522,%r523}, [%rd425];
	// end inline asm
	add.s64 	%rd429, %rd423, 16;
	// begin inline asm
	cvta.to.global.u64 %rd428, %rd429;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r524,%r525,%r526,%r527}, [%rd428];
	// end inline asm
	add.s64 	%rd432, %rd423, 32;
	// begin inline asm
	cvta.to.global.u64 %rd431, %rd432;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r528,%r529,%r530,%r531}, [%rd431];
	// end inline asm
	add.s64 	%rd435, %rd423, 48;
	// begin inline asm
	cvta.to.global.u64 %rd434, %rd435;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r532,%r533,%r534,%r535}, [%rd434];
	// end inline asm
	add.s64 	%rd438, %rd423, 64;
	// begin inline asm
	cvta.to.global.u64 %rd437, %rd438;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r536,%r537,%r538,%r539}, [%rd437];
	// end inline asm
	add.s64 	%rd441, %rd423, 80;
	// begin inline asm
	cvta.to.global.u64 %rd440, %rd441;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r540,%r541,%r542,%r543}, [%rd440];
	// end inline asm
	add.s64 	%rd444, %rd423, 96;
	// begin inline asm
	cvta.to.global.u64 %rd443, %rd444;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r544,%r545,%r546,%r547}, [%rd443];
	// end inline asm
	add.s64 	%rd447, %rd423, 112;
	// begin inline asm
	cvta.to.global.u64 %rd446, %rd447;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r548,%r549,%r550,%r551}, [%rd446];
	// end inline asm
	add.s64 	%rd450, %rd423, 128;
	// begin inline asm
	cvta.to.global.u64 %rd449, %rd450;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r552,%r553,%r554,%r555}, [%rd449];
	// end inline asm
	add.s64 	%rd453, %rd423, 144;
	// begin inline asm
	cvta.to.global.u64 %rd452, %rd453;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r556,%r557,%r558,%r559}, [%rd452];
	// end inline asm
	mov.b32 	%f2044, %r523;
	mov.b32 	%f2045, %r524;
	and.b32  	%r576, %r522, 65535;
	add.s32 	%r577, %r576, -1;
	cvt.rn.f32.s32 	%f2046, %r577;
	sub.ftz.f32 	%f2047, %f2032, %f2044;
	mul.ftz.f32 	%f2048, %f2047, %f2046;
	sub.ftz.f32 	%f2049, %f2045, %f2044;
	div.approx.ftz.f32 	%f2050, %f2048, %f2049;
	min.ftz.f32 	%f2051, %f2046, %f2050;
	mov.f32 	%f2052, 0f00000000;
	max.ftz.f32 	%f2053, %f2052, %f2051;
	cvt.rmi.ftz.f32.f32 	%f2054, %f2053;
	sub.ftz.f32 	%f619, %f2053, %f2054;
	cvt.rzi.ftz.s32.f32 	%r578, %f2054;
	mul.wide.s32 	%rd467, %r578, 64;
	add.s64 	%rd456, %rd432, %rd467;
	// begin inline asm
	cvta.to.global.u64 %rd455, %rd456;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r560,%r561,%r562,%r563}, [%rd455];
	// end inline asm
	mov.b32 	%f3052, %r560;
	mov.b32 	%f3053, %r561;
	mov.b32 	%f3054, %r562;
	add.s64 	%rd459, %rd456, 16;
	// begin inline asm
	cvta.to.global.u64 %rd458, %rd459;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r564,%r565,%r566,%r567}, [%rd458];
	// end inline asm
	mov.b32 	%f3055, %r564;
	mov.b32 	%f3056, %r565;
	mov.b32 	%f3057, %r567;
	add.s64 	%rd462, %rd456, 32;
	// begin inline asm
	cvta.to.global.u64 %rd461, %rd462;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r568,%r569,%r570,%r571}, [%rd461];
	// end inline asm
	mov.b32 	%f3058, %r569;
	mov.b32 	%f3059, %r570;
	mov.b32 	%f3060, %r571;
	add.s64 	%rd465, %rd456, 48;
	// begin inline asm
	cvta.to.global.u64 %rd464, %rd465;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r572,%r573,%r574,%r575}, [%rd464];
	// end inline asm
	mov.b32 	%f3061, %r572;
	setp.leu.ftz.f32 	%p44, %f619, 0f00000000;
	@%p44 bra 	$L__BB0_88;

	mov.f32 	%f2055, 0f3F800000;
	sub.ftz.f32 	%f2056, %f2055, %f619;
	add.s64 	%rd469, %rd456, 64;
	// begin inline asm
	cvta.to.global.u64 %rd468, %rd469;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r579,%r580,%r581,%r582}, [%rd468];
	// end inline asm
	mov.b32 	%f2057, %r579;
	mov.b32 	%f2058, %r580;
	mov.b32 	%f2059, %r581;
	mul.ftz.f32 	%f2060, %f619, %f2057;
	mul.ftz.f32 	%f2061, %f619, %f2058;
	mul.ftz.f32 	%f2062, %f619, %f2059;
	fma.rn.ftz.f32 	%f3052, %f2056, %f3052, %f2060;
	fma.rn.ftz.f32 	%f3053, %f2056, %f3053, %f2061;
	fma.rn.ftz.f32 	%f3054, %f2056, %f3054, %f2062;
	add.s64 	%rd472, %rd456, 80;
	// begin inline asm
	cvta.to.global.u64 %rd471, %rd472;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r583,%r584,%r585,%r586}, [%rd471];
	// end inline asm
	mov.b32 	%f2063, %r583;
	mov.b32 	%f2064, %r584;
	mov.b32 	%f2065, %r586;
	mul.ftz.f32 	%f2066, %f619, %f2063;
	mul.ftz.f32 	%f2067, %f619, %f2064;
	mul.ftz.f32 	%f2068, %f619, %f2065;
	fma.rn.ftz.f32 	%f3055, %f2056, %f3055, %f2066;
	fma.rn.ftz.f32 	%f3056, %f2056, %f3056, %f2067;
	fma.rn.ftz.f32 	%f3057, %f2056, %f3057, %f2068;
	add.s64 	%rd475, %rd456, 96;
	// begin inline asm
	cvta.to.global.u64 %rd474, %rd475;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r587,%r588,%r589,%r590}, [%rd474];
	// end inline asm
	mov.b32 	%f2069, %r588;
	mov.b32 	%f2070, %r589;
	mov.b32 	%f2071, %r590;
	mul.ftz.f32 	%f2072, %f619, %f2069;
	mul.ftz.f32 	%f2073, %f619, %f2070;
	mul.ftz.f32 	%f2074, %f619, %f2071;
	fma.rn.ftz.f32 	%f2075, %f2056, %f3058, %f2072;
	fma.rn.ftz.f32 	%f2076, %f2056, %f3059, %f2073;
	fma.rn.ftz.f32 	%f2077, %f2056, %f3060, %f2074;
	add.s64 	%rd478, %rd456, 112;
	// begin inline asm
	cvta.to.global.u64 %rd477, %rd478;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r591,%r592,%r593,%r594}, [%rd477];
	// end inline asm
	mov.b32 	%f2078, %r591;
	mul.ftz.f32 	%f2079, %f619, %f2078;
	fma.rn.ftz.f32 	%f2080, %f2056, %f3061, %f2079;
	mul.ftz.f32 	%f2081, %f2076, %f2076;
	fma.rn.ftz.f32 	%f2082, %f2075, %f2075, %f2081;
	fma.rn.ftz.f32 	%f2083, %f2077, %f2077, %f2082;
	fma.rn.ftz.f32 	%f2084, %f2080, %f2080, %f2083;
	rsqrt.approx.ftz.f32 	%f2085, %f2084;
	mul.ftz.f32 	%f3058, %f2075, %f2085;
	mul.ftz.f32 	%f3059, %f2076, %f2085;
	mul.ftz.f32 	%f3060, %f2077, %f2085;
	mul.ftz.f32 	%f3061, %f2085, %f2080;

$L__BB0_88:
	mul.ftz.f32 	%f2086, %f3059, %f3059;
	fma.rn.ftz.f32 	%f2087, %f3058, %f3058, %f2086;
	fma.rn.ftz.f32 	%f2088, %f3060, %f3060, %f2087;
	fma.rn.ftz.f32 	%f2089, %f3061, %f3061, %f2088;
	rcp.approx.ftz.f32 	%f2090, %f2089;
	mul.ftz.f32 	%f2091, %f3058, %f2090;
	mul.ftz.f32 	%f2092, %f3059, %f2090;
	mul.ftz.f32 	%f2093, %f3060, %f2090;
	mul.ftz.f32 	%f2094, %f3061, %f2090;
	mul.ftz.f32 	%f2095, %f3058, %f2091;
	mul.ftz.f32 	%f2096, %f3059, %f2092;
	mul.ftz.f32 	%f2097, %f3060, %f2093;
	mul.ftz.f32 	%f2098, %f3058, %f2092;
	mul.ftz.f32 	%f2099, %f3060, %f2094;
	mul.ftz.f32 	%f2100, %f3058, %f2093;
	mul.ftz.f32 	%f2101, %f3059, %f2094;
	mul.ftz.f32 	%f2102, %f3059, %f2093;
	mul.ftz.f32 	%f2103, %f3058, %f2094;
	sub.ftz.f32 	%f2104, %f2095, %f2096;
	sub.ftz.f32 	%f2105, %f2104, %f2097;
	fma.rn.ftz.f32 	%f2106, %f3061, %f2094, %f2105;
	sub.ftz.f32 	%f2107, %f2098, %f2099;
	add.ftz.f32 	%f2108, %f2107, %f2107;
	add.ftz.f32 	%f2109, %f2100, %f2101;
	add.ftz.f32 	%f2110, %f2109, %f2109;
	add.ftz.f32 	%f2111, %f2098, %f2099;
	add.ftz.f32 	%f2112, %f2111, %f2111;
	sub.ftz.f32 	%f2113, %f2096, %f2095;
	sub.ftz.f32 	%f2114, %f2113, %f2097;
	fma.rn.ftz.f32 	%f2115, %f3061, %f2094, %f2114;
	sub.ftz.f32 	%f2116, %f2102, %f2103;
	add.ftz.f32 	%f2117, %f2116, %f2116;
	sub.ftz.f32 	%f2118, %f2100, %f2101;
	add.ftz.f32 	%f2119, %f2118, %f2118;
	add.ftz.f32 	%f2120, %f2102, %f2103;
	add.ftz.f32 	%f2121, %f2120, %f2120;
	neg.ftz.f32 	%f2122, %f2095;
	sub.ftz.f32 	%f2123, %f2122, %f2096;
	add.ftz.f32 	%f2124, %f2097, %f2123;
	fma.rn.ftz.f32 	%f2125, %f3061, %f2094, %f2124;
	mul.ftz.f32 	%f2126, %f3054, %f2106;
	fma.rn.ftz.f32 	%f2127, %f3056, %f2108, %f2126;
	fma.rn.ftz.f32 	%f3070, %f3057, %f2110, %f2127;
	mul.ftz.f32 	%f2128, %f3056, %f2115;
	fma.rn.ftz.f32 	%f2129, %f3054, %f2112, %f2128;
	fma.rn.ftz.f32 	%f3067, %f3057, %f2117, %f2129;
	mul.ftz.f32 	%f2130, %f3056, %f2121;
	fma.rn.ftz.f32 	%f2131, %f3054, %f2119, %f2130;
	fma.rn.ftz.f32 	%f3064, %f3057, %f2125, %f2131;
	mul.ftz.f32 	%f2132, %f3053, %f2106;
	fma.rn.ftz.f32 	%f3069, %f3055, %f2108, %f2132;
	mul.ftz.f32 	%f2133, %f3055, %f2115;
	fma.rn.ftz.f32 	%f3066, %f3053, %f2112, %f2133;
	mul.ftz.f32 	%f2134, %f3055, %f2121;
	fma.rn.ftz.f32 	%f3063, %f3053, %f2119, %f2134;
	mul.ftz.f32 	%f3068, %f3052, %f2106;
	mul.ftz.f32 	%f3065, %f3052, %f2112;
	mul.ftz.f32 	%f3062, %f3052, %f2119;

$L__BB0_91:
	mul.ftz.f32 	%f2166, %f3063, %f3067;
	mul.ftz.f32 	%f2167, %f3064, %f3066;
	sub.ftz.f32 	%f2168, %f2167, %f2166;
	mul.ftz.f32 	%f2169, %f3068, %f2168;
	mul.ftz.f32 	%f2170, %f3062, %f3067;
	mul.ftz.f32 	%f2171, %f3064, %f3065;
	sub.ftz.f32 	%f2172, %f2171, %f2170;
	mul.ftz.f32 	%f2173, %f2172, %f3069;
	sub.ftz.f32 	%f2174, %f2169, %f2173;
	mul.ftz.f32 	%f2175, %f3062, %f3066;
	mul.ftz.f32 	%f2176, %f3063, %f3065;
	sub.ftz.f32 	%f2177, %f2176, %f2175;
	fma.rn.ftz.f32 	%f2178, %f2177, %f3070, %f2174;
	rcp.approx.ftz.f32 	%f2179, %f2178;
	mul.ftz.f32 	%f3077, %f2168, %f2179;
	mul.ftz.f32 	%f2180, %f3064, %f3069;
	mul.ftz.f32 	%f2181, %f3063, %f3070;
	sub.ftz.f32 	%f2182, %f2181, %f2180;
	mul.ftz.f32 	%f3078, %f2182, %f2179;
	mul.ftz.f32 	%f2183, %f3066, %f3070;
	mul.ftz.f32 	%f2184, %f3067, %f3069;
	sub.ftz.f32 	%f2185, %f2184, %f2183;
	mul.ftz.f32 	%f3079, %f2185, %f2179;
	sub.ftz.f32 	%f2186, %f2170, %f2171;
	mul.ftz.f32 	%f3074, %f2186, %f2179;
	mul.ftz.f32 	%f2187, %f3062, %f3070;
	mul.ftz.f32 	%f2188, %f3064, %f3068;
	sub.ftz.f32 	%f2189, %f2188, %f2187;
	mul.ftz.f32 	%f3075, %f2189, %f2179;
	mul.ftz.f32 	%f2190, %f3067, %f3068;
	mul.ftz.f32 	%f2191, %f3065, %f3070;
	sub.ftz.f32 	%f2192, %f2191, %f2190;
	mul.ftz.f32 	%f3076, %f2192, %f2179;
	mul.ftz.f32 	%f3071, %f2177, %f2179;
	mul.ftz.f32 	%f2193, %f3063, %f3068;
	mul.ftz.f32 	%f2194, %f3062, %f3069;
	sub.ftz.f32 	%f2195, %f2194, %f2193;
	mul.ftz.f32 	%f3072, %f2195, %f2179;
	mul.ftz.f32 	%f2196, %f3065, %f3069;
	mul.ftz.f32 	%f2197, %f3066, %f3068;
	sub.ftz.f32 	%f2198, %f2197, %f2196;
	mul.ftz.f32 	%f3073, %f2198, %f2179;
	bra.uni 	$L__BB0_92;

$L__BB0_83:
	// begin inline asm
	call (%rd781), _optix_get_instance_inverse_transform_from_handle, (%rd408);
	// end inline asm

$L__BB0_84:
	// begin inline asm
	cvta.to.global.u64 %rd414, %rd781;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r508,%r509,%r510,%r511}, [%rd414];
	// end inline asm
	mov.b32 	%f3077, %r508;
	mov.b32 	%f3078, %r509;
	mov.b32 	%f3079, %r510;
	add.s64 	%rd418, %rd781, 16;
	// begin inline asm
	cvta.to.global.u64 %rd417, %rd418;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r512,%r513,%r514,%r515}, [%rd417];
	// end inline asm
	mov.b32 	%f3074, %r512;
	mov.b32 	%f3075, %r513;
	mov.b32 	%f3076, %r514;
	add.s64 	%rd421, %rd781, 32;
	// begin inline asm
	cvta.to.global.u64 %rd420, %rd421;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r516,%r517,%r518,%r519}, [%rd420];
	// end inline asm
	mov.b32 	%f3071, %r516;
	mov.b32 	%f3072, %r517;
	mov.b32 	%f3073, %r518;

$L__BB0_92:
	setp.eq.s32 	%p46, %r982, 0;
	@%p46 bra 	$L__BB0_94;

	mul.ftz.f32 	%f2199, %f3048, %f3078;
	fma.rn.ftz.f32 	%f2200, %f3045, %f3077, %f2199;
	fma.rn.ftz.f32 	%f705, %f3051, %f3079, %f2200;
	mul.ftz.f32 	%f2201, %f3047, %f3078;
	fma.rn.ftz.f32 	%f2202, %f3044, %f3077, %f2201;
	fma.rn.ftz.f32 	%f706, %f3050, %f3079, %f2202;
	mul.ftz.f32 	%f2203, %f3046, %f3078;
	fma.rn.ftz.f32 	%f2204, %f3043, %f3077, %f2203;
	fma.rn.ftz.f32 	%f3079, %f3049, %f3079, %f2204;
	mul.ftz.f32 	%f2205, %f3048, %f3075;
	fma.rn.ftz.f32 	%f2206, %f3045, %f3074, %f2205;
	fma.rn.ftz.f32 	%f708, %f3051, %f3076, %f2206;
	mul.ftz.f32 	%f2207, %f3047, %f3075;
	fma.rn.ftz.f32 	%f2208, %f3044, %f3074, %f2207;
	fma.rn.ftz.f32 	%f709, %f3050, %f3076, %f2208;
	mul.ftz.f32 	%f2209, %f3046, %f3075;
	fma.rn.ftz.f32 	%f2210, %f3043, %f3074, %f2209;
	fma.rn.ftz.f32 	%f3076, %f3049, %f3076, %f2210;
	mul.ftz.f32 	%f2211, %f3048, %f3072;
	fma.rn.ftz.f32 	%f2212, %f3045, %f3071, %f2211;
	fma.rn.ftz.f32 	%f711, %f3051, %f3073, %f2212;
	mul.ftz.f32 	%f2213, %f3047, %f3072;
	fma.rn.ftz.f32 	%f2214, %f3044, %f3071, %f2213;
	fma.rn.ftz.f32 	%f712, %f3050, %f3073, %f2214;
	mul.ftz.f32 	%f2215, %f3046, %f3072;
	fma.rn.ftz.f32 	%f2216, %f3043, %f3071, %f2215;
	fma.rn.ftz.f32 	%f3073, %f3049, %f3073, %f2216;
	mov.f32 	%f3071, %f711;
	mov.f32 	%f3072, %f712;
	mov.f32 	%f3074, %f708;
	mov.f32 	%f3075, %f709;
	mov.f32 	%f3077, %f705;
	mov.f32 	%f3078, %f706;

$L__BB0_94:
	add.s32 	%r982, %r982, 1;
	setp.lt.u32 	%p47, %r982, %r503;
	mov.f32 	%f3043, %f3079;
	mov.f32 	%f3044, %f3078;
	mov.f32 	%f3045, %f3077;
	mov.f32 	%f3046, %f3076;
	mov.f32 	%f3047, %f3075;
	mov.f32 	%f3048, %f3074;
	mov.f32 	%f3049, %f3073;
	mov.f32 	%f3050, %f3072;
	mov.f32 	%f3051, %f3071;
	@%p47 bra 	$L__BB0_79;

$L__BB0_95:
	mul.ftz.f32 	%f2217, %f3240, %f3077;
	fma.rn.ftz.f32 	%f2218, %f3239, %f3074, %f2217;
	mul.ftz.f32 	%f2219, %f3240, %f3078;
	fma.rn.ftz.f32 	%f2220, %f3239, %f3075, %f2219;
	mul.ftz.f32 	%f2221, %f3240, %f3079;
	fma.rn.ftz.f32 	%f2222, %f3239, %f3076, %f2221;
	fma.rn.ftz.f32 	%f3238, %f599, %f3073, %f2222;
	fma.rn.ftz.f32 	%f3239, %f599, %f3072, %f2220;
	fma.rn.ftz.f32 	%f3240, %f599, %f3071, %f2218;
	bra.uni 	$L__BB0_144;

$L__BB0_96:
	mov.f32 	%f3238, %f599;

$L__BB0_144:
	ld.u32 	%r962, [%rd46+100];
	setp.eq.s32 	%p70, %r962, 14;
	@%p70 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	ld.u64 	%rd767, [%rd46+24];
	mul.wide.u32 	%rd768, %r31, 8;
	add.s64 	%rd769, %rd767, %rd768;
	ld.v2.u32 	{%r30, %r29}, [%rd769];
	bra.uni 	$L__BB0_147;

$L__BB0_145:
	add.s32 	%r29, %r31, 1;
	mov.u32 	%r30, %r31;

$L__BB0_147:
	// begin inline asm
	call (%r965), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f1117, %r965;
	ld.u32 	%r968, [%rd46+96];
	and.b32  	%r969, %r968, 1073741823;
	setp.gt.ftz.f32 	%p71, %f1117, 0f3F000000;
	or.b32  	%r970, %r969, 1073741824;
	selp.b32 	%r967, %r970, %r969, %p71;
	mov.u32 	%r966, 2;
	// begin inline asm
	call _optix_set_payload, (%r966, %r967);
	// end inline asm
	ld.v4.f32 	{%f2739, %f2740, %f2741, %f2742}, [%rd46+112];
	ld.f32 	%f3243, [%rd46+80];
	setp.lt.ftz.f32 	%p72, %f3243, 0f00000000;
	@%p72 bra 	$L__BB0_149;
	bra.uni 	$L__BB0_148;

$L__BB0_149:
	ld.u64 	%rd44, [%rd46+8];
	ld.u8 	%rs1, [%rd46+188];
	and.b16  	%rs2, %rs1, 64;
	setp.eq.s16 	%p73, %rs2, 0;
	@%p73 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	mul.wide.s32 	%rd772, %r29, 12;
	add.s64 	%rd773, %rd44, %rd772;
	mul.wide.s32 	%rd774, %r30, 12;
	add.s64 	%rd775, %rd44, %rd774;
	ld.f32 	%f2743, [%rd775];
	ld.f32 	%f2744, [%rd773];
	sub.ftz.f32 	%f2745, %f2744, %f2743;
	ld.f32 	%f2746, [%rd775+4];
	ld.f32 	%f2747, [%rd773+4];
	sub.ftz.f32 	%f2748, %f2747, %f2746;
	ld.f32 	%f2749, [%rd775+8];
	ld.f32 	%f2750, [%rd773+8];
	sub.ftz.f32 	%f2751, %f2750, %f2749;
	fma.rn.ftz.f32 	%f3243, %f2745, %f1117, %f2743;
	fma.rn.ftz.f32 	%f3242, %f2748, %f1117, %f2746;
	fma.rn.ftz.f32 	%f3241, %f2751, %f1117, %f2749;
	bra.uni 	$L__BB0_152;

$L__BB0_148:
	ld.f32 	%f3242, [%rd46+84];
	ld.f32 	%f3241, [%rd46+88];
	bra.uni 	$L__BB0_152;

$L__BB0_150:
	mul.wide.u32 	%rd770, %r31, 12;
	add.s64 	%rd771, %rd44, %rd770;
	ld.f32 	%f3243, [%rd771];
	ld.f32 	%f3242, [%rd771+4];
	ld.f32 	%f3241, [%rd771+8];

$L__BB0_152:
	mov.u32 	%r972, 0;
	// begin inline asm
	call (%r971), _optix_get_payload, (%r972);
	// end inline asm
	mov.u32 	%r974, 1;
	// begin inline asm
	call (%r973), _optix_get_payload, (%r974);
	// end inline asm
	cvt.u64.u32 	%rd776, %r971;
	cvt.u64.u32 	%rd777, %r973;
	bfi.b64 	%rd45, %rd776, %rd777, 32, 32;
	// begin inline asm
	call (%f2752), _optix_get_ray_tmax, ();
	// end inline asm
	st.v4.f32 	[%rd45+96], {%f1, %f2, %f3, %f2752};
	mul.ftz.f32 	%f2753, %f3240, %f3240;
	fma.rn.ftz.f32 	%f2754, %f3239, %f3239, %f2753;
	fma.rn.ftz.f32 	%f2755, %f3238, %f3238, %f2754;
	rsqrt.approx.ftz.f32 	%f2756, %f2755;
	mul.ftz.f32 	%f1134, %f3240, %f2756;
	mul.ftz.f32 	%f1135, %f3239, %f2756;
	mul.ftz.f32 	%f1136, %f3238, %f2756;
	ld.f32 	%f2757, [%rd45+128];
	ld.f32 	%f2758, [%rd45+132];
	mul.ftz.f32 	%f2759, %f1135, %f2758;
	fma.rn.ftz.f32 	%f2760, %f2757, %f1134, %f2759;
	ld.f32 	%f2761, [%rd45+136];
	fma.rn.ftz.f32 	%f2762, %f1136, %f2761, %f2760;
	abs.ftz.f32 	%f2763, %f2762;
	ld.const.f32 	%f2764, [params+268];
	mul.ftz.f32 	%f2765, %f2739, %f3243;
	sub.ftz.f32 	%f2766, %f2764, %f2765;
	ld.const.v2.f32 	{%f2767, %f2768}, [params+272];
	mul.ftz.f32 	%f2771, %f2740, %f3242;
	sub.ftz.f32 	%f2772, %f2767, %f2771;
	mul.ftz.f32 	%f2773, %f2741, %f3241;
	sub.ftz.f32 	%f2774, %f2768, %f2773;
	fma.rn.ftz.f32 	%f2775, %f2763, %f2774, %f2773;
	fma.rn.ftz.f32 	%f2776, %f2763, %f2772, %f2771;
	fma.rn.ftz.f32 	%f2777, %f2763, %f2766, %f2765;
	st.v2.f32 	[%rd45], {%f2777, %f2776};
	st.f32 	[%rd45+8], %f2775;
	ld.u32 	%r975, [%rd45+12];
	or.b32  	%r976, %r975, -2147483648;
	st.u32 	[%rd45+12], %r976;
	and.b32  	%r977, %r975, 16777216;
	setp.eq.s32 	%p74, %r977, 0;
	@%p74 bra 	$L__BB0_154;

	ld.f32 	%f2778, [%rd45+16];
	ld.f32 	%f2779, [%rd45];
	mul.ftz.f32 	%f2780, %f2779, %f2778;
	st.f32 	[%rd45+16], %f2780;
	ld.f32 	%f2781, [%rd45+20];
	ld.f32 	%f2782, [%rd45+4];
	mul.ftz.f32 	%f2783, %f2782, %f2781;
	st.f32 	[%rd45+20], %f2783;
	ld.f32 	%f2784, [%rd45+24];
	ld.f32 	%f2785, [%rd45+8];
	mul.ftz.f32 	%f2786, %f2785, %f2784;
	st.f32 	[%rd45+24], %f2786;

$L__BB0_154:
	ld.u32 	%r978, [%rd45+44];
	setp.ne.s32 	%p75, %r978, 0;
	@%p75 bra 	$L__BB0_156;

	ld.const.v2.f32 	{%f2787, %f2788}, [params+144];
	mul.ftz.f32 	%f2791, %f1135, %f2788;
	fma.rn.ftz.f32 	%f2792, %f1134, %f2787, %f2791;
	ld.const.f32 	%f2793, [params+152];
	ld.const.v2.f32 	{%f2794, %f2795}, [params+160];
	mul.ftz.f32 	%f2798, %f1135, %f2795;
	fma.rn.ftz.f32 	%f2799, %f1134, %f2794, %f2798;
	ld.const.f32 	%f2800, [params+168];
	ld.const.v2.f32 	{%f2801, %f2802}, [params+176];
	mul.ftz.f32 	%f2805, %f1135, %f2802;
	fma.rn.ftz.f32 	%f2806, %f1134, %f2801, %f2805;
	ld.const.f32 	%f2807, [params+184];
	fma.rn.ftz.f32 	%f2808, %f1136, %f2807, %f2806;
	fma.rn.ftz.f32 	%f2809, %f1136, %f2800, %f2799;
	fma.rn.ftz.f32 	%f2810, %f1136, %f2793, %f2792;
	st.v2.f32 	[%rd45+32], {%f2810, %f2809};
	st.f32 	[%rd45+40], %f2808;

$L__BB0_156:
	mov.f32 	%f2811, 0f3F800000;
	st.v4.f32 	[%rd45+48], {%f2811, %f2811, %f2811, %f2811};
	ret;

}

