//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__mesh_radiance__flat
.const .align 8 .b8 params[288];

.visible .entry __closesthit__mesh_radiance__flat()
{
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<289>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<55>;


	// begin inline asm
	call (%rd12), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u32 	%r8, [%rd12+96];
	and.b32  	%r42, %r8, 1073741823;
	// begin inline asm
	call (%r7), _optix_read_primitive_idx, ();
	// end inline asm
	cvt.s64.s32 	%rd2, %r7;
	ld.u64 	%rd13, [%rd12+16];
	mul.wide.s32 	%rd14, %r7, 12;
	add.s64 	%rd15, %rd13, %rd14;
	ld.u32 	%r9, [%rd15];
	cvt.u64.u32 	%rd3, %r9;
	ld.u64 	%rd16, [%rd12];
	mul.wide.u32 	%rd17, %r9, 12;
	add.s64 	%rd18, %rd16, %rd17;
	ld.f32 	%f1, [%rd18];
	ld.f32 	%f2, [%rd18+4];
	ld.f32 	%f3, [%rd18+8];
	ld.u32 	%r10, [%rd15+4];
	cvt.u64.u32 	%rd4, %r10;
	mul.wide.u32 	%rd19, %r10, 12;
	add.s64 	%rd20, %rd16, %rd19;
	ld.f32 	%f4, [%rd20];
	ld.f32 	%f5, [%rd20+4];
	ld.f32 	%f6, [%rd20+8];
	ld.u32 	%r11, [%rd15+8];
	cvt.u64.u32 	%rd5, %r11;
	mul.wide.u32 	%rd21, %r11, 12;
	add.s64 	%rd22, %rd16, %rd21;
	ld.f32 	%f7, [%rd22];
	ld.f32 	%f8, [%rd22+4];
	ld.f32 	%f9, [%rd22+8];
	// begin inline asm
	call (%f278, %f279), _optix_get_triangle_barycentrics, ();
	// end inline asm
	mov.f32 	%f80, 0f3F800000;
	sub.ftz.f32 	%f81, %f80, %f278;
	sub.ftz.f32 	%f12, %f81, %f279;
	sub.ftz.f32 	%f82, %f4, %f1;
	sub.ftz.f32 	%f83, %f5, %f2;
	sub.ftz.f32 	%f84, %f6, %f3;
	sub.ftz.f32 	%f85, %f7, %f1;
	sub.ftz.f32 	%f86, %f8, %f2;
	sub.ftz.f32 	%f87, %f9, %f3;
	mul.ftz.f32 	%f88, %f83, %f87;
	mul.ftz.f32 	%f89, %f84, %f86;
	sub.ftz.f32 	%f268, %f88, %f89;
	mul.ftz.f32 	%f90, %f84, %f85;
	mul.ftz.f32 	%f91, %f82, %f87;
	sub.ftz.f32 	%f267, %f90, %f91;
	mul.ftz.f32 	%f92, %f82, %f86;
	mul.ftz.f32 	%f93, %f83, %f85;
	sub.ftz.f32 	%f266, %f92, %f93;
	mul.ftz.f32 	%f94, %f1, %f12;
	mul.ftz.f32 	%f95, %f2, %f12;
	mul.ftz.f32 	%f96, %f3, %f12;
	fma.rn.ftz.f32 	%f97, %f4, %f278, %f94;
	fma.rn.ftz.f32 	%f98, %f5, %f278, %f95;
	fma.rn.ftz.f32 	%f99, %f6, %f278, %f96;
	fma.rn.ftz.f32 	%f16, %f7, %f279, %f97;
	fma.rn.ftz.f32 	%f17, %f8, %f279, %f98;
	fma.rn.ftz.f32 	%f18, %f9, %f279, %f99;
	ld.u32 	%r12, [%rd12+100];
	setp.eq.s32 	%p1, %r12, 10;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;

$L__BB0_2:
	cvt.u32.u64 	%r18, %rd5;
	cvt.u32.u64 	%r17, %rd2;
	mov.u32 	%r16, 3;
	// begin inline asm
	call _optix_set_payload, (%r16, %r17);
	// end inline asm
	setp.gt.ftz.f32 	%p2, %f279, %f278;
	cvt.u32.u64 	%r19, %rd4;
	selp.b32 	%r20, %r18, %r19, %p2;
	selp.b32 	%r21, -2147483648, 1073741824, %p2;
	selp.f32 	%f100, %f279, %f278, %p2;
	setp.gt.ftz.f32 	%p3, %f12, %f100;
	cvt.u32.u64 	%r22, %rd3;
	selp.b32 	%r43, %r22, %r20, %p3;
	selp.b32 	%r23, 0, %r21, %p3;
	or.b32  	%r42, %r23, %r42;
	ld.u64 	%rd6, [%rd12+24];
	setp.eq.s64 	%p4, %rd6, 0;
	@%p4 bra 	$L__BB0_4;

	ld.u64 	%rd23, [%rd12+32];
	mul.lo.s64 	%rd24, %rd2, 12;
	add.s64 	%rd25, %rd23, %rd24;
	ld.u32 	%r24, [%rd25];
	mul.wide.u32 	%rd26, %r24, 12;
	add.s64 	%rd27, %rd6, %rd26;
	ld.f32 	%f101, [%rd27];
	ld.f32 	%f102, [%rd27+4];
	ld.f32 	%f103, [%rd27+8];
	ld.u32 	%r25, [%rd25+4];
	mul.wide.u32 	%rd28, %r25, 12;
	add.s64 	%rd29, %rd6, %rd28;
	ld.f32 	%f104, [%rd29];
	mul.ftz.f32 	%f105, %f278, %f104;
	ld.f32 	%f106, [%rd29+4];
	mul.ftz.f32 	%f107, %f278, %f106;
	ld.f32 	%f108, [%rd29+8];
	mul.ftz.f32 	%f109, %f278, %f108;
	fma.rn.ftz.f32 	%f110, %f12, %f101, %f105;
	fma.rn.ftz.f32 	%f111, %f12, %f102, %f107;
	fma.rn.ftz.f32 	%f112, %f12, %f103, %f109;
	ld.u32 	%r26, [%rd25+8];
	mul.wide.u32 	%rd30, %r26, 12;
	add.s64 	%rd31, %rd6, %rd30;
	ld.f32 	%f113, [%rd31];
	ld.f32 	%f114, [%rd31+4];
	ld.f32 	%f115, [%rd31+8];
	fma.rn.ftz.f32 	%f268, %f279, %f113, %f110;
	fma.rn.ftz.f32 	%f267, %f279, %f114, %f111;
	fma.rn.ftz.f32 	%f266, %f279, %f115, %f112;
	bra.uni 	$L__BB0_4;

$L__BB0_1:
	cvt.u32.u64 	%r15, %rd2;
	shr.s32 	%r43, %r15, 2;
	mov.u32 	%r13, 3;
	// begin inline asm
	call _optix_set_payload, (%r13, %r43);
	// end inline asm

$L__BB0_4:
	mov.u32 	%r27, 2;
	// begin inline asm
	call _optix_set_payload, (%r27, %r42);
	// end inline asm
	ld.v4.f32 	{%f116, %f117, %f118, %f119}, [%rd12+112];
	ld.f32 	%f271, [%rd12+80];
	setp.lt.ftz.f32 	%p5, %f271, 0f00000000;
	@%p5 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;

$L__BB0_6:
	ld.u64 	%rd7, [%rd12+8];
	ld.u32 	%r29, [%rd12+100];
	setp.eq.s32 	%p6, %r29, 9;
	@%p6 bra 	$L__BB0_11;

	setp.ne.s32 	%p7, %r29, 10;
	@%p7 bra 	$L__BB0_12;

	ld.u8 	%rs1, [%rd12+188];
	and.b16  	%rs2, %rs1, 64;
	setp.eq.s16 	%p8, %rs2, 0;
	@%p8 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;

$L__BB0_10:
	mul.lo.s64 	%rd34, %rd3, 12;
	add.s64 	%rd35, %rd7, %rd34;
	ld.f32 	%f121, [%rd35];
	ld.f32 	%f122, [%rd35+4];
	ld.f32 	%f123, [%rd35+8];
	mul.lo.s64 	%rd36, %rd4, 12;
	add.s64 	%rd37, %rd7, %rd36;
	ld.f32 	%f124, [%rd37];
	mul.ftz.f32 	%f125, %f278, %f124;
	ld.f32 	%f126, [%rd37+4];
	mul.ftz.f32 	%f127, %f278, %f126;
	ld.f32 	%f128, [%rd37+8];
	mul.ftz.f32 	%f129, %f278, %f128;
	fma.rn.ftz.f32 	%f130, %f12, %f121, %f125;
	fma.rn.ftz.f32 	%f131, %f12, %f122, %f127;
	fma.rn.ftz.f32 	%f132, %f12, %f123, %f129;
	mul.lo.s64 	%rd38, %rd5, 12;
	add.s64 	%rd39, %rd7, %rd38;
	ld.f32 	%f133, [%rd39];
	ld.f32 	%f134, [%rd39+4];
	ld.f32 	%f135, [%rd39+8];
	fma.rn.ftz.f32 	%f271, %f279, %f133, %f130;
	fma.rn.ftz.f32 	%f270, %f279, %f134, %f131;
	fma.rn.ftz.f32 	%f269, %f279, %f135, %f132;
	bra.uni 	$L__BB0_12;

$L__BB0_5:
	ld.f32 	%f270, [%rd12+84];
	ld.f32 	%f269, [%rd12+88];
	bra.uni 	$L__BB0_12;

$L__BB0_11:
	mul.wide.u32 	%rd40, %r43, 12;
	add.s64 	%rd41, %rd7, %rd40;
	ld.f32 	%f271, [%rd41];
	ld.f32 	%f270, [%rd41+4];
	ld.f32 	%f269, [%rd41+8];
	bra.uni 	$L__BB0_12;

$L__BB0_9:
	mul.lo.s64 	%rd32, %rd2, 12;
	add.s64 	%rd33, %rd7, %rd32;
	ld.f32 	%f271, [%rd33];
	ld.f32 	%f270, [%rd33+4];
	ld.f32 	%f269, [%rd33+8];

$L__BB0_12:
	mul.ftz.f32 	%f288, %f116, %f271;
	mul.ftz.f32 	%f287, %f117, %f270;
	mul.ftz.f32 	%f286, %f118, %f269;
	ld.u32 	%r30, [%rd12+224];
	setp.eq.s32 	%p9, %r30, 0;
	@%p9 bra 	$L__BB0_19;

	ld.u64 	%rd8, [%rd12+40];
	setp.eq.s64 	%p10, %rd8, 0;
	mov.f32 	%f274, 0f3F7EB852;
	mov.f32 	%f273, 0f3BA3D70A;
	mov.f32 	%f272, 0f3F000000;
	mov.f32 	%f275, %f274;
	mov.f32 	%f276, %f273;
	mov.f32 	%f277, %f274;
	@%p10 bra 	$L__BB0_15;

	ld.u64 	%rd42, [%rd12+48];
	mul.lo.s64 	%rd43, %rd2, 12;
	add.s64 	%rd44, %rd42, %rd43;
	ld.u32 	%r31, [%rd44];
	mul.wide.u32 	%rd45, %r31, 8;
	add.s64 	%rd46, %rd8, %rd45;
	ld.v2.f32 	{%f276, %f277}, [%rd46];
	ld.u32 	%r32, [%rd44+4];
	mul.wide.u32 	%rd47, %r32, 8;
	add.s64 	%rd48, %rd8, %rd47;
	ld.v2.f32 	{%f274, %f275}, [%rd48];
	ld.u32 	%r33, [%rd44+8];
	mul.wide.u32 	%rd49, %r33, 8;
	add.s64 	%rd50, %rd8, %rd49;
	ld.v2.f32 	{%f272, %f273}, [%rd50];
	mul.ftz.f32 	%f148, %f278, %f274;
	mul.ftz.f32 	%f149, %f278, %f275;
	fma.rn.ftz.f32 	%f150, %f12, %f276, %f148;
	fma.rn.ftz.f32 	%f151, %f12, %f277, %f149;
	fma.rn.ftz.f32 	%f278, %f279, %f272, %f150;
	fma.rn.ftz.f32 	%f279, %f279, %f273, %f151;

$L__BB0_15:
	ld.u64 	%rd51, [%rd12+192];
	ld.u64 	%rd9, [%rd51];
	setp.eq.s64 	%p11, %rd9, 0;
	@%p11 bra 	$L__BB0_17;

	tex.2d.v4.f32.f32 	{%f152, %f153, %f154, %f155}, [%rd9, {%f278, %f279}];
	mul.ftz.f32 	%f288, %f288, %f152;
	mul.ftz.f32 	%f287, %f287, %f153;
	mul.ftz.f32 	%f286, %f286, %f154;

$L__BB0_17:
	ld.u64 	%rd52, [%rd12+216];
	ld.u64 	%rd10, [%rd52];
	setp.eq.s64 	%p12, %rd10, 0;
	@%p12 bra 	$L__BB0_19;

	sub.ftz.f32 	%f156, %f275, %f273;
	sub.ftz.f32 	%f157, %f276, %f272;
	mul.ftz.f32 	%f158, %f156, %f157;
	sub.ftz.f32 	%f159, %f277, %f273;
	sub.ftz.f32 	%f160, %f274, %f272;
	mul.ftz.f32 	%f161, %f160, %f159;
	sub.ftz.f32 	%f162, %f158, %f161;
	rcp.approx.ftz.f32 	%f163, %f162;
	sub.ftz.f32 	%f164, %f1, %f7;
	mul.ftz.f32 	%f165, %f164, %f156;
	sub.ftz.f32 	%f166, %f2, %f8;
	mul.ftz.f32 	%f167, %f166, %f156;
	sub.ftz.f32 	%f168, %f3, %f9;
	mul.ftz.f32 	%f169, %f168, %f156;
	sub.ftz.f32 	%f170, %f4, %f7;
	mul.ftz.f32 	%f171, %f170, %f159;
	sub.ftz.f32 	%f172, %f5, %f8;
	mul.ftz.f32 	%f173, %f172, %f159;
	sub.ftz.f32 	%f174, %f6, %f9;
	mul.ftz.f32 	%f175, %f174, %f159;
	sub.ftz.f32 	%f176, %f165, %f171;
	sub.ftz.f32 	%f177, %f167, %f173;
	sub.ftz.f32 	%f178, %f169, %f175;
	mul.ftz.f32 	%f179, %f163, %f176;
	mul.ftz.f32 	%f180, %f163, %f177;
	mul.ftz.f32 	%f181, %f163, %f178;
	mul.ftz.f32 	%f182, %f164, %f160;
	mul.ftz.f32 	%f183, %f166, %f160;
	mul.ftz.f32 	%f184, %f168, %f160;
	mul.ftz.f32 	%f185, %f170, %f157;
	mul.ftz.f32 	%f186, %f172, %f157;
	mul.ftz.f32 	%f187, %f174, %f157;
	sub.ftz.f32 	%f188, %f185, %f182;
	sub.ftz.f32 	%f189, %f186, %f183;
	sub.ftz.f32 	%f190, %f187, %f184;
	mul.ftz.f32 	%f191, %f163, %f188;
	mul.ftz.f32 	%f192, %f163, %f189;
	mul.ftz.f32 	%f193, %f163, %f190;
	tex.2d.v4.f32.f32 	{%f194, %f195, %f196, %f197}, [%rd10, {%f278, %f279}];
	mul.ftz.f32 	%f198, %f268, %f268;
	fma.rn.ftz.f32 	%f199, %f267, %f267, %f198;
	fma.rn.ftz.f32 	%f200, %f266, %f266, %f199;
	rsqrt.approx.ftz.f32 	%f201, %f200;
	mul.ftz.f32 	%f202, %f180, %f180;
	fma.rn.ftz.f32 	%f203, %f179, %f179, %f202;
	fma.rn.ftz.f32 	%f204, %f181, %f181, %f203;
	rsqrt.approx.ftz.f32 	%f205, %f204;
	mul.ftz.f32 	%f206, %f179, %f205;
	mul.ftz.f32 	%f207, %f180, %f205;
	mul.ftz.f32 	%f208, %f181, %f205;
	mul.ftz.f32 	%f209, %f194, %f206;
	mul.ftz.f32 	%f210, %f194, %f207;
	mul.ftz.f32 	%f211, %f194, %f208;
	fma.rn.ftz.f32 	%f212, %f268, %f201, %f209;
	fma.rn.ftz.f32 	%f213, %f267, %f201, %f210;
	fma.rn.ftz.f32 	%f214, %f266, %f201, %f211;
	ld.f32 	%f215, [%rd12+184];
	mul.ftz.f32 	%f216, %f215, %f195;
	mul.ftz.f32 	%f217, %f192, %f192;
	fma.rn.ftz.f32 	%f218, %f191, %f191, %f217;
	fma.rn.ftz.f32 	%f219, %f193, %f193, %f218;
	rsqrt.approx.ftz.f32 	%f220, %f219;
	mul.ftz.f32 	%f221, %f191, %f220;
	mul.ftz.f32 	%f222, %f192, %f220;
	mul.ftz.f32 	%f223, %f193, %f220;
	fma.rn.ftz.f32 	%f268, %f216, %f221, %f212;
	fma.rn.ftz.f32 	%f267, %f216, %f222, %f213;
	fma.rn.ftz.f32 	%f266, %f216, %f223, %f214;

$L__BB0_19:
	mov.u32 	%r35, 0;
	// begin inline asm
	call (%r34), _optix_get_payload, (%r35);
	// end inline asm
	mov.u32 	%r37, 1;
	// begin inline asm
	call (%r36), _optix_get_payload, (%r37);
	// end inline asm
	cvt.u64.u32 	%rd53, %r34;
	cvt.u64.u32 	%rd54, %r36;
	bfi.b64 	%rd11, %rd53, %rd54, 32, 32;
	// begin inline asm
	call (%f224), _optix_get_ray_tmax, ();
	// end inline asm
	st.f32 	[%rd11+108], %f224;
	st.v2.f32 	[%rd11], {%f288, %f287};
	st.f32 	[%rd11+8], %f286;
	st.v2.f32 	[%rd11+96], {%f16, %f17};
	st.f32 	[%rd11+104], %f18;
	ld.u32 	%r38, [%rd11+12];
	or.b32  	%r39, %r38, -2147483648;
	st.u32 	[%rd11+12], %r39;
	and.b32  	%r40, %r38, 16777216;
	setp.eq.s32 	%p13, %r40, 0;
	@%p13 bra 	$L__BB0_21;

	ld.f32 	%f225, [%rd11+16];
	ld.f32 	%f226, [%rd11];
	mul.ftz.f32 	%f227, %f226, %f225;
	st.f32 	[%rd11+16], %f227;
	ld.f32 	%f228, [%rd11+20];
	ld.f32 	%f229, [%rd11+4];
	mul.ftz.f32 	%f230, %f229, %f228;
	st.f32 	[%rd11+20], %f230;
	ld.f32 	%f231, [%rd11+24];
	ld.f32 	%f232, [%rd11+8];
	mul.ftz.f32 	%f233, %f232, %f231;
	st.f32 	[%rd11+24], %f233;

$L__BB0_21:
	ld.u32 	%r41, [%rd11+44];
	setp.ne.s32 	%p14, %r41, 0;
	@%p14 bra 	$L__BB0_23;

	mul.ftz.f32 	%f234, %f268, %f268;
	fma.rn.ftz.f32 	%f235, %f267, %f267, %f234;
	fma.rn.ftz.f32 	%f236, %f266, %f266, %f235;
	rsqrt.approx.ftz.f32 	%f237, %f236;
	mul.ftz.f32 	%f238, %f268, %f237;
	mul.ftz.f32 	%f239, %f267, %f237;
	mul.ftz.f32 	%f240, %f266, %f237;
	ld.const.v2.f32 	{%f241, %f242}, [params+144];
	mul.ftz.f32 	%f245, %f242, %f239;
	fma.rn.ftz.f32 	%f246, %f241, %f238, %f245;
	ld.const.f32 	%f247, [params+152];
	ld.const.v2.f32 	{%f248, %f249}, [params+160];
	mul.ftz.f32 	%f252, %f249, %f239;
	fma.rn.ftz.f32 	%f253, %f248, %f238, %f252;
	ld.const.f32 	%f254, [params+168];
	ld.const.v2.f32 	{%f255, %f256}, [params+176];
	mul.ftz.f32 	%f259, %f239, %f256;
	fma.rn.ftz.f32 	%f260, %f238, %f255, %f259;
	ld.const.f32 	%f261, [params+184];
	fma.rn.ftz.f32 	%f262, %f240, %f261, %f260;
	fma.rn.ftz.f32 	%f263, %f240, %f254, %f253;
	fma.rn.ftz.f32 	%f264, %f247, %f240, %f246;
	st.v2.f32 	[%rd11+32], {%f264, %f263};
	st.f32 	[%rd11+40], %f262;

$L__BB0_23:
	st.v4.f32 	[%rd11+48], {%f80, %f80, %f80, %f80};
	ret;

}

