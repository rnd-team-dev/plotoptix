//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__intersection__particles_entry
.const .align 8 .b8 params[288];

.visible .entry __intersection__particles_entry()
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<10>;


	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%rd3), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	cvt.u64.u32 	%rd2, %r1;
	ld.u64 	%rd4, [%rd3+32];
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.f32 	%f1, [%rd6];
	setp.eq.ftz.f32 	%p1, %f1, 0f00000000;
	@%p1 bra 	$L__BB0_6;

	ld.u64 	%rd7, [%rd3];
	mul.lo.s64 	%rd8, %rd2, 12;
	add.s64 	%rd9, %rd7, %rd8;
	ld.f32 	%f2, [%rd9];
	ld.f32 	%f3, [%rd9+4];
	ld.f32 	%f4, [%rd9+8];
	// begin inline asm
	call (%f22), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f23), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f24), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f25), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f26), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f27), _optix_get_object_ray_direction_z, ();
	// end inline asm
	sub.ftz.f32 	%f28, %f22, %f2;
	sub.ftz.f32 	%f29, %f23, %f3;
	sub.ftz.f32 	%f30, %f24, %f4;
	mul.ftz.f32 	%f31, %f26, %f29;
	fma.rn.ftz.f32 	%f32, %f25, %f28, %f31;
	fma.rn.ftz.f32 	%f11, %f27, %f30, %f32;
	mul.ftz.f32 	%f33, %f29, %f29;
	fma.rn.ftz.f32 	%f34, %f28, %f28, %f33;
	fma.rn.ftz.f32 	%f35, %f30, %f30, %f34;
	mul.ftz.f32 	%f36, %f1, %f1;
	sub.ftz.f32 	%f37, %f35, %f36;
	mul.ftz.f32 	%f38, %f11, %f11;
	sub.ftz.f32 	%f12, %f38, %f37;
	setp.leu.ftz.f32 	%p2, %f12, 0f00000000;
	@%p2 bra 	$L__BB0_6;

	sqrt.approx.ftz.f32 	%f13, %f12;
	neg.ftz.f32 	%f43, %f11;
	sub.ftz.f32 	%f14, %f43, %f13;
	fma.rn.ftz.f32 	%f44, %f25, %f14, %f22;
	fma.rn.ftz.f32 	%f45, %f26, %f14, %f23;
	fma.rn.ftz.f32 	%f46, %f27, %f14, %f24;
	sub.ftz.f32 	%f15, %f44, %f2;
	sub.ftz.f32 	%f16, %f45, %f3;
	sub.ftz.f32 	%f17, %f46, %f4;
	mul.ftz.f32 	%f47, %f26, %f16;
	fma.rn.ftz.f32 	%f48, %f25, %f15, %f47;
	fma.rn.ftz.f32 	%f49, %f27, %f17, %f48;
	setp.lt.ftz.f32 	%p3, %f49, 0f00000000;
	// begin inline asm
	call (%f41), _optix_get_ray_tmax, ();
	// end inline asm
	setp.lt.ftz.f32 	%p4, %f14, %f41;
	and.pred  	%p5, %p4, %p3;
	// begin inline asm
	call (%f42), _optix_get_ray_tmin, ();
	// end inline asm
	setp.gt.ftz.f32 	%p6, %f14, %f42;
	and.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_3;

$L__BB0_5:
	mov.b32 	%r12, %f15;
	mov.b32 	%r14, %f17;
	mov.b32 	%r13, %f16;
	mov.u32 	%r17, 0;
	// begin inline asm
	call (%r10), _optix_report_intersection_6, (%f14, %r17, %r12, %r13, %r14, %r17, %r17, %r17);
	// end inline asm
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	sub.ftz.f32 	%f18, %f13, %f11;
	fma.rn.ftz.f32 	%f52, %f25, %f18, %f22;
	fma.rn.ftz.f32 	%f53, %f26, %f18, %f23;
	fma.rn.ftz.f32 	%f54, %f27, %f18, %f24;
	sub.ftz.f32 	%f19, %f52, %f2;
	sub.ftz.f32 	%f20, %f53, %f3;
	sub.ftz.f32 	%f21, %f54, %f4;
	mul.ftz.f32 	%f55, %f26, %f20;
	fma.rn.ftz.f32 	%f56, %f25, %f19, %f55;
	fma.rn.ftz.f32 	%f57, %f27, %f21, %f56;
	setp.geu.ftz.f32 	%p8, %f57, 0f00000000;
	// begin inline asm
	call (%f50), _optix_get_ray_tmax, ();
	// end inline asm
	setp.geu.ftz.f32 	%p9, %f18, %f50;
	or.pred  	%p10, %p8, %p9;
	// begin inline asm
	call (%f51), _optix_get_ray_tmin, ();
	// end inline asm
	setp.leu.ftz.f32 	%p11, %f18, %f51;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_6;

	mov.b32 	%r4, %f19;
	mov.b32 	%r6, %f21;
	mov.b32 	%r5, %f20;
	mov.u32 	%r9, 0;
	// begin inline asm
	call (%r2), _optix_report_intersection_6, (%f18, %r9, %r4, %r5, %r6, %r9, %r9, %r9);
	// end inline asm

$L__BB0_6:
	ret;

}

