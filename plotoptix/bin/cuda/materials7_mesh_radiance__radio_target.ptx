//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__mesh_radiance__radio_target
.const .align 8 .b8 params[288];

.visible .entry __closesthit__mesh_radiance__radio_target()
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<125>;
	.reg .b32 	%r<41>;
	.reg .b64 	%rd<43>;


	// begin inline asm
	call (%rd10), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u32 	%r8, [%rd10+96];
	and.b32  	%r39, %r8, 1073741823;
	// begin inline asm
	call (%r7), _optix_read_primitive_idx, ();
	// end inline asm
	cvt.s64.s32 	%rd2, %r7;
	ld.u64 	%rd11, [%rd10+16];
	mul.wide.s32 	%rd12, %r7, 12;
	add.s64 	%rd13, %rd11, %rd12;
	ld.u32 	%r9, [%rd13];
	cvt.u64.u32 	%rd3, %r9;
	ld.u64 	%rd14, [%rd10];
	mul.wide.u32 	%rd15, %r9, 12;
	add.s64 	%rd16, %rd14, %rd15;
	ld.f32 	%f41, [%rd16];
	ld.f32 	%f42, [%rd16+4];
	ld.f32 	%f43, [%rd16+8];
	ld.u32 	%r10, [%rd13+4];
	cvt.u64.u32 	%rd4, %r10;
	mul.wide.u32 	%rd17, %r10, 12;
	add.s64 	%rd18, %rd14, %rd17;
	ld.f32 	%f44, [%rd18];
	ld.f32 	%f45, [%rd18+4];
	ld.f32 	%f46, [%rd18+8];
	ld.u32 	%r11, [%rd13+8];
	cvt.u64.u32 	%rd5, %r11;
	mul.wide.u32 	%rd19, %r11, 12;
	add.s64 	%rd20, %rd14, %rd19;
	ld.f32 	%f47, [%rd20];
	ld.f32 	%f48, [%rd20+4];
	ld.f32 	%f49, [%rd20+8];
	// begin inline asm
	call (%f120, %f121), _optix_get_triangle_barycentrics, ();
	// end inline asm
	mov.f32 	%f50, 0f3F800000;
	sub.ftz.f32 	%f51, %f50, %f120;
	sub.ftz.f32 	%f3, %f51, %f121;
	mul.ftz.f32 	%f52, %f41, %f3;
	mul.ftz.f32 	%f53, %f42, %f3;
	mul.ftz.f32 	%f54, %f43, %f3;
	fma.rn.ftz.f32 	%f55, %f44, %f120, %f52;
	fma.rn.ftz.f32 	%f56, %f45, %f120, %f53;
	fma.rn.ftz.f32 	%f57, %f46, %f120, %f54;
	fma.rn.ftz.f32 	%f4, %f47, %f121, %f55;
	fma.rn.ftz.f32 	%f5, %f48, %f121, %f56;
	fma.rn.ftz.f32 	%f6, %f49, %f121, %f57;
	ld.u32 	%r12, [%rd10+100];
	setp.eq.s32 	%p1, %r12, 10;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;

$L__BB0_2:
	cvt.u32.u64 	%r18, %rd5;
	cvt.u32.u64 	%r17, %rd2;
	mov.u32 	%r16, 3;
	// begin inline asm
	call _optix_set_payload, (%r16, %r17);
	// end inline asm
	setp.gt.ftz.f32 	%p2, %f121, %f120;
	cvt.u32.u64 	%r19, %rd4;
	selp.b32 	%r20, %r18, %r19, %p2;
	selp.b32 	%r21, -2147483648, 1073741824, %p2;
	selp.f32 	%f58, %f121, %f120, %p2;
	setp.gt.ftz.f32 	%p3, %f3, %f58;
	cvt.u32.u64 	%r22, %rd3;
	selp.b32 	%r6, %r22, %r20, %p3;
	selp.b32 	%r23, 0, %r21, %p3;
	or.b32  	%r39, %r23, %r39;
	bra.uni 	$L__BB0_3;

$L__BB0_1:
	cvt.u32.u64 	%r15, %rd2;
	shr.s32 	%r6, %r15, 2;
	mov.u32 	%r13, 3;
	// begin inline asm
	call _optix_set_payload, (%r13, %r6);
	// end inline asm

$L__BB0_3:
	mov.u32 	%r24, 2;
	// begin inline asm
	call _optix_set_payload, (%r24, %r39);
	// end inline asm
	ld.v4.f32 	{%f59, %f60, %f61, %f62}, [%rd10+112];
	ld.f32 	%f119, [%rd10+80];
	setp.lt.ftz.f32 	%p4, %f119, 0f00000000;
	@%p4 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;

$L__BB0_5:
	ld.u64 	%rd6, [%rd10+8];
	ld.u32 	%r26, [%rd10+100];
	setp.eq.s32 	%p5, %r26, 9;
	@%p5 bra 	$L__BB0_10;

	setp.ne.s32 	%p6, %r26, 10;
	@%p6 bra 	$L__BB0_11;

	ld.u8 	%rs1, [%rd10+188];
	and.b16  	%rs2, %rs1, 64;
	setp.eq.s16 	%p7, %rs2, 0;
	@%p7 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_8;

$L__BB0_9:
	mul.lo.s64 	%rd23, %rd3, 12;
	add.s64 	%rd24, %rd6, %rd23;
	ld.f32 	%f64, [%rd24];
	ld.f32 	%f65, [%rd24+4];
	ld.f32 	%f66, [%rd24+8];
	mul.lo.s64 	%rd25, %rd4, 12;
	add.s64 	%rd26, %rd6, %rd25;
	ld.f32 	%f67, [%rd26];
	mul.ftz.f32 	%f68, %f120, %f67;
	ld.f32 	%f69, [%rd26+4];
	mul.ftz.f32 	%f70, %f120, %f69;
	ld.f32 	%f71, [%rd26+8];
	mul.ftz.f32 	%f72, %f120, %f71;
	fma.rn.ftz.f32 	%f73, %f3, %f64, %f68;
	fma.rn.ftz.f32 	%f74, %f3, %f65, %f70;
	fma.rn.ftz.f32 	%f75, %f3, %f66, %f72;
	mul.lo.s64 	%rd27, %rd5, 12;
	add.s64 	%rd28, %rd6, %rd27;
	ld.f32 	%f76, [%rd28];
	ld.f32 	%f77, [%rd28+4];
	ld.f32 	%f78, [%rd28+8];
	fma.rn.ftz.f32 	%f119, %f121, %f76, %f73;
	fma.rn.ftz.f32 	%f118, %f121, %f77, %f74;
	fma.rn.ftz.f32 	%f117, %f121, %f78, %f75;
	bra.uni 	$L__BB0_11;

$L__BB0_4:
	ld.f32 	%f118, [%rd10+84];
	ld.f32 	%f117, [%rd10+88];
	bra.uni 	$L__BB0_11;

$L__BB0_10:
	mul.wide.u32 	%rd29, %r6, 12;
	add.s64 	%rd30, %rd6, %rd29;
	ld.f32 	%f119, [%rd30];
	ld.f32 	%f118, [%rd30+4];
	ld.f32 	%f117, [%rd30+8];
	bra.uni 	$L__BB0_11;

$L__BB0_8:
	mul.lo.s64 	%rd21, %rd2, 12;
	add.s64 	%rd22, %rd6, %rd21;
	ld.f32 	%f119, [%rd22];
	ld.f32 	%f118, [%rd22+4];
	ld.f32 	%f117, [%rd22+8];

$L__BB0_11:
	mul.ftz.f32 	%f124, %f59, %f119;
	mul.ftz.f32 	%f123, %f60, %f118;
	mul.ftz.f32 	%f122, %f61, %f117;
	ld.u32 	%r27, [%rd10+224];
	setp.eq.s32 	%p8, %r27, 0;
	@%p8 bra 	$L__BB0_16;

	ld.u64 	%rd7, [%rd10+40];
	setp.eq.s64 	%p9, %rd7, 0;
	@%p9 bra 	$L__BB0_14;

	ld.u64 	%rd31, [%rd10+48];
	mul.lo.s64 	%rd32, %rd2, 12;
	add.s64 	%rd33, %rd31, %rd32;
	ld.u32 	%r28, [%rd33];
	mul.wide.u32 	%rd34, %r28, 8;
	add.s64 	%rd35, %rd7, %rd34;
	ld.v2.f32 	{%f79, %f80}, [%rd35];
	ld.u32 	%r29, [%rd33+4];
	mul.wide.u32 	%rd36, %r29, 8;
	add.s64 	%rd37, %rd7, %rd36;
	ld.v2.f32 	{%f83, %f84}, [%rd37];
	ld.u32 	%r30, [%rd33+8];
	mul.wide.u32 	%rd38, %r30, 8;
	add.s64 	%rd39, %rd7, %rd38;
	ld.v2.f32 	{%f87, %f88}, [%rd39];
	mul.ftz.f32 	%f91, %f120, %f83;
	mul.ftz.f32 	%f92, %f120, %f84;
	fma.rn.ftz.f32 	%f93, %f3, %f79, %f91;
	fma.rn.ftz.f32 	%f94, %f3, %f80, %f92;
	fma.rn.ftz.f32 	%f120, %f121, %f87, %f93;
	fma.rn.ftz.f32 	%f121, %f121, %f88, %f94;

$L__BB0_14:
	ld.u64 	%rd40, [%rd10+192];
	ld.u64 	%rd8, [%rd40];
	setp.eq.s64 	%p10, %rd8, 0;
	@%p10 bra 	$L__BB0_16;

	tex.2d.v4.f32.f32 	{%f95, %f96, %f97, %f98}, [%rd8, {%f120, %f121}];
	mul.ftz.f32 	%f124, %f124, %f95;
	mul.ftz.f32 	%f123, %f123, %f96;
	mul.ftz.f32 	%f122, %f122, %f97;

$L__BB0_16:
	mov.u32 	%r32, 0;
	// begin inline asm
	call (%r31), _optix_get_payload, (%r32);
	// end inline asm
	mov.u32 	%r34, 1;
	// begin inline asm
	call (%r33), _optix_get_payload, (%r34);
	// end inline asm
	cvt.u64.u32 	%rd41, %r31;
	cvt.u64.u32 	%rd42, %r33;
	bfi.b64 	%rd9, %rd41, %rd42, 32, 32;
	st.v4.f32 	[%rd9+48], {%f50, %f50, %f50, %f50};
	// begin inline asm
	call (%f99), _optix_get_ray_tmax, ();
	// end inline asm
	st.f32 	[%rd9+108], %f99;
	st.v2.f32 	[%rd9], {%f124, %f123};
	st.f32 	[%rd9+8], %f122;
	st.v2.f32 	[%rd9+96], {%f4, %f5};
	st.f32 	[%rd9+104], %f6;
	ld.u32 	%r35, [%rd9+12];
	or.b32  	%r36, %r35, -2147483648;
	st.u32 	[%rd9+12], %r36;
	and.b32  	%r37, %r35, 16777216;
	setp.eq.s32 	%p11, %r37, 0;
	@%p11 bra 	$L__BB0_18;

	ld.f32 	%f101, [%rd9+16];
	ld.f32 	%f102, [%rd9];
	mul.ftz.f32 	%f103, %f102, %f101;
	st.f32 	[%rd9+16], %f103;
	ld.f32 	%f104, [%rd9+20];
	ld.f32 	%f105, [%rd9+4];
	mul.ftz.f32 	%f106, %f105, %f104;
	st.f32 	[%rd9+20], %f106;
	ld.f32 	%f107, [%rd9+24];
	ld.f32 	%f108, [%rd9+8];
	mul.ftz.f32 	%f109, %f108, %f107;
	st.f32 	[%rd9+24], %f109;

$L__BB0_18:
	ld.u32 	%r38, [%rd9+44];
	setp.ne.s32 	%p12, %r38, 0;
	@%p12 bra 	$L__BB0_20;

	ld.v4.f32 	{%f110, %f111, %f112, %f113}, [%rd9+128];
	st.v2.f32 	[%rd9+32], {%f110, %f111};
	st.f32 	[%rd9+40], %f112;

$L__BB0_20:
	ret;

}

