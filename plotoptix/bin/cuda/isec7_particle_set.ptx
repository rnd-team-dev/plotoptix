//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__intersection__particles
.const .align 8 .b8 params[288];

.visible .entry __intersection__particles()
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<10>;


	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%rd3), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	cvt.u64.u32 	%rd2, %r1;
	ld.u64 	%rd4, [%rd3+32];
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.f32 	%f1, [%rd6];
	setp.eq.ftz.f32 	%p1, %f1, 0f00000000;
	@%p1 bra 	$L__BB0_6;

	ld.u64 	%rd7, [%rd3];
	mul.lo.s64 	%rd8, %rd2, 12;
	add.s64 	%rd9, %rd7, %rd8;
	ld.f32 	%f2, [%rd9];
	ld.f32 	%f3, [%rd9+4];
	ld.f32 	%f4, [%rd9+8];
	// begin inline asm
	call (%f16), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f17), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f18), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f19), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f20), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f21), _optix_get_object_ray_direction_z, ();
	// end inline asm
	sub.ftz.f32 	%f22, %f16, %f2;
	sub.ftz.f32 	%f23, %f17, %f3;
	sub.ftz.f32 	%f24, %f18, %f4;
	mul.ftz.f32 	%f25, %f20, %f23;
	fma.rn.ftz.f32 	%f26, %f19, %f22, %f25;
	fma.rn.ftz.f32 	%f11, %f21, %f24, %f26;
	mul.ftz.f32 	%f27, %f23, %f23;
	fma.rn.ftz.f32 	%f28, %f22, %f22, %f27;
	fma.rn.ftz.f32 	%f29, %f24, %f24, %f28;
	mul.ftz.f32 	%f30, %f1, %f1;
	sub.ftz.f32 	%f31, %f29, %f30;
	mul.ftz.f32 	%f32, %f11, %f11;
	sub.ftz.f32 	%f12, %f32, %f31;
	setp.leu.ftz.f32 	%p2, %f12, 0f00000000;
	@%p2 bra 	$L__BB0_6;

	sqrt.approx.ftz.f32 	%f13, %f12;
	neg.ftz.f32 	%f37, %f11;
	sub.ftz.f32 	%f14, %f37, %f13;
	// begin inline asm
	call (%f35), _optix_get_ray_tmax, ();
	// end inline asm
	setp.lt.ftz.f32 	%p3, %f14, %f35;
	// begin inline asm
	call (%f36), _optix_get_ray_tmin, ();
	// end inline asm
	setp.gt.ftz.f32 	%p4, %f14, %f36;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_3;

$L__BB0_5:
	fma.rn.ftz.f32 	%f48, %f19, %f14, %f16;
	fma.rn.ftz.f32 	%f49, %f20, %f14, %f17;
	fma.rn.ftz.f32 	%f50, %f21, %f14, %f18;
	sub.ftz.f32 	%f51, %f48, %f2;
	sub.ftz.f32 	%f52, %f49, %f3;
	sub.ftz.f32 	%f53, %f50, %f4;
	mov.b32 	%r12, %f51;
	mov.b32 	%r13, %f52;
	mov.b32 	%r14, %f53;
	mov.u32 	%r11, 1;
	mov.u32 	%r17, 0;
	// begin inline asm
	call (%r10), _optix_report_intersection_6, (%f14, %r11, %r12, %r13, %r14, %r17, %r17, %r17);
	// end inline asm
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	sub.ftz.f32 	%f15, %f13, %f11;
	// begin inline asm
	call (%f38), _optix_get_ray_tmax, ();
	// end inline asm
	setp.geu.ftz.f32 	%p6, %f15, %f38;
	// begin inline asm
	call (%f39), _optix_get_ray_tmin, ();
	// end inline asm
	setp.leu.ftz.f32 	%p7, %f15, %f39;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_6;

	fma.rn.ftz.f32 	%f41, %f19, %f15, %f16;
	fma.rn.ftz.f32 	%f42, %f20, %f15, %f17;
	fma.rn.ftz.f32 	%f43, %f21, %f15, %f18;
	sub.ftz.f32 	%f44, %f41, %f2;
	sub.ftz.f32 	%f45, %f42, %f3;
	sub.ftz.f32 	%f46, %f43, %f4;
	mov.b32 	%r4, %f44;
	mov.b32 	%r5, %f45;
	mov.b32 	%r6, %f46;
	mov.u32 	%r3, 1;
	mov.u32 	%r9, 0;
	// begin inline asm
	call (%r2), _optix_report_intersection_6, (%f15, %r3, %r4, %r5, %r6, %r9, %r9, %r9);
	// end inline asm

$L__BB0_6:
	ret;

}

