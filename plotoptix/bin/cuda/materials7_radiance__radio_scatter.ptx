//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__radiance__radio_scatter
.const .align 8 .b8 params[288];

.visible .entry __closesthit__radiance__radio_scatter()
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<254>;
	.reg .b32 	%r<36>;
	.reg .b64 	%rd<56>;


	// begin inline asm
	call (%rd21), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u32 	%r5, [%rd21+96];
	mov.u32 	%r4, 2;
	// begin inline asm
	call _optix_set_payload, (%r4, %r5);
	// end inline asm
	// begin inline asm
	call (%r6), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r7, 3;
	// begin inline asm
	call _optix_set_payload, (%r7, %r6);
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_attribute_0, ();
	// end inline asm
	mov.b32 	%f250, %r9;
	// begin inline asm
	call (%r10), _optix_get_attribute_1, ();
	// end inline asm
	mov.b32 	%f249, %r10;
	// begin inline asm
	call (%r11), _optix_get_attribute_2, ();
	// end inline asm
	mov.b32 	%f248, %r11;
	ld.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd21+112];
	ld.f32 	%f243, [%rd21+80];
	setp.lt.ftz.f32 	%p1, %f243, 0f00000000;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;

$L__BB0_2:
	cvt.u64.u32 	%rd2, %r6;
	ld.u64 	%rd22, [%rd21+8];
	mul.wide.u32 	%rd23, %r6, 12;
	add.s64 	%rd24, %rd22, %rd23;
	ld.f32 	%f243, [%rd24];
	ld.f32 	%f242, [%rd24+4];
	ld.f32 	%f241, [%rd24+8];
	ld.u32 	%r12, [%rd21+100];
	setp.ne.s32 	%p2, %r12, 5;
	@%p2 bra 	$L__BB0_4;

	// begin inline asm
	call (%r13), _optix_get_attribute_3, ();
	// end inline asm
	mov.b32 	%f59, %r13;
	ld.u64 	%rd25, [%rd21+16];
	mul.lo.s64 	%rd26, %rd2, 12;
	add.s64 	%rd27, %rd25, %rd26;
	ld.f32 	%f60, [%rd27];
	sub.ftz.f32 	%f61, %f60, %f243;
	ld.f32 	%f62, [%rd27+4];
	sub.ftz.f32 	%f63, %f62, %f242;
	ld.f32 	%f64, [%rd27+8];
	sub.ftz.f32 	%f65, %f64, %f241;
	fma.rn.ftz.f32 	%f243, %f61, %f59, %f243;
	fma.rn.ftz.f32 	%f242, %f63, %f59, %f242;
	fma.rn.ftz.f32 	%f241, %f65, %f59, %f241;
	bra.uni 	$L__BB0_4;

$L__BB0_1:
	ld.f32 	%f242, [%rd21+84];
	ld.f32 	%f241, [%rd21+88];

$L__BB0_4:
	mul.ftz.f32 	%f253, %f55, %f243;
	mul.ftz.f32 	%f252, %f56, %f242;
	mul.ftz.f32 	%f251, %f57, %f241;
	ld.u32 	%r2, [%rd21+224];
	setp.eq.s32 	%p3, %r2, 0;
	@%p3 bra 	$L__BB0_27;

	// begin inline asm
	call (%r14), _optix_get_attribute_5, ();
	// end inline asm
	rem.u32 	%r17, %r14, %r2;
	// begin inline asm
	call (%r15), _optix_get_attribute_3, ();
	// end inline asm
	mov.b32 	%f23, %r15;
	// begin inline asm
	call (%r16), _optix_get_attribute_4, ();
	// end inline asm
	mov.b32 	%f24, %r16;
	cvt.s64.s32 	%rd3, %r17;
	ld.u64 	%rd28, [%rd21+192];
	mul.wide.s32 	%rd29, %r17, 8;
	add.s64 	%rd30, %rd28, %rd29;
	ld.u64 	%rd4, [%rd30];
	setp.eq.s64 	%p4, %rd4, 0;
	@%p4 bra 	$L__BB0_7;

	tex.2d.v4.f32.f32 	{%f66, %f67, %f68, %f69}, [%rd4, {%f23, %f24}];
	mul.ftz.f32 	%f253, %f253, %f66;
	mul.ftz.f32 	%f252, %f252, %f67;
	mul.ftz.f32 	%f251, %f251, %f68;

$L__BB0_7:
	ld.u64 	%rd31, [%rd21+216];
	shl.b64 	%rd32, %rd3, 3;
	add.s64 	%rd33, %rd31, %rd32;
	ld.u64 	%rd5, [%rd33];
	setp.eq.s64 	%p5, %rd5, 0;
	@%p5 bra 	$L__BB0_27;

	tex.2d.v4.f32.f32 	{%f31, %f32, %f70, %f71}, [%rd5, {%f23, %f24}];
	ld.u32 	%r18, [%rd21+100];
	setp.eq.s32 	%p6, %r18, 4;
	@%p6 bra 	$L__BB0_26;

	setp.eq.s32 	%p7, %r18, 7;
	@%p7 bra 	$L__BB0_25;

	setp.ne.s32 	%p8, %r18, 8;
	@%p8 bra 	$L__BB0_27;

	mov.f32 	%f247, 0f3F800000;
	// begin inline asm
	call (%r19), _optix_get_attribute_5, ();
	// end inline asm
	setp.gt.s32 	%p9, %r19, 2;
	@%p9 bra 	$L__BB0_16;

	setp.eq.s32 	%p13, %r19, 0;
	@%p13 bra 	$L__BB0_23;

	setp.eq.s32 	%p14, %r19, 1;
	@%p14 bra 	$L__BB0_22;

	setp.eq.s32 	%p15, %r19, 2;
	@%p15 bra 	$L__BB0_15;
	bra.uni 	$L__BB0_24;

$L__BB0_15:
	ld.u64 	%rd54, [%rd21+32];
	ld.u64 	%rd55, [%rd21+24];
	mov.f32 	%f247, 0fBF800000;
	bra.uni 	$L__BB0_24;

$L__BB0_26:
	ld.u64 	%rd49, [%rd21+16];
	mul.wide.u32 	%rd50, %r6, 12;
	add.s64 	%rd51, %rd49, %rd50;
	mul.ftz.f32 	%f157, %f249, %f249;
	fma.rn.ftz.f32 	%f158, %f250, %f250, %f157;
	fma.rn.ftz.f32 	%f159, %f248, %f248, %f158;
	rsqrt.approx.ftz.f32 	%f160, %f159;
	mul.ftz.f32 	%f161, %f160, %f250;
	mul.ftz.f32 	%f162, %f160, %f249;
	mul.ftz.f32 	%f163, %f160, %f248;
	ld.f32 	%f164, [%rd51+4];
	mul.ftz.f32 	%f165, %f164, %f163;
	ld.f32 	%f166, [%rd51+8];
	mul.ftz.f32 	%f167, %f166, %f162;
	sub.ftz.f32 	%f168, %f165, %f167;
	mul.ftz.f32 	%f169, %f166, %f161;
	ld.f32 	%f170, [%rd51];
	mul.ftz.f32 	%f171, %f170, %f163;
	sub.ftz.f32 	%f172, %f169, %f171;
	mul.ftz.f32 	%f173, %f170, %f162;
	mul.ftz.f32 	%f174, %f164, %f161;
	sub.ftz.f32 	%f175, %f173, %f174;
	mul.ftz.f32 	%f176, %f172, %f172;
	fma.rn.ftz.f32 	%f177, %f168, %f168, %f176;
	fma.rn.ftz.f32 	%f178, %f175, %f175, %f177;
	rsqrt.approx.ftz.f32 	%f179, %f178;
	mul.ftz.f32 	%f180, %f179, %f168;
	mul.ftz.f32 	%f181, %f179, %f172;
	mul.ftz.f32 	%f182, %f179, %f175;
	mul.ftz.f32 	%f183, %f162, %f182;
	mul.ftz.f32 	%f184, %f163, %f181;
	sub.ftz.f32 	%f185, %f183, %f184;
	mul.ftz.f32 	%f186, %f163, %f180;
	mul.ftz.f32 	%f187, %f161, %f182;
	sub.ftz.f32 	%f188, %f186, %f187;
	mul.ftz.f32 	%f189, %f161, %f181;
	mul.ftz.f32 	%f190, %f162, %f180;
	sub.ftz.f32 	%f191, %f189, %f190;
	fma.rn.ftz.f32 	%f192, %f31, %f180, %f161;
	fma.rn.ftz.f32 	%f193, %f31, %f181, %f162;
	fma.rn.ftz.f32 	%f194, %f31, %f182, %f163;
	fma.rn.ftz.f32 	%f250, %f32, %f185, %f192;
	fma.rn.ftz.f32 	%f249, %f32, %f188, %f193;
	fma.rn.ftz.f32 	%f248, %f32, %f191, %f194;
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	ld.v2.u64 	{%rd42, %rd43}, [%rd21+16];
	mul.wide.u32 	%rd46, %r6, 12;
	add.s64 	%rd47, %rd42, %rd46;
	add.s64 	%rd48, %rd43, %rd46;
	ld.f32 	%f119, [%rd47];
	ld.f32 	%f120, [%rd47+4];
	mul.ftz.f32 	%f121, %f120, %f120;
	fma.rn.ftz.f32 	%f122, %f119, %f119, %f121;
	ld.f32 	%f123, [%rd47+8];
	fma.rn.ftz.f32 	%f124, %f123, %f123, %f122;
	sqrt.approx.ftz.f32 	%f125, %f124;
	ld.f32 	%f126, [%rd48];
	ld.f32 	%f127, [%rd48+4];
	mul.ftz.f32 	%f128, %f127, %f127;
	fma.rn.ftz.f32 	%f129, %f126, %f126, %f128;
	ld.f32 	%f130, [%rd48+8];
	fma.rn.ftz.f32 	%f131, %f130, %f130, %f129;
	rsqrt.approx.ftz.f32 	%f132, %f124;
	rsqrt.approx.ftz.f32 	%f133, %f131;
	mul.ftz.f32 	%f134, %f119, %f132;
	mul.ftz.f32 	%f135, %f120, %f132;
	mul.ftz.f32 	%f136, %f123, %f132;
	mul.ftz.f32 	%f137, %f126, %f133;
	mul.ftz.f32 	%f138, %f127, %f133;
	mul.ftz.f32 	%f139, %f130, %f133;
	mul.ftz.f32 	%f140, %f125, %f133;
	ld.f32 	%f141, [%rd21+184];
	mul.ftz.f32 	%f142, %f141, %f140;
	mul.ftz.f32 	%f143, %f32, %f142;
	mul.ftz.f32 	%f144, %f249, %f249;
	fma.rn.ftz.f32 	%f145, %f250, %f250, %f144;
	fma.rn.ftz.f32 	%f146, %f248, %f248, %f145;
	rsqrt.approx.ftz.f32 	%f147, %f146;
	mul.ftz.f32 	%f148, %f31, %f134;
	mul.ftz.f32 	%f149, %f31, %f135;
	mul.ftz.f32 	%f150, %f31, %f136;
	fma.rn.ftz.f32 	%f151, %f147, %f250, %f148;
	fma.rn.ftz.f32 	%f152, %f147, %f249, %f149;
	fma.rn.ftz.f32 	%f153, %f147, %f248, %f150;
	mul.ftz.f32 	%f154, %f143, %f137;
	mul.ftz.f32 	%f155, %f143, %f138;
	mul.ftz.f32 	%f156, %f143, %f139;
	sub.ftz.f32 	%f250, %f151, %f154;
	sub.ftz.f32 	%f249, %f152, %f155;
	sub.ftz.f32 	%f248, %f153, %f156;
	bra.uni 	$L__BB0_27;

$L__BB0_16:
	setp.eq.s32 	%p10, %r19, 3;
	@%p10 bra 	$L__BB0_21;

	setp.eq.s32 	%p11, %r19, 4;
	@%p11 bra 	$L__BB0_20;

	setp.ne.s32 	%p12, %r19, 5;
	@%p12 bra 	$L__BB0_24;

	ld.u64 	%rd54, [%rd21+24];
	ld.u64 	%rd55, [%rd21+32];
	bra.uni 	$L__BB0_24;

$L__BB0_23:
	ld.v2.u64 	{%rd55, %rd54}, [%rd21+16];
	mov.f32 	%f247, 0fBF800000;
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	ld.u64 	%rd54, [%rd21+16];
	ld.u64 	%rd55, [%rd21+32];
	mov.f32 	%f247, 0fBF800000;
	bra.uni 	$L__BB0_24;

$L__BB0_21:
	ld.v2.u64 	{%rd54, %rd55}, [%rd21+16];
	bra.uni 	$L__BB0_24;

$L__BB0_20:
	ld.u64 	%rd54, [%rd21+32];
	ld.u64 	%rd55, [%rd21+16];

$L__BB0_24:
	mul.wide.u32 	%rd39, %r6, 12;
	add.s64 	%rd40, %rd54, %rd39;
	add.s64 	%rd41, %rd55, %rd39;
	ld.f32 	%f79, [%rd40];
	ld.f32 	%f80, [%rd40+4];
	mul.ftz.f32 	%f81, %f80, %f80;
	fma.rn.ftz.f32 	%f82, %f79, %f79, %f81;
	ld.f32 	%f83, [%rd40+8];
	fma.rn.ftz.f32 	%f84, %f83, %f83, %f82;
	sqrt.approx.ftz.f32 	%f85, %f84;
	ld.f32 	%f86, [%rd41];
	ld.f32 	%f87, [%rd41+4];
	mul.ftz.f32 	%f88, %f87, %f87;
	fma.rn.ftz.f32 	%f89, %f86, %f86, %f88;
	ld.f32 	%f90, [%rd41+8];
	fma.rn.ftz.f32 	%f91, %f90, %f90, %f89;
	rsqrt.approx.ftz.f32 	%f92, %f84;
	rsqrt.approx.ftz.f32 	%f93, %f91;
	mul.ftz.f32 	%f94, %f79, %f92;
	mul.ftz.f32 	%f95, %f80, %f92;
	mul.ftz.f32 	%f96, %f83, %f92;
	mul.ftz.f32 	%f97, %f86, %f93;
	mul.ftz.f32 	%f98, %f87, %f93;
	mul.ftz.f32 	%f99, %f90, %f93;
	mul.ftz.f32 	%f100, %f85, %f93;
	ld.f32 	%f101, [%rd21+184];
	mul.ftz.f32 	%f102, %f101, %f100;
	mul.ftz.f32 	%f103, %f32, %f102;
	mul.ftz.f32 	%f104, %f249, %f249;
	fma.rn.ftz.f32 	%f105, %f250, %f250, %f104;
	fma.rn.ftz.f32 	%f106, %f248, %f248, %f105;
	rsqrt.approx.ftz.f32 	%f107, %f106;
	mul.ftz.f32 	%f108, %f31, %f247;
	mul.ftz.f32 	%f109, %f108, %f94;
	mul.ftz.f32 	%f110, %f108, %f95;
	mul.ftz.f32 	%f111, %f108, %f96;
	fma.rn.ftz.f32 	%f112, %f107, %f250, %f109;
	fma.rn.ftz.f32 	%f113, %f107, %f249, %f110;
	fma.rn.ftz.f32 	%f114, %f107, %f248, %f111;
	mul.ftz.f32 	%f115, %f247, %f103;
	mul.ftz.f32 	%f116, %f115, %f97;
	mul.ftz.f32 	%f117, %f115, %f98;
	mul.ftz.f32 	%f118, %f115, %f99;
	sub.ftz.f32 	%f250, %f112, %f116;
	sub.ftz.f32 	%f249, %f113, %f117;
	sub.ftz.f32 	%f248, %f114, %f118;

$L__BB0_27:
	mov.u32 	%r22, 0;
	// begin inline asm
	call (%r21), _optix_get_payload, (%r22);
	// end inline asm
	mov.u32 	%r24, 1;
	// begin inline asm
	call (%r23), _optix_get_payload, (%r24);
	// end inline asm
	cvt.u64.u32 	%rd52, %r21;
	cvt.u64.u32 	%rd53, %r23;
	bfi.b64 	%rd20, %rd52, %rd53, 32, 32;
	mov.f32 	%f203, 0f3F800000;
	st.v4.f32 	[%rd20+48], {%f203, %f203, %f203, %f203};
	// begin inline asm
	call (%f195), _optix_get_ray_tmax, ();
	// end inline asm
	st.f32 	[%rd20+108], %f195;
	st.v2.f32 	[%rd20], {%f253, %f252};
	st.f32 	[%rd20+8], %f251;
	// begin inline asm
	call (%f196), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f197), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f198), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f199), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f200), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f201), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f202), _optix_get_world_ray_direction_z, ();
	// end inline asm
	fma.rn.ftz.f32 	%f204, %f199, %f202, %f198;
	fma.rn.ftz.f32 	%f205, %f199, %f201, %f197;
	fma.rn.ftz.f32 	%f206, %f199, %f200, %f196;
	st.v2.f32 	[%rd20+96], {%f206, %f205};
	st.f32 	[%rd20+104], %f204;
	ld.u32 	%r25, [%rd20+12];
	or.b32  	%r3, %r25, -2147483648;
	st.u32 	[%rd20+12], %r3;
	and.b32  	%r26, %r25, 16777216;
	setp.eq.s32 	%p16, %r26, 0;
	@%p16 bra 	$L__BB0_29;

	ld.f32 	%f207, [%rd20+16];
	ld.f32 	%f208, [%rd20];
	mul.ftz.f32 	%f209, %f208, %f207;
	st.f32 	[%rd20+16], %f209;
	ld.f32 	%f210, [%rd20+20];
	ld.f32 	%f211, [%rd20+4];
	mul.ftz.f32 	%f212, %f211, %f210;
	st.f32 	[%rd20+20], %f212;
	ld.f32 	%f213, [%rd20+24];
	ld.f32 	%f214, [%rd20+8];
	mul.ftz.f32 	%f215, %f214, %f213;
	st.f32 	[%rd20+24], %f215;

$L__BB0_29:
	ld.f32 	%f49, [%rd20+112];
	ld.f32 	%f50, [%rd20+116];
	mul.ftz.f32 	%f216, %f249, %f50;
	fma.rn.ftz.f32 	%f217, %f250, %f49, %f216;
	ld.f32 	%f51, [%rd20+120];
	fma.rn.ftz.f32 	%f218, %f248, %f51, %f217;
	setp.ge.ftz.f32 	%p17, %f218, 0f00000000;
	selp.b32 	%r27, 16, 0, %p17;
	or.b32  	%r28, %r27, %r3;
	st.u32 	[%rd20+12], %r28;
	and.b32  	%r29, %r28, 16;
	setp.eq.s32 	%p18, %r29, 0;
	@%p18 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_30;

$L__BB0_32:
	mov.u32 	%r35, 1065353216;
	st.v2.f32 	[%rd20+32], {%f203, %f203};
	st.u32 	[%rd20+40], %r35;
	st.v2.f32 	[%rd20+128], {%f203, %f203};
	st.u32 	[%rd20+136], %r35;
	mov.u32 	%r34, -1;
	// begin inline asm
	call _optix_set_payload, (%r4, %r34);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r7, %r34);
	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_30:
	mul.ftz.f32 	%f219, %f250, %f250;
	fma.rn.ftz.f32 	%f220, %f249, %f249, %f219;
	fma.rn.ftz.f32 	%f221, %f248, %f248, %f220;
	rsqrt.approx.ftz.f32 	%f222, %f221;
	mul.ftz.f32 	%f223, %f250, %f222;
	mul.ftz.f32 	%f224, %f249, %f222;
	mul.ftz.f32 	%f225, %f248, %f222;
	add.ftz.f32 	%f226, %f223, %f223;
	add.ftz.f32 	%f227, %f224, %f224;
	add.ftz.f32 	%f228, %f225, %f225;
	neg.ftz.f32 	%f229, %f49;
	mul.ftz.f32 	%f230, %f223, %f229;
	neg.ftz.f32 	%f231, %f50;
	mul.ftz.f32 	%f232, %f224, %f50;
	sub.ftz.f32 	%f233, %f230, %f232;
	neg.ftz.f32 	%f234, %f51;
	mul.ftz.f32 	%f235, %f225, %f51;
	sub.ftz.f32 	%f236, %f233, %f235;
	mul.ftz.f32 	%f237, %f236, %f226;
	mul.ftz.f32 	%f238, %f236, %f227;
	mul.ftz.f32 	%f239, %f236, %f228;
	sub.ftz.f32 	%f52, %f234, %f239;
	sub.ftz.f32 	%f54, %f231, %f238;
	sub.ftz.f32 	%f53, %f229, %f237;
	st.v2.f32 	[%rd20+128], {%f53, %f54};
	st.f32 	[%rd20+136], %f52;
	ld.u32 	%r30, [%rd20+44];
	setp.ne.s32 	%p19, %r30, 0;
	@%p19 bra 	$L__BB0_33;

	st.v2.f32 	[%rd20+32], {%f53, %f54};
	st.f32 	[%rd20+40], %f52;

$L__BB0_33:
	ret;

}

