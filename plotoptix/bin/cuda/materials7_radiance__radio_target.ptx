//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30033411
// Cuda compilation tools, release 11.4, V11.4.48
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_50
.address_size 64

	// .globl	__closesthit__radiance__radio_target
.const .align 8 .b8 params[288];

.visible .entry __closesthit__radiance__radio_target()
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<83>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<22>;


	// begin inline asm
	call (%rd6), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u32 	%r6, [%rd6+96];
	mov.u32 	%r5, 2;
	// begin inline asm
	call _optix_set_payload, (%r5, %r6);
	// end inline asm
	// begin inline asm
	call (%r7), _optix_read_primitive_idx, ();
	// end inline asm
	mov.u32 	%r8, 3;
	// begin inline asm
	call _optix_set_payload, (%r8, %r7);
	// end inline asm
	ld.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd6+112];
	ld.f32 	%f76, [%rd6+80];
	setp.lt.ftz.f32 	%p1, %f76, 0f00000000;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;

$L__BB0_2:
	cvt.u64.u32 	%rd2, %r7;
	ld.u64 	%rd7, [%rd6+8];
	mul.wide.u32 	%rd8, %r7, 12;
	add.s64 	%rd9, %rd7, %rd8;
	ld.f32 	%f76, [%rd9];
	ld.f32 	%f75, [%rd9+4];
	ld.f32 	%f74, [%rd9+8];
	ld.u32 	%r13, [%rd6+100];
	setp.ne.s32 	%p2, %r13, 5;
	@%p2 bra 	$L__BB0_4;

	// begin inline asm
	call (%r14), _optix_get_attribute_3, ();
	// end inline asm
	mov.b32 	%f33, %r14;
	ld.u64 	%rd10, [%rd6+16];
	mul.lo.s64 	%rd11, %rd2, 12;
	add.s64 	%rd12, %rd10, %rd11;
	ld.f32 	%f34, [%rd12];
	sub.ftz.f32 	%f35, %f34, %f76;
	ld.f32 	%f36, [%rd12+4];
	sub.ftz.f32 	%f37, %f36, %f75;
	ld.f32 	%f38, [%rd12+8];
	sub.ftz.f32 	%f39, %f38, %f74;
	fma.rn.ftz.f32 	%f76, %f35, %f33, %f76;
	fma.rn.ftz.f32 	%f75, %f37, %f33, %f75;
	fma.rn.ftz.f32 	%f74, %f39, %f33, %f74;
	bra.uni 	$L__BB0_4;

$L__BB0_1:
	ld.f32 	%f75, [%rd6+84];
	ld.f32 	%f74, [%rd6+88];

$L__BB0_4:
	mul.ftz.f32 	%f82, %f29, %f76;
	mul.ftz.f32 	%f81, %f30, %f75;
	mul.ftz.f32 	%f80, %f31, %f74;
	ld.u32 	%r2, [%rd6+224];
	setp.eq.s32 	%p3, %r2, 0;
	@%p3 bra 	$L__BB0_9;

	// begin inline asm
	call (%r15), _optix_get_attribute_5, ();
	// end inline asm
	rem.u32 	%r18, %r15, %r2;
	// begin inline asm
	call (%r16), _optix_get_attribute_3, ();
	// end inline asm
	// begin inline asm
	call (%r17), _optix_get_attribute_4, ();
	// end inline asm
	cvt.s64.s32 	%rd3, %r18;
	ld.u64 	%rd13, [%rd6+192];
	mul.wide.s32 	%rd14, %r18, 8;
	add.s64 	%rd15, %rd13, %rd14;
	ld.u64 	%rd4, [%rd15];
	setp.eq.s64 	%p4, %rd4, 0;
	@%p4 bra 	$L__BB0_7;

	mov.b32 	%f40, %r16;
	mov.b32 	%f41, %r17;
	tex.2d.v4.f32.f32 	{%f42, %f43, %f44, %f45}, [%rd4, {%f40, %f41}];
	mul.ftz.f32 	%f82, %f82, %f42;
	mul.ftz.f32 	%f81, %f81, %f43;
	mul.ftz.f32 	%f80, %f80, %f44;

$L__BB0_7:
	ld.u64 	%rd16, [%rd6+216];
	shl.b64 	%rd17, %rd3, 3;
	add.s64 	%rd18, %rd16, %rd17;
	ld.u64 	%rd19, [%rd18];
	setp.eq.s64 	%p5, %rd19, 0;
	@%p5 bra 	$L__BB0_9;

	ld.u32 	%r19, [%rd6+100];
	setp.ne.s32 	%p6, %r19, 8;

$L__BB0_9:
	mov.u32 	%r22, 0;
	// begin inline asm
	call (%r21), _optix_get_payload, (%r22);
	// end inline asm
	mov.u32 	%r24, 1;
	// begin inline asm
	call (%r23), _optix_get_payload, (%r24);
	// end inline asm
	cvt.u64.u32 	%rd20, %r21;
	cvt.u64.u32 	%rd21, %r23;
	bfi.b64 	%rd5, %rd20, %rd21, 32, 32;
	mov.f32 	%f54, 0f3F800000;
	st.v4.f32 	[%rd5+48], {%f54, %f54, %f54, %f54};
	// begin inline asm
	call (%f46), _optix_get_ray_tmax, ();
	// end inline asm
	st.f32 	[%rd5+108], %f46;
	st.v2.f32 	[%rd5], {%f82, %f81};
	st.f32 	[%rd5+8], %f80;
	// begin inline asm
	call (%f47), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f48), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f49), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f50), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f51), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f52), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f53), _optix_get_world_ray_direction_z, ();
	// end inline asm
	fma.rn.ftz.f32 	%f55, %f50, %f53, %f49;
	fma.rn.ftz.f32 	%f56, %f50, %f52, %f48;
	fma.rn.ftz.f32 	%f57, %f50, %f51, %f47;
	st.v2.f32 	[%rd5+96], {%f57, %f56};
	st.f32 	[%rd5+104], %f55;
	ld.u32 	%r25, [%rd5+12];
	or.b32  	%r26, %r25, -2147483648;
	st.u32 	[%rd5+12], %r26;
	and.b32  	%r27, %r25, 16777216;
	setp.eq.s32 	%p7, %r27, 0;
	@%p7 bra 	$L__BB0_11;

	ld.f32 	%f58, [%rd5+16];
	ld.f32 	%f59, [%rd5];
	mul.ftz.f32 	%f60, %f59, %f58;
	st.f32 	[%rd5+16], %f60;
	ld.f32 	%f61, [%rd5+20];
	ld.f32 	%f62, [%rd5+4];
	mul.ftz.f32 	%f63, %f62, %f61;
	st.f32 	[%rd5+20], %f63;
	ld.f32 	%f64, [%rd5+24];
	ld.f32 	%f65, [%rd5+8];
	mul.ftz.f32 	%f66, %f65, %f64;
	st.f32 	[%rd5+24], %f66;

$L__BB0_11:
	ld.u32 	%r28, [%rd5+44];
	setp.ne.s32 	%p8, %r28, 0;
	@%p8 bra 	$L__BB0_13;

	ld.v4.f32 	{%f67, %f68, %f69, %f70}, [%rd5+128];
	st.v2.f32 	[%rd5+32], {%f67, %f68};
	st.f32 	[%rd5+40], %f69;

$L__BB0_13:
	ret;

}

