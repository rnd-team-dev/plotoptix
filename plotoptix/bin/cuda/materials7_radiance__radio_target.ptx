//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28540450
// Cuda compilation tools, release 11.0, V11.0.194
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_50
.address_size 64

	// .globl	__closesthit__radiance__radio_target
.const .align 8 .b8 params[288];

.visible .entry __closesthit__radiance__radio_target(

)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<95>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<30>;


	// inline asm
	call (%rd9), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u32 	%r3, [%rd9+96];
	// inline asm
	call _optix_set_payload_2, (%r3);
	// inline asm
	// inline asm
	call (%r4), _optix_read_primitive_idx, ();
	// inline asm
	// inline asm
	call _optix_set_payload_3, (%r4);
	// inline asm
	ld.v4.f32 	{%f31, %f32, %f33, %f34}, [%rd9+112];
	ld.f32 	%f88, [%rd9+80];
	setp.lt.ftz.f32	%p1, %f88, 0f00000000;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	ld.u64 	%rd10, [%rd9+8];
	cvt.u64.u32	%rd2, %r4;
	mul.wide.u32 	%rd11, %r4, 12;
	add.s64 	%rd12, %rd10, %rd11;
	ld.f32 	%f88, [%rd12];
	ld.f32 	%f87, [%rd12+4];
	ld.f32 	%f86, [%rd12+8];
	ld.u32 	%r6, [%rd9+100];
	setp.ne.s32	%p2, %r6, 5;
	@%p2 bra 	BB0_4;

	// inline asm
	call (%r7), _optix_get_attribute_3, ();
	// inline asm
	mov.b32 	 %f35, %r7;
	ld.u64 	%rd13, [%rd9+16];
	mul.lo.s64 	%rd14, %rd2, 12;
	add.s64 	%rd15, %rd13, %rd14;
	ld.f32 	%f36, [%rd15];
	sub.ftz.f32 	%f37, %f36, %f88;
	ld.f32 	%f38, [%rd15+4];
	sub.ftz.f32 	%f39, %f38, %f87;
	ld.f32 	%f40, [%rd15+8];
	sub.ftz.f32 	%f41, %f40, %f86;
	fma.rn.ftz.f32 	%f88, %f35, %f37, %f88;
	fma.rn.ftz.f32 	%f87, %f35, %f39, %f87;
	fma.rn.ftz.f32 	%f86, %f35, %f41, %f86;
	bra.uni 	BB0_4;

BB0_1:
	ld.f32 	%f87, [%rd9+84];
	ld.f32 	%f86, [%rd9+88];

BB0_4:
	mul.ftz.f32 	%f94, %f31, %f88;
	mul.ftz.f32 	%f93, %f32, %f87;
	mul.ftz.f32 	%f92, %f33, %f86;
	ld.u32 	%r2, [%rd9+224];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB0_13;

	// inline asm
	call (%r8), _optix_get_attribute_5, ();
	// inline asm
	rem.u32 	%r11, %r8, %r2;
	// inline asm
	call (%r9), _optix_get_attribute_3, ();
	// inline asm
	mov.b32 	 %f20, %r9;
	// inline asm
	call (%r10), _optix_get_attribute_4, ();
	// inline asm
	mov.b32 	 %f21, %r10;
	cvt.s64.s32	%rd3, %r11;
	ld.u64 	%rd16, [%rd9+192];
	mul.wide.s32 	%rd17, %r11, 8;
	add.s64 	%rd18, %rd16, %rd17;
	ld.u64 	%rd4, [%rd18];
	setp.eq.s64	%p4, %rd4, 0;
	@%p4 bra 	BB0_7;

	tex.2d.v4.f32.f32	{%f42, %f43, %f44, %f45}, [%rd4, {%f20, %f21}];
	mul.ftz.f32 	%f94, %f94, %f42;
	mul.ftz.f32 	%f93, %f93, %f43;
	mul.ftz.f32 	%f92, %f92, %f44;

BB0_7:
	ld.u64 	%rd19, [%rd9+200];
	shl.b64 	%rd20, %rd3, 3;
	add.s64 	%rd21, %rd19, %rd20;
	ld.u64 	%rd5, [%rd21];
	setp.eq.s64	%p5, %rd5, 0;
	@%p5 bra 	BB0_9;

	tex.2d.v4.f32.f32	{%f46, %f47, %f48, %f49}, [%rd5, {%f20, %f21}];

BB0_9:
	ld.u64 	%rd22, [%rd9+208];
	add.s64 	%rd24, %rd22, %rd20;
	ld.u64 	%rd6, [%rd24];
	setp.eq.s64	%p6, %rd6, 0;
	@%p6 bra 	BB0_11;

	tex.2d.v4.f32.f32	{%f50, %f51, %f52, %f53}, [%rd6, {%f20, %f21}];

BB0_11:
	ld.u64 	%rd25, [%rd9+216];
	add.s64 	%rd27, %rd25, %rd20;
	ld.u64 	%rd7, [%rd27];
	setp.eq.s64	%p7, %rd7, 0;
	@%p7 bra 	BB0_13;

	tex.2d.v4.f32.f32	{%f54, %f55, %f56, %f57}, [%rd7, {%f20, %f21}];

BB0_13:
	// inline asm
	call (%r12), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r13), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd28, %r12;
	cvt.u64.u32	%rd29, %r13;
	bfi.b64 	%rd8, %rd28, %rd29, 32, 32;
	mov.f32 	%f65, 0f3F800000;
	st.v4.f32 	[%rd8+48], {%f65, %f65, %f65, %f65};
	// inline asm
	call (%f58), _optix_get_ray_tmax, ();
	// inline asm
	st.f32 	[%rd8+108], %f58;
	st.v2.f32 	[%rd8], {%f94, %f93};
	st.f32 	[%rd8+8], %f92;
	// inline asm
	call (%f59), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f60), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f61), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f62), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f63), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f64), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f66, %f58, %f64, %f61;
	fma.rn.ftz.f32 	%f67, %f58, %f63, %f60;
	fma.rn.ftz.f32 	%f68, %f58, %f62, %f59;
	st.v2.f32 	[%rd8+96], {%f68, %f67};
	st.f32 	[%rd8+104], %f66;
	ld.u32 	%r14, [%rd8+12];
	or.b32  	%r15, %r14, -2147483648;
	st.u32 	[%rd8+12], %r15;
	and.b32  	%r16, %r14, 16777216;
	setp.eq.s32	%p8, %r16, 0;
	@%p8 bra 	BB0_15;

	ld.v4.f32 	{%f69, %f70, %f71, %f72}, [%rd8+16];
	mul.ftz.f32 	%f76, %f93, %f70;
	mul.ftz.f32 	%f77, %f94, %f69;
	st.v2.f32 	[%rd8+16], {%f77, %f76};
	mul.ftz.f32 	%f78, %f92, %f71;
	st.f32 	[%rd8+24], %f78;

BB0_15:
	ld.u32 	%r17, [%rd8+44];
	setp.ne.s32	%p9, %r17, 0;
	@%p9 bra 	BB0_17;

	ld.v4.f32 	{%f79, %f80, %f81, %f82}, [%rd8+128];
	st.v2.f32 	[%rd8+32], {%f79, %f80};
	st.f32 	[%rd8+40], %f81;

BB0_17:
	ret;
}


