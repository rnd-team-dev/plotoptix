//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28540450
// Cuda compilation tools, release 11.0, V11.0.194
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_50
.address_size 64

	// .globl	__raygen__tex_test_camera
.const .align 8 .b8 params[288];

.visible .entry __raygen__tex_test_camera(

)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<99>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<37>;


	ld.const.v2.u32 	{%r9, %r10}, [params+64];
	// inline asm
	call (%r6), _optix_get_launch_index_x, ();
	// inline asm
	ld.const.u64 	%rd6, [params+16];
	cvta.to.global.u64 	%rd7, %rd6;
	cvt.u64.u32	%rd1, %r6;
	mul.wide.u32 	%rd8, %r6, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.v2.u32 	{%r11, %r12}, [%rd9];
	add.s32 	%r13, %r9, -1;
	setp.gt.s32	%p2, %r11, %r13;
	add.s32 	%r14, %r10, -1;
	setp.gt.s32	%p3, %r12, %r14;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB0_13;

	cvt.rn.f32.s32	%f32, %r11;
	add.ftz.f32 	%f33, %f32, 0f3F000000;
	cvt.rn.f32.s32	%f34, %r12;
	add.ftz.f32 	%f35, %f34, 0f3F000000;
	cvt.rn.f32.s32	%f36, %r9;
	div.approx.ftz.f32 	%f37, %f33, %f36;
	cvt.rn.f32.s32	%f38, %r10;
	div.approx.ftz.f32 	%f39, %f35, %f38;
	ld.const.u64 	%rd10, [params+208];
	mov.f32 	%f40, 0f3F800000;
	sub.ftz.f32 	%f41, %f40, %f39;
	tex.2d.v4.f32.f32	{%f1, %f42, %f43, %f44}, [%rd10, {%f37, %f41}];
	abs.ftz.f32 	%f45, %f1;
	setp.gtu.ftz.f32	%p5, %f45, 0f7F800000;
	mov.f32 	%f87, 0f00000000;
	abs.ftz.f32 	%f46, %f87;
	setp.gtu.ftz.f32	%p6, %f46, 0f7F800000;
	or.pred  	%p7, %p5, %p6;
	setp.eq.ftz.f32	%p8, %f45, 0f7F800000;
	or.pred  	%p9, %p7, %p8;
	setp.eq.ftz.f32	%p10, %f46, 0f7F800000;
	or.pred  	%p1, %p9, %p10;
	ld.const.u64 	%rd2, [params];
	cvt.u32.u64	%r5, %rd2;
	setp.eq.s32	%p11, %r5, 0;
	ld.const.u64 	%rd3, [params+24];
	mov.f32 	%f88, %f87;
	mov.f32 	%f89, %f87;
	mov.f32 	%f90, %f87;
	@%p11 bra 	BB0_3;

	cvta.to.global.u64 	%rd11, %rd3;
	shl.b64 	%rd12, %rd1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.v4.f32 	{%f87, %f48, %f49, %f90}, [%rd13];
	add.ftz.f32 	%f88, %f48, 0f00000000;
	add.ftz.f32 	%f89, %f49, 0f00000000;

BB0_3:
	cvta.to.global.u64 	%rd14, %rd3;
	shl.b64 	%rd15, %rd1, 4;
	add.s64 	%rd16, %rd14, %rd15;
	selp.f32	%f53, 0f00000000, %f1, %p1;
	selp.f32	%f54, 0f00000000, 0f3F800000, %p1;
	add.ftz.f32 	%f55, %f54, %f90;
	add.ftz.f32 	%f56, %f53, %f87;
	st.global.v4.f32 	[%rd16], {%f56, %f88, %f89, %f55};
	ld.const.u64 	%rd4, [params+32];
	setp.eq.s64	%p12, %rd4, 0;
	@%p12 bra 	BB0_7;

	mov.f32 	%f61, 0f3E4CCCCD;
	abs.ftz.f32 	%f10, %f61;
	mov.f32 	%f91, 0f00000000;
	mov.f32 	%f92, %f91;
	mov.f32 	%f93, %f91;
	mov.f32 	%f94, %f91;
	@%p11 bra 	BB0_6;

	cvta.to.global.u64 	%rd17, %rd4;
	add.s64 	%rd19, %rd17, %rd15;
	ld.global.v4.f32 	{%f91, %f92, %f93, %f65}, [%rd19];
	add.ftz.f32 	%f94, %f65, 0f00000000;

BB0_6:
	setp.lt.ftz.f32	%p14, %f10, 0f7F800000;
	selp.f32	%f67, 0f3E4CCCCD, 0f00000000, %p14;
	cvta.to.global.u64 	%rd20, %rd4;
	add.s64 	%rd22, %rd20, %rd15;
	add.ftz.f32 	%f68, %f67, %f93;
	add.ftz.f32 	%f69, %f67, %f92;
	add.ftz.f32 	%f70, %f67, %f91;
	st.global.v4.f32 	[%rd22], {%f70, %f69, %f68, %f94};

BB0_7:
	ld.const.u64 	%rd5, [params+40];
	setp.eq.s64	%p15, %rd5, 0;
	@%p15 bra 	BB0_11;

	mov.f32 	%f75, 0f3F13CD3A;
	abs.ftz.f32 	%f19, %f75;
	mov.f32 	%f95, 0f00000000;
	mov.f32 	%f96, %f95;
	mov.f32 	%f97, %f95;
	mov.f32 	%f98, %f95;
	@%p11 bra 	BB0_10;

	cvta.to.global.u64 	%rd23, %rd5;
	add.s64 	%rd25, %rd23, %rd15;
	ld.global.v4.f32 	{%f95, %f96, %f97, %f79}, [%rd25];
	add.ftz.f32 	%f98, %f79, 0f00000000;

BB0_10:
	setp.lt.ftz.f32	%p17, %f19, 0f7F800000;
	selp.f32	%f81, 0f3F13CD3A, 0f00000000, %p17;
	cvta.to.global.u64 	%rd26, %rd5;
	add.s64 	%rd28, %rd26, %rd15;
	add.ftz.f32 	%f82, %f81, %f97;
	add.ftz.f32 	%f83, %f81, %f96;
	add.ftz.f32 	%f84, %f81, %f95;
	st.global.v4.f32 	[%rd28], {%f84, %f83, %f82, %f98};

BB0_11:
	setp.lt.u64	%p18, %rd2, 4294967296;
	@%p18 bra 	BB0_13;

	not.b32 	%r15, %r12;
	add.s32 	%r16, %r10, %r15;
	mad.lo.s32 	%r17, %r16, %r9, %r11;
	ld.const.u64 	%rd29, [params+48];
	cvta.to.global.u64 	%rd30, %rd29;
	mul.wide.u32 	%rd31, %r17, 16;
	add.s64 	%rd32, %rd30, %rd31;
	mov.f32 	%f85, 0f3F000000;
	mov.f32 	%f86, 0f3DCCCCCD;
	st.global.v4.f32 	[%rd32], {%f86, %f86, %f86, %f85};
	ld.const.u64 	%rd33, [params+56];
	cvta.to.global.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r17, 8;
	add.s64 	%rd36, %rd34, %rd35;
	mov.u32 	%r18, 305419896;
	st.global.v2.u32 	[%rd36], {%r18, %r18};

BB0_13:
	ret;
}


